,file,edge,context,domain_label
0,000002378b1d1b0060bc746ae66e3191c494fe6c.execution_graph,[time -----sleep---->time_3],"1	import time
2	
3	time.sleep(0.01)
4	
",ENVIRONMENT
1,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[traj0_5 -----traj0---->trajlist_9],"8	
9	trajlist = [nv.MDAnalysisTrajectory(traj) for traj in [traj0, traj1]]
10	
11	trajlist
",DATA_TRANSFORM
2,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[MDAnalysis -----universe---->traj0_5],"4	
5	traj0 = Universe('../data/tz2.pdb')
6	# 
7	traj1 = Universe(datafiles.PDB, datafiles.XTC)
",DATA_IMPORT_EXTRACTION
3,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[MDAnalysis -----universe---->traj1_7],"6	# 
7	traj1 = Universe(datafiles.PDB, datafiles.XTC)
8	
9	trajlist = [nv.MDAnalysisTrajectory(traj) for traj in [traj0, traj1]]
",DATA_IMPORT_EXTRACTION
4,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[traj1_7 -----traj1---->trajlist_9],"8	
9	trajlist = [nv.MDAnalysisTrajectory(traj) for traj in [traj0, traj1]]
10	
11	trajlist
",DATA_TRANSFORM
5,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[trajlist_9 -----trajlist---->trajlist_11],"10	
11	trajlist
12	
13	view = nv.NGLWidget(trajlist)
",DATA_TRANSFORM
6,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[nglview -----mdanalysis trajectory---->trajlist_9],"8	
9	trajlist = [nv.MDAnalysisTrajectory(traj) for traj in [traj0, traj1]]
10	
11	trajlist
",DATA_TRANSFORM
7,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[nglview -----nglwidget---->view_13],"12	
13	view = nv.NGLWidget(trajlist)
14	view
15	
",ENVIRONMENT
8,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[trajlist_11 -----trajlist---->view_13],"12	
13	view = nv.NGLWidget(trajlist)
14	view
15	
",ENVIRONMENT
9,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[view_13 -----view---->view_14],"13	view = nv.NGLWidget(trajlist)
14	view
15	
16	# clear repr: trpcage
",ENVIRONMENT
10,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[view_14 -----clear repr---->view_17],"16	# clear repr: trpcage
17	view._clear_repr(component=1)
18	
19	# clear repr: trpzip2
",ENVIRONMENT
11,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[view_17 -----clear repr---->view_20],"19	# clear repr: trpzip2
20	view._clear_repr(component=0)
21	
22	# try back: trpcage
",ENVIRONMENT
12,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[view_20 -----add line---->view_23],"22	# try back: trpcage
23	view.add_line(component=1)
24	
25	# try back: trpzip2
",ENVIRONMENT
13,000002f42581aa2bfb55393bfdbc80c785616b3a.execution_graph,[view_23 -----add cartoon---->view_27],"26	
27	view.add_cartoon(color='residueindex')
",EDA
14,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[numpy -----random---->np_7_intermediate_1],"Y_test_35_intermediate_1 -----random---->Y_test_35
Y_test_35_intermediate_1 -----genfromtxt---->Y_test_35
Y_test_35_intermediate_1 -----genfromtxt---->Y_test_35
Y_test_35_intermediate_1 -----genfromtxt---->Y_test_35
Y_test_35_intermediate_1 -----vstack---->Y_test_35
Y_test_35_intermediate_1 -----savetxt---->Y_test_35
Y_test_35_intermediate_1 -----seed---->Y_test_35",ENVIRONMENT
15,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[numpy -----genfromtxt---->X_train_9],"7	np.random.seed(9)
8	
9	X_train = np.genfromtxt('data/X_train.txt', delimiter=None)
10	Y_train = np.genfromtxt('data/Y_train.txt', delimiter=None)
",DATA_IMPORT_EXTRACTION
16,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[numpy -----genfromtxt---->Y_train_10],"8	
9	X_train = np.genfromtxt('data/X_train.txt', delimiter=None)
10	Y_train = np.genfromtxt('data/Y_train.txt', delimiter=None)
11	X_test = np.genfromtxt('data/X_test.txt', delimiter=None)
",DATA_IMPORT_EXTRACTION
17,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[numpy -----genfromtxt---->X_test_11],"9	X_train = np.genfromtxt('data/X_train.txt', delimiter=None)
10	Y_train = np.genfromtxt('data/Y_train.txt', delimiter=None)
11	X_test = np.genfromtxt('data/X_test.txt', delimiter=None)
12	
",DATA_IMPORT_EXTRACTION
18,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[numpy -----vstack---->Y_test_35_intermediate_1],"Y_test_35_intermediate_1 -----random---->Y_test_35
Y_test_35_intermediate_1 -----genfromtxt---->Y_test_35
Y_test_35_intermediate_1 -----genfromtxt---->Y_test_35
Y_test_35_intermediate_1 -----genfromtxt---->Y_test_35
Y_test_35_intermediate_1 -----vstack---->Y_test_35
Y_test_35_intermediate_1 -----savetxt---->Y_test_35
Y_test_35_intermediate_1 -----t---->Y_test_35",DATA_TRANSFORM
19,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[numpy -----savetxt---->np_37],"35	Y_test = np.vstack((np.arange(X_test.shape[0]), predictions)).T
36	
37	np.savetxt('Y_submit_XGBoost_v2.txt', Y_test, '%d, %.2f', header='ID,Prob1', comments='', delimiter=',')
38	
",DATA_EXPORT
20,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[X_train_9 -----x train---->X_train_rescaled_13],"11	X_test = np.genfromtxt('data/X_test.txt', delimiter=None)
12	
13	X_train_rescaled, parameters = ml.rescale(X_train)
14	X_test_rescaled, _ = ml.rescale(X_test, parameters)
",DATA_TRANSFORM
21,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[X_train_9 -----x train---->parameters_13],"11	X_test = np.genfromtxt('data/X_test.txt', delimiter=None)
12	
13	X_train_rescaled, parameters = ml.rescale(X_train)
14	X_test_rescaled, _ = ml.rescale(X_test, parameters)
",DATA_TRANSFORM
22,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[Y_train_10 -----y train---->X_split_train_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",MODEL_TRAIN
23,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[Y_train_10 -----y train---->X_split_validation_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",DATA_TRANSFORM
24,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[Y_train_10 -----y train---->Y_split_train_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",DATA_TRANSFORM
25,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[Y_train_10 -----y train---->Y_split_validation_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",DATA_TRANSFORM
26,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[X_test_11 -----x test---->X_test_rescaled_14],"12	
13	X_train_rescaled, parameters = ml.rescale(X_train)
14	X_test_rescaled, _ = ml.rescale(X_test, parameters)
15	
",DATA_TRANSFORM
27,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[X_test_11 -----x test---->__14],"12	
13	X_train_rescaled, parameters = ml.rescale(X_train)
14	X_test_rescaled, _ = ml.rescale(X_test, parameters)
15	
",DATA_IMPORT_EXTRACTION
28,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[X_train_rescaled_13 -----x train rescaled---->X_split_train_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",DATA_TRANSFORM
29,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[X_train_rescaled_13 -----x train rescaled---->X_split_validation_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",DATA_TRANSFORM
30,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[X_train_rescaled_13 -----x train rescaled---->Y_split_train_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",DATA_TRANSFORM
31,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[X_train_rescaled_13 -----x train rescaled---->Y_split_validation_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",DATA_TRANSFORM
32,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[mltools -----rescale---->X_train_rescaled_13],"11	X_test = np.genfromtxt('data/X_test.txt', delimiter=None)
12	
13	X_train_rescaled, parameters = ml.rescale(X_train)
14	X_test_rescaled, _ = ml.rescale(X_test, parameters)
",DATA_TRANSFORM
33,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[mltools -----rescale---->parameters_13],"11	X_test = np.genfromtxt('data/X_test.txt', delimiter=None)
12	
13	X_train_rescaled, parameters = ml.rescale(X_train)
14	X_test_rescaled, _ = ml.rescale(X_test, parameters)
",DATA_TRANSFORM
34,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[mltools -----rescale---->X_test_rescaled_14],"12	
13	X_train_rescaled, parameters = ml.rescale(X_train)
14	X_test_rescaled, _ = ml.rescale(X_test, parameters)
15	
",DATA_TRANSFORM
35,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[mltools -----rescale---->__14],"12	
13	X_train_rescaled, parameters = ml.rescale(X_train)
14	X_test_rescaled, _ = ml.rescale(X_test, parameters)
15	
",DATA_TRANSFORM
36,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[parameters_13 -----parameters---->X_test_rescaled_14],"12	
13	X_train_rescaled, parameters = ml.rescale(X_train)
14	X_test_rescaled, _ = ml.rescale(X_test, parameters)
15	
",DATA_TRANSFORM
37,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[parameters_13 -----parameters---->__14],"12	
13	X_train_rescaled, parameters = ml.rescale(X_train)
14	X_test_rescaled, _ = ml.rescale(X_test, parameters)
15	
",DATA_TRANSFORM
38,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[X_test_rescaled_14 -----x test rescaled---->predictions_31],"29	# xlf.fit(X_train_rescaled, Y_train, eval_metric='auc', verbose = True)
30	
31	predictions = xlf.predict(X_test_rescaled)
32	
",DATA_TRANSFORM
39,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[X_split_train_16 -----x split train---->xlf_26],"24	                       eval_metric='auc') 
25	
26	xlf.fit(X_split_train, Y_split_train, eval_metric='auc', verbose = True, \
27	        eval_set = [(X_split_train, Y_split_train)], early_stopping_rounds=100)
",MODEL_TRAIN
40,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[sklearn.model_selection -----train test split---->X_split_train_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",MODEL_EVALUATION
41,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[sklearn.model_selection -----train test split---->X_split_validation_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",MODEL_EVALUATION
42,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[sklearn.model_selection -----train test split---->Y_split_train_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",MODEL_TRAIN
43,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[sklearn.model_selection -----train test split---->Y_split_validation_16],"15	
16	X_split_train, X_split_validation, Y_split_train, Y_split_validation = \
17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
",MODEL_EVALUATION
44,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[Y_split_train_16 -----y split train---->xlf_26],"24	                       eval_metric='auc') 
25	
26	xlf.fit(X_split_train, Y_split_train, eval_metric='auc', verbose = True, \
27	        eval_set = [(X_split_train, Y_split_train)], early_stopping_rounds=100)
",MODEL_TRAIN
45,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[xlf_19 -----fit---->xlf_26],"24	                       eval_metric='auc') 
25	
26	xlf.fit(X_split_train, Y_split_train, eval_metric='auc', verbose = True, \
27	        eval_set = [(X_split_train, Y_split_train)], early_stopping_rounds=100)
",MODEL_TRAIN
46,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[xgboost -----xgbregressor---->xlf_19],"17	                                                train_test_split(X_train_rescaled, Y_train, test_size = 0.3)
18	
19	xlf = xgb.XGBRegressor(max_depth=6,
20	                       objective='binary:logistic',
",HYPERPARAMETER_TUNING
47,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[xlf_26 -----predict---->predictions_31],"29	# xlf.fit(X_train_rescaled, Y_train, eval_metric='auc', verbose = True)
30	
31	predictions = xlf.predict(X_test_rescaled)
32	
",MODEL_EVALUATION
48,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[predictions_31 -----predictions---->predictions_33],"31	predictions = xlf.predict(X_test_rescaled)
32	
33	predictions #1
34	
",MODEL_EVALUATION
49,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[Y_test_35 -----y test---->np_37],"35	Y_test = np.vstack((np.arange(X_test.shape[0]), predictions)).T
36	
37	np.savetxt('Y_submit_XGBoost_v2.txt', Y_test, '%d, %.2f', header='ID,Prob1', comments='', delimiter=',')
38	
",DATA_EXPORT
50,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[np_7_intermediate_1 -----seed---->np_7],"numpy -----random---->np_7_intermediate_1
Y_test_35_intermediate_1 -----seed---->Y_test_35",ENVIRONMENT
51,0000036466ae1fe8f89eada0a7e55faa1773e7ed.execution_graph,[Y_test_35_intermediate_1 -----t---->Y_test_35],"numpy -----vstack---->Y_test_35_intermediate_1
Y_test_35_intermediate_1 -----t---->Y_test_35
Y_test_35_intermediate_1 -----y test---->Y_test_35",DATA_TRANSFORM
52,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[df_4 -----head---->df_5],"3	
4	df = pd.read_csv(""./test.csv"")
5	df.head()
6	
",EDA
53,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[pandas -----read csv---->df_4],"2	import numpy as np
3	
4	df = pd.read_csv(""./test.csv"")
5	df.head()
",DATA_IMPORT_EXTRACTION
54,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[pandas -----read csv---->df_test_43],"41	lr.predict(X)[:10]
42	
43	df_test = pd.read_csv(""./train.csv"")
44	df_test.head()
",DATA_IMPORT_EXTRACTION
55,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[pandas -----read csv---->df_52],"50	sk_lr.predict(X_test)[:5]
51	
52	df = pd.read_csv(""./mlr09.csv"")
53	df.head()
",DATA_IMPORT_EXTRACTION
56,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[df_5 -----select---->X_7_intermediate_1],"df_4 -----head---->df_5
X_59_intermediate_1 -----select---->X_59
X_59_intermediate_1 -----select---->X_59
X_59_intermediate_1 -----select---->X_59
X_59_intermediate_1 -----reassign---->X_59
X_59_intermediate_1 -----values---->X_59",DATA_TRANSFORM
57,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[df_5 -----select---->y_8_intermediate_1],"df_4 -----head---->df_5
X_59_intermediate_1 -----select---->X_59
X_59_intermediate_1 -----select---->X_59
X_59_intermediate_1 -----select---->X_59
X_59_intermediate_1 -----reassign---->X_59
X_59_intermediate_1 -----values---->X_59",DATA_TRANSFORM
58,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[df_5 -----select---->X_test_46_intermediate_1],"df_4 -----head---->df_5
X_59_intermediate_1 -----select---->X_59
X_59_intermediate_1 -----select---->X_59
X_59_intermediate_1 -----select---->X_59
X_59_intermediate_1 -----reassign---->X_59
X_59_intermediate_1 -----values---->X_59",DATA_TRANSFORM
59,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[df_5 -----reassign---->df_52],"50	sk_lr.predict(X_test)[:5]
51	
52	df = pd.read_csv(""./mlr09.csv"")
53	df.head()
",DATA_IMPORT_EXTRACTION
60,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_7 -----x---->lr_16],"14	lr = linear_model.LinearRegression(fit_intercept=True)
15	
16	lr.fit(X, y)
17	
",MODEL_TRAIN
61,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_7 -----x---->lr_22],"20	lr.coef
21	
22	lr.predict(X)[:10]
23	
",MODEL_TRAIN
62,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_7 -----x---->sk_lr_26],"24	from sklearn import linear_model
25	sk_lr = linear_model.LinearRegression(normalize=False)
26	sk_lr.fit(X, y)
27	
",MODEL_TRAIN
63,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_7 -----x---->lr_41],"39	np.isclose(lr.coef, sk_lr.coef_)
40	
41	lr.predict(X)[:10]
42	
",MODEL_TRAIN
64,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_7 -----reassign---->X_59],"57	df.iloc[:,:-1].head()
58	
59	X = df.iloc[:,:-1].values
60	
",DATA_TRANSFORM
65,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[y_8 -----y---->lr_16],"14	lr = linear_model.LinearRegression(fit_intercept=True)
15	
16	lr.fit(X, y)
17	
",MODEL_TRAIN
66,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[y_8 -----y---->sk_lr_26],"24	from sklearn import linear_model
25	sk_lr = linear_model.LinearRegression(normalize=False)
26	sk_lr.fit(X, y)
27	
",MODEL_TRAIN
67,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[y_8 -----reassign---->y_55],"53	df.head()
54	
55	y = df[""average_points_scored""].values
56	
",DATA_TRANSFORM
68,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[imp -----reload---->imp_12],"10	import linear_model
11	import imp
12	imp.reload(linear_model)
13	
",ENVIRONMENT
69,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[lr_14 -----fit---->lr_16],"14	lr = linear_model.LinearRegression(fit_intercept=True)
15	
16	lr.fit(X, y)
17	
",MODEL_TRAIN
70,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[linear_model -----linear regression---->lr_14],"12	imp.reload(linear_model)
13	
14	lr = linear_model.LinearRegression(fit_intercept=True)
15	
",ENVIRONMENT
71,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[lr_16 -----intercept---->lr_18],"16	lr.fit(X, y)
17	
18	lr.intercept
19	
",MODEL_TRAIN
72,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[lr_18 -----coef---->lr_20],"18	lr.intercept
19	
20	lr.coef
21	
",MODEL_EVALUATION
73,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[lr_20 -----predict---->lr_22],"20	lr.coef
21	
22	lr.predict(X)[:10]
23	
",MODEL_EVALUATION
74,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[lr_22 -----lr---->npt_31],"29	
30	import numpy.testing as npt
31	npt.assert_almost_equal(sk_lr.intercept_, lr.intercept)
32	
",MODEL_EVALUATION
75,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[lr_22 -----lr---->np_39],"37	sk_lr.coef_ 
38	
39	np.isclose(lr.coef, sk_lr.coef_)
40	
",MODEL_EVALUATION
76,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[lr_22 -----predict---->lr_41],"39	np.isclose(lr.coef, sk_lr.coef_)
40	
41	lr.predict(X)[:10]
42	
",MODEL_EVALUATION
77,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sk_lr_25 -----fit---->sk_lr_26],"24	from sklearn import linear_model
25	sk_lr = linear_model.LinearRegression(normalize=False)
26	sk_lr.fit(X, y)
27	
",MODEL_TRAIN
78,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sklearn -----linear model---->sk_lr_25_intermediate_1],"X_59_intermediate_1 -----linear model---->X_59
X_59_intermediate_1 -----linear regression---->X_59",ENVIRONMENT
79,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sk_lr_26 -----intercept---->sk_lr_28],"26	sk_lr.fit(X, y)
27	
28	sk_lr.intercept_ 
29	
",MODEL_TRAIN
80,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sk_lr_28 -----sk lr---->npt_31],"29	
30	import numpy.testing as npt
31	npt.assert_almost_equal(sk_lr.intercept_, lr.intercept)
32	
",MODEL_EVALUATION
81,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sk_lr_28 -----coef---->sk_lr_35],"33	
34	
35	sk_lr.coef_
36	
",MODEL_EVALUATION
82,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[numpy.testing -----assert almost equal---->npt_31],"29	
30	import numpy.testing as npt
31	npt.assert_almost_equal(sk_lr.intercept_, lr.intercept)
32	
",MODEL_EVALUATION
83,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sk_lr_35 -----coef---->sk_lr_37],"35	sk_lr.coef_
36	
37	sk_lr.coef_ 
38	
",MODEL_EVALUATION
84,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sk_lr_37 -----sk lr---->np_39],"37	sk_lr.coef_ 
38	
39	np.isclose(lr.coef, sk_lr.coef_)
40	
",MODEL_EVALUATION
85,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sk_lr_37 -----predict---->sk_lr_50],"48	lr.predict(X_test)[:5]
49	
50	sk_lr.predict(X_test)[:5]
51	
",MODEL_EVALUATION
86,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[numpy -----isclose---->np_39],"37	sk_lr.coef_ 
38	
39	np.isclose(lr.coef, sk_lr.coef_)
40	
",MODEL_EVALUATION
87,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[numpy -----mean---->mu_X_63],"61	X[:5]
62	
63	mu_X = np.mean(X, axis=0)
64	std_X = np.std(X, axis=0)
",DATA_TRANSFORM
88,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[numpy -----std---->std_X_64],"62	
63	mu_X = np.mean(X, axis=0)
64	std_X = np.std(X, axis=0)
65	
",DATA_TRANSFORM
89,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[lr_41 -----predict---->lr_48],"46	X_test = df[""x""].values.reshape(-1,1)
47	
48	lr.predict(X_test)[:5]
49	
",MODEL_EVALUATION
90,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[df_test_43 -----head---->df_test_44],"42	
43	df_test = pd.read_csv(""./train.csv"")
44	df_test.head()
45	
",EDA
91,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_test_46 -----x test---->lr_48],"46	X_test = df[""x""].values.reshape(-1,1)
47	
48	lr.predict(X_test)[:5]
49	
",MODEL_EVALUATION
92,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_test_46 -----x test---->sk_lr_50],"48	lr.predict(X_test)[:5]
49	
50	sk_lr.predict(X_test)[:5]
51	
",MODEL_EVALUATION
93,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[lr_48 -----fit---->lr_70],"68	rescaled_X[:5]
69	
70	lr.fit(rescaled_X, y)
71	
",MODEL_TRAIN
94,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sk_lr_50 -----fit---->sk_lr_76],"74	lr.intercept
75	
76	sk_lr.fit(rescaled_X, y)
77	
",MODEL_TRAIN
95,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[df_52 -----head---->df_53],"51	
52	df = pd.read_csv(""./mlr09.csv"")
53	df.head()
54	
",EDA
96,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[df_53 -----select---->y_55_intermediate_1],"df_52 -----head---->df_53
X_59_intermediate_1 -----select---->X_59
X_59_intermediate_1 -----iloc---->X_59
X_59_intermediate_1 -----values---->X_59",DATA_IMPORT_EXTRACTION
97,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[df_53 -----iloc---->df_57_intermediate_1],"df_52 -----head---->df_53
X_59_intermediate_1 -----select---->X_59
X_59_intermediate_1 -----iloc---->X_59
X_59_intermediate_1 -----head---->X_59",DATA_TRANSFORM
98,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[y_55 -----y---->lr_70],"68	rescaled_X[:5]
69	
70	lr.fit(rescaled_X, y)
71	
",MODEL_TRAIN
99,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[y_55 -----y---->sk_lr_76],"74	lr.intercept
75	
76	sk_lr.fit(rescaled_X, y)
77	
",MODEL_TRAIN
100,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[df_57 -----iloc---->X_59_intermediate_1],"df_57_intermediate_1 -----head---->df_57
X_59_intermediate_1 -----iloc---->X_59
X_59_intermediate_1 -----values---->X_59",DATA_TRANSFORM
101,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_59 -----slice---->X_61],"59	X = df.iloc[:,:-1].values
60	
61	X[:5]
62	
",DATA_TRANSFORM
102,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_61 -----x---->mu_X_63],"61	X[:5]
62	
63	mu_X = np.mean(X, axis=0)
64	std_X = np.std(X, axis=0)
",DATA_TRANSFORM
103,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_61 -----x---->std_X_64],"62	
63	mu_X = np.mean(X, axis=0)
64	std_X = np.std(X, axis=0)
65	
",DATA_TRANSFORM
104,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_61 -----sub---->rescaled_X_66],"64	std_X = np.std(X, axis=0)
65	
66	rescaled_X = (X - mu_X) / std_X
67	
",DATA_TRANSFORM
105,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[mu_X_63 -----sub---->rescaled_X_66],"64	std_X = np.std(X, axis=0)
65	
66	rescaled_X = (X - mu_X) / std_X
67	
",DATA_TRANSFORM
106,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[std_X_64 -----div---->rescaled_X_66],"64	std_X = np.std(X, axis=0)
65	
66	rescaled_X = (X - mu_X) / std_X
67	
",DATA_TRANSFORM
107,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[rescaled_X_66 -----slice---->rescaled_X_68],"66	rescaled_X = (X - mu_X) / std_X
67	
68	rescaled_X[:5]
69	
",DATA_TRANSFORM
108,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[rescaled_X_68 -----rescaled x---->lr_70],"68	rescaled_X[:5]
69	
70	lr.fit(rescaled_X, y)
71	
",MODEL_TRAIN
109,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[rescaled_X_68 -----rescaled x---->sk_lr_76],"74	lr.intercept
75	
76	sk_lr.fit(rescaled_X, y)
77	
",MODEL_TRAIN
110,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[lr_70 -----coef---->lr_72],"70	lr.fit(rescaled_X, y)
71	
72	lr.coef
73	
",MODEL_EVALUATION
111,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[lr_72 -----intercept---->lr_74],"72	lr.coef
73	
74	lr.intercept
75	
",MODEL_EVALUATION
112,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sk_lr_76 -----coef---->sk_lr_78],"76	sk_lr.fit(rescaled_X, y)
77	
78	sk_lr.coef_
79	
",MODEL_EVALUATION
113,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sk_lr_78 -----intercept---->sk_lr_80],"78	sk_lr.coef_
79	
80	sk_lr.intercept_
",MODEL_EVALUATION
114,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_7_intermediate_1 -----values---->X_7_intermediate_2],"df_5 -----select---->X_7_intermediate_1
X_59_intermediate_1 -----values---->X_59
X_59_intermediate_1 -----reshape---->X_59",DATA_TRANSFORM
115,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_7_intermediate_2 -----reshape---->X_7],"X_7_intermediate_1 -----values---->X_7_intermediate_2
X_59_intermediate_1 -----reshape---->X_59
X_59_intermediate_1 -----x---->X_59
X_59_intermediate_1 -----x---->X_59
X_59_intermediate_1 -----x---->X_59
X_59_intermediate_1 -----x---->X_59
X_59_intermediate_1 -----reassign---->X_59",DATA_TRANSFORM
116,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[y_8_intermediate_1 -----values---->y_8],"df_5 -----select---->y_8_intermediate_1
X_59_intermediate_1 -----values---->X_59
X_59_intermediate_1 -----y---->X_59
X_59_intermediate_1 -----y---->X_59
X_59_intermediate_1 -----reassign---->X_59",MODEL_TRAIN
117,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_test_46_intermediate_1 -----values---->X_test_46_intermediate_2],"df_5 -----select---->X_test_46_intermediate_1
X_59_intermediate_1 -----values---->X_59
X_59_intermediate_1 -----reshape---->X_59",DATA_TRANSFORM
118,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_test_46_intermediate_2 -----reshape---->X_test_46],"X_test_46_intermediate_1 -----values---->X_test_46_intermediate_2
X_59_intermediate_1 -----reshape---->X_59
X_59_intermediate_1 -----x test---->X_59
X_59_intermediate_1 -----x test---->X_59",DATA_TRANSFORM
119,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[sk_lr_25_intermediate_1 -----linear regression---->sk_lr_25],"sklearn -----linear model---->sk_lr_25_intermediate_1
X_59_intermediate_1 -----linear regression---->X_59
X_59_intermediate_1 -----fit---->X_59",ENVIRONMENT
120,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[y_55_intermediate_1 -----values---->y_55],"df_53 -----select---->y_55_intermediate_1
X_59_intermediate_1 -----values---->X_59
X_59_intermediate_1 -----y---->X_59
X_59_intermediate_1 -----y---->X_59",DATA_TRANSFORM
121,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[df_57_intermediate_1 -----head---->df_57],"df_53 -----iloc---->df_57_intermediate_1
X_59_intermediate_1 -----head---->X_59
X_59_intermediate_1 -----iloc---->X_59",EDA
122,000012332cec6f306b137448b2ebb256d86dd825.execution_graph,[X_59_intermediate_1 -----values---->X_59],"df_57 -----iloc---->X_59_intermediate_1
X_59_intermediate_1 -----values---->X_59
X_59_intermediate_1 -----slice---->X_59",DATA_TRANSFORM
123,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[dataset_6 -----head---->dataset_8],"6	dataset = pd.read_csv('housingdata.csv',header=None)
7	
8	dataset.head()
9	
",EDA
124,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[pandas -----read csv---->dataset_6],"4	import matplotlib.pyplot as plt
5	
6	dataset = pd.read_csv('housingdata.csv',header=None)
7	
",DATA_IMPORT_EXTRACTION
125,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[dataset_8 -----reassign---->dataset_15],"13	        'Dis','RAD','TAX','Pupil Ratio','Black','LSTA','Median val']
14	
15	dataset.columns = cols
16	
",DATA_TRANSFORM
126,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[cols_12 -----cols---->dataset_15],"13	        'Dis','RAD','TAX','Pupil Ratio','Black','LSTA','Median val']
14	
15	dataset.columns = cols
16	
",DATA_TRANSFORM
127,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[cols_12 -----cols---->columns_15],"13	        'Dis','RAD','TAX','Pupil Ratio','Black','LSTA','Median val']
14	
15	dataset.columns = cols
16	
",DATA_TRANSFORM
128,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[dataset_15 -----head---->dataset_17],"15	dataset.columns = cols
16	
17	dataset.head()
18	
",EDA
129,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[dataset_17 -----dataset---->sns_20],"18	
19	# look at the correlations in the data
20	sns.pairplot(dataset)
21	
",EDA
130,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[dataset_17 -----corr---->dataset_22],"20	sns.pairplot(dataset)
21	
22	dataset.corr()
23	
",EDA
131,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[seaborn -----pairplot---->sns_20],"18	
19	# look at the correlations in the data
20	sns.pairplot(dataset)
21	
",EDA
132,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[dataset_22 -----describe---->dataset_26],"24	# summary statistics 
25	
26	dataset.describe(include='all')
27	
",EDA
133,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[dataset_26 -----iloc---->X_30],"28	# create dep var and feture matrix, the dep var is 'Media Val'
29	
30	X=dataset.iloc[:,0:13]
31	y=dataset.iloc[:,13].values
",DATA_TRANSFORM
134,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[dataset_26 -----iloc---->y_31_intermediate_1],"dataset_22 -----describe---->dataset_26
y_31_intermediate_1 -----iloc---->y_31
y_31_intermediate_1 -----iloc---->y_31
y_31_intermediate_1 -----values---->y_31",DATA_TRANSFORM
135,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[X_30 -----x---->X_36],"34	from sklearn.preprocessing import  MinMaxScaler
35	sc= MinMaxScaler()
36	X= sc.fit_transform(X)
37	y= y.reshape(-1,1) # get into correct format so can sc.fit_transform
",DATA_TRANSFORM
136,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[y_31 -----reshape---->y_37],"35	sc= MinMaxScaler()
36	X= sc.fit_transform(X)
37	y= y.reshape(-1,1) # get into correct format so can sc.fit_transform
38	y=sc.fit_transform(y)
",DATA_TRANSFORM
137,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[sc_35 -----fit transform---->X_36],"34	from sklearn.preprocessing import  MinMaxScaler
35	sc= MinMaxScaler()
36	X= sc.fit_transform(X)
37	y= y.reshape(-1,1) # get into correct format so can sc.fit_transform
",DATA_TRANSFORM
138,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[sc_35 -----fit transform---->y_38],"36	X= sc.fit_transform(X)
37	y= y.reshape(-1,1) # get into correct format so can sc.fit_transform
38	y=sc.fit_transform(y)
39	
",DATA_TRANSFORM
139,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[sklearn.preprocessing -----min max scaler---->sc_35],"33	# scale both the features and target (or dep variable)
34	from sklearn.preprocessing import  MinMaxScaler
35	sc= MinMaxScaler()
36	X= sc.fit_transform(X)
",DATA_TRANSFORM
140,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[X_36 -----x---->X_train_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",DATA_TRANSFORM
141,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[X_36 -----x---->X_test_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",MODEL_EVALUATION
142,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[X_36 -----x---->y_train_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",MODEL_TRAIN
143,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[X_36 -----x---->y_test_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",MODEL_EVALUATION
144,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[y_37 -----y---->y_38],"36	X= sc.fit_transform(X)
37	y= y.reshape(-1,1) # get into correct format so can sc.fit_transform
38	y=sc.fit_transform(y)
39	
",DATA_TRANSFORM
145,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[y_38 -----y---->X_train_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",MODEL_TRAIN
146,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[y_38 -----y---->X_test_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",MODEL_EVALUATION
147,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[y_38 -----y---->y_train_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",MODEL_TRAIN
148,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[y_38 -----y---->y_test_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",MODEL_EVALUATION
149,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[sklearn.model_selection -----train test split---->X_train_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",MODEL_TRAIN
150,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[sklearn.model_selection -----train test split---->X_test_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",MODEL_TRAIN
151,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[sklearn.model_selection -----train test split---->y_train_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",MODEL_TRAIN
152,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[sklearn.model_selection -----train test split---->y_test_43],"41	
42	from sklearn.model_selection import train_test_split
43	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
44	
",MODEL_TRAIN
153,0000161a6574f1ff2f620ebcc1adc5aa12ebae21.execution_graph,[y_31_intermediate_1 -----values---->y_31],"dataset_26 -----iloc---->y_31_intermediate_1
y_31_intermediate_1 -----values---->y_31
y_31_intermediate_1 -----reshape---->y_31",DATA_TRANSFORM
154,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[numpy -----random---->np_6_intermediate_1],"y_43_intermediate_2 -----random---->y_43
y_43_intermediate_2 -----seed---->y_43",MODEL_TRAIN
155,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[matplotlib.pyplot -----style---->plt_10_intermediate_1],"y_43_intermediate_2 -----style---->y_43
y_43_intermediate_2 -----figure---->y_43
y_43_intermediate_2 -----show---->y_43
y_43_intermediate_2 -----figure---->y_43
y_43_intermediate_2 -----show---->y_43
y_43_intermediate_2 -----use---->y_43",ENVIRONMENT
156,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[matplotlib.pyplot -----figure---->plt_38],"36	ad.plot(kind='scatter',x='GRE',y='CGPA',alpha=0.8,figsize=(8,8))
37	
38	plt.figure(figsize=(18,6))
39	sns.barplot(x='GRE',y='Result',data=admitdata)
",EDA
157,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[matplotlib.pyplot -----show---->plt_40],"38	plt.figure(figsize=(18,6))
39	sns.barplot(x='GRE',y='Result',data=admitdata)
40	plt.show();
41	
",EDA
158,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[matplotlib.pyplot -----figure---->plt_84],"82	    plt.grid(True)                                            
83	
84	plt.figure(figsize=(10, 10))                         
85	plot_roc_curve(fpr, tpr)
",EDA
159,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[matplotlib.pyplot -----show---->plt_86],"84	plt.figure(figsize=(10, 10))                         
85	plot_roc_curve(fpr, tpr)
86	plt.show()
87	
",MODEL_EVALUATION
160,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[matplotlib -----rc---->mpl_11],"9	import matplotlib.pyplot as plt
10	plt.style.use('ggplot')
11	mpl.rc('axes', labelsize=14)
12	mpl.rc('xtick', labelsize=12)
",ENVIRONMENT
161,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[matplotlib -----rc---->mpl_12],"10	plt.style.use('ggplot')
11	mpl.rc('axes', labelsize=14)
12	mpl.rc('xtick', labelsize=12)
13	mpl.rc('ytick', labelsize=12)
",ENVIRONMENT
162,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[matplotlib -----rc---->mpl_13],"11	mpl.rc('axes', labelsize=14)
12	mpl.rc('xtick', labelsize=12)
13	mpl.rc('ytick', labelsize=12)
14	
",ENVIRONMENT
163,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[admitdata_15 -----admitdata---->admitdata_16],"14	
15	admitdata = pd.read_csv(r""C:\Users\SHRISTI\Desktop\Machine Learning\Decibels\Data Sets\Admission_Prediction.csv"")
16	admitdata
17	
",DATA_IMPORT_EXTRACTION
164,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[pandas -----read csv---->admitdata_15],"13	mpl.rc('ytick', labelsize=12)
14	
15	admitdata = pd.read_csv(r""C:\Users\SHRISTI\Desktop\Machine Learning\Decibels\Data Sets\Admission_Prediction.csv"")
16	admitdata
",DATA_IMPORT_EXTRACTION
165,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[admitdata_16 -----head---->admitdata_18],"16	admitdata
17	
18	admitdata.head()
19	
",EDA
166,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[admitdata_18 -----info---->admitdata_20],"18	admitdata.head()
19	
20	admitdata.info()
21	
",EDA
167,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[admitdata_20 -----describe---->admitdata_22],"20	admitdata.info()
21	
22	admitdata.describe()
23	
",EDA
168,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[admitdata_22 -----corr---->corr_matrix_24],"22	admitdata.describe()
23	
24	corr_matrix = admitdata.corr()
25	corr_matrix[""Result""].sort_values(ascending=False)
",EDA
169,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[admitdata_22 -----drop---->ad_27],"25	corr_matrix[""Result""].sort_values(ascending=False)
26	
27	ad = admitdata.drop(['Serial_No'],axis=1)
28	ad
",DATA_TRANSFORM
170,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[corr_matrix_24 -----select---->corr_matrix_25_intermediate_1],"admitdata_22 -----corr---->corr_matrix_24
y_43_intermediate_2 -----select---->y_43
y_43_intermediate_2 -----sort values---->y_43",EDA
171,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[ad_27 -----ad---->ad_28],"26	
27	ad = admitdata.drop(['Serial_No'],axis=1)
28	ad
29	
",DATA_TRANSFORM
172,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[ad_28 -----corr---->ad_30],"28	ad
29	
30	ad.corr()
31	
",EDA
173,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[ad_30 -----shape---->ad_32],"30	ad.corr()
31	
32	ad.shape
33	
",EDA
174,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[ad_32 -----plot---->ad_34],"32	ad.shape
33	
34	ad.plot(kind='scatter',x='CGPA',y='Result',alpha=0.8,figsize=(8,8))
35	
",EDA
175,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[ad_34 -----plot---->ad_36],"34	ad.plot(kind='scatter',x='CGPA',y='Result',alpha=0.8,figsize=(8,8))
35	
36	ad.plot(kind='scatter',x='GRE',y='CGPA',alpha=0.8,figsize=(8,8))
37	
",EDA
176,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[ad_36 -----iloc---->X_42_intermediate_1],"ad_34 -----plot---->ad_36
y_43_intermediate_2 -----iloc---->y_43
y_43_intermediate_2 -----iloc---->y_43
y_43_intermediate_2 -----values---->y_43",MODEL_TRAIN
177,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[ad_36 -----iloc---->y_43_intermediate_1],"ad_34 -----plot---->ad_36
y_43_intermediate_2 -----iloc---->y_43
y_43_intermediate_2 -----iloc---->y_43
y_43_intermediate_2 -----greater than or equal---->y_43",MODEL_TRAIN
178,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[seaborn -----barplot---->sns_39],"37	
38	plt.figure(figsize=(18,6))
39	sns.barplot(x='GRE',y='Result',data=admitdata)
40	plt.show();
",EDA
179,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[X_42 -----x---->log_reg_47],"45	from sklearn.linear_model import LogisticRegression
46	log_reg = LogisticRegression(solver=""liblinear"", random_state=42)
47	log_reg.fit(X, y)
48	
",MODEL_TRAIN
180,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[X_42 -----x---->y_pred_49],"47	log_reg.fit(X, y)
48	
49	y_pred = log_reg.predict(X)    
50	
",MODEL_EVALUATION
181,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[X_42 -----x---->y_scores_72],"70	from sklearn.metrics import roc_curve
71	
72	y_scores = log_reg.predict_proba(X)[::,1]
73	
",MODEL_EVALUATION
182,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_43 -----y---->log_reg_47],"45	from sklearn.linear_model import LogisticRegression
46	log_reg = LogisticRegression(solver=""liblinear"", random_state=42)
47	log_reg.fit(X, y)
48	
",MODEL_TRAIN
183,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_43 -----y---->cnf_matrix_52],"50	
51	from sklearn.metrics import confusion_matrix
52	cnf_matrix = confusion_matrix(y, y_pred)
53	cnf_matrix
",MODEL_EVALUATION
184,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_43 -----y---->result_55],"53	cnf_matrix
54	
55	result = confusion_matrix(y, y_pred)
56	
",MODEL_EVALUATION
185,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_43 -----y---->fpr_74],"72	y_scores = log_reg.predict_proba(X)[::,1]
73	
74	fpr, tpr, thresholds = roc_curve(y, y_scores)
75	
",MODEL_EVALUATION
186,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_43 -----y---->tpr_74],"72	y_scores = log_reg.predict_proba(X)[::,1]
73	
74	fpr, tpr, thresholds = roc_curve(y, y_scores)
75	
",MODEL_EVALUATION
187,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_43 -----y---->thresholds_74],"72	y_scores = log_reg.predict_proba(X)[::,1]
73	
74	fpr, tpr, thresholds = roc_curve(y, y_scores)
75	
",MODEL_EVALUATION
188,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_43 -----y---->roc_auc_score_90],"88	from sklearn.metrics import roc_auc_score
89	
90	roc_auc_score(y, y_scores)
91	
",MODEL_EVALUATION
189,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[log_reg_46 -----fit---->log_reg_47],"45	from sklearn.linear_model import LogisticRegression
46	log_reg = LogisticRegression(solver=""liblinear"", random_state=42)
47	log_reg.fit(X, y)
48	
",MODEL_TRAIN
190,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[sklearn.linear_model -----logistic regression---->log_reg_46],"44	
45	from sklearn.linear_model import LogisticRegression
46	log_reg = LogisticRegression(solver=""liblinear"", random_state=42)
47	log_reg.fit(X, y)
",MODEL_TRAIN
191,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[log_reg_47 -----predict---->y_pred_49],"47	log_reg.fit(X, y)
48	
49	y_pred = log_reg.predict(X)    
50	
",MODEL_EVALUATION
192,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[log_reg_47 -----predict proba---->y_scores_72],"70	from sklearn.metrics import roc_curve
71	
72	y_scores = log_reg.predict_proba(X)[::,1]
73	
",MODEL_EVALUATION
193,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[log_reg_47 -----predict---->log_reg_92],"90	roc_auc_score(y, y_scores)
91	
92	log_reg.predict([[331,118,9.65]])
93	
",MODEL_EVALUATION
194,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_pred_49 -----y pred---->cnf_matrix_52],"50	
51	from sklearn.metrics import confusion_matrix
52	cnf_matrix = confusion_matrix(y, y_pred)
53	cnf_matrix
",MODEL_EVALUATION
195,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_pred_49 -----y pred---->result_55],"53	cnf_matrix
54	
55	result = confusion_matrix(y, y_pred)
56	
",MODEL_EVALUATION
196,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[cnf_matrix_52 -----cnf matrix---->cnf_matrix_53],"51	from sklearn.metrics import confusion_matrix
52	cnf_matrix = confusion_matrix(y, y_pred)
53	cnf_matrix
54	
",MODEL_EVALUATION
197,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[sklearn.metrics -----confusion matrix---->cnf_matrix_52],"50	
51	from sklearn.metrics import confusion_matrix
52	cnf_matrix = confusion_matrix(y, y_pred)
53	cnf_matrix
",MODEL_EVALUATION
198,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[sklearn.metrics -----confusion matrix---->result_55],"53	cnf_matrix
54	
55	result = confusion_matrix(y, y_pred)
56	
",MODEL_EVALUATION
199,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[sklearn.metrics -----roc curve---->fpr_74],"72	y_scores = log_reg.predict_proba(X)[::,1]
73	
74	fpr, tpr, thresholds = roc_curve(y, y_scores)
75	
",MODEL_EVALUATION
200,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[sklearn.metrics -----roc curve---->tpr_74],"72	y_scores = log_reg.predict_proba(X)[::,1]
73	
74	fpr, tpr, thresholds = roc_curve(y, y_scores)
75	
",MODEL_EVALUATION
201,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[sklearn.metrics -----roc curve---->thresholds_74],"72	y_scores = log_reg.predict_proba(X)[::,1]
73	
74	fpr, tpr, thresholds = roc_curve(y, y_scores)
75	
",MODEL_EVALUATION
202,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[sklearn.metrics -----roc auc score---->roc_auc_score_90],"88	from sklearn.metrics import roc_auc_score
89	
90	roc_auc_score(y, y_scores)
91	
",MODEL_EVALUATION
203,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_scores_72 -----y scores---->fpr_74],"72	y_scores = log_reg.predict_proba(X)[::,1]
73	
74	fpr, tpr, thresholds = roc_curve(y, y_scores)
75	
",MODEL_EVALUATION
204,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_scores_72 -----y scores---->tpr_74],"72	y_scores = log_reg.predict_proba(X)[::,1]
73	
74	fpr, tpr, thresholds = roc_curve(y, y_scores)
75	
",MODEL_EVALUATION
205,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_scores_72 -----y scores---->thresholds_74],"72	y_scores = log_reg.predict_proba(X)[::,1]
73	
74	fpr, tpr, thresholds = roc_curve(y, y_scores)
75	
",MODEL_EVALUATION
206,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_scores_72 -----y scores---->roc_auc_score_90],"88	from sklearn.metrics import roc_auc_score
89	
90	roc_auc_score(y, y_scores)
91	
",MODEL_EVALUATION
207,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[fpr_74 -----fpr---->plot_roc_curve_85],"83	
84	plt.figure(figsize=(10, 10))                         
85	plot_roc_curve(fpr, tpr)
86	plt.show()
",MODEL_EVALUATION
208,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[tpr_74 -----tpr---->plot_roc_curve_85],"83	
84	plt.figure(figsize=(10, 10))                         
85	plot_roc_curve(fpr, tpr)
86	plt.show()
",MODEL_EVALUATION
209,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[log_reg_92 -----predict proba---->log_reg_94],"92	log_reg.predict([[331,118,9.65]])
93	
94	log_reg.predict_proba([[331,118,9.65]])
95	
",MODEL_EVALUATION
210,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[np_6_intermediate_1 -----seed---->np_6],"numpy -----random---->np_6_intermediate_1
y_43_intermediate_2 -----seed---->y_43",MODEL_TRAIN
211,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[plt_10_intermediate_1 -----use---->plt_10],"matplotlib.pyplot -----style---->plt_10_intermediate_1
y_43_intermediate_2 -----use---->y_43",ENVIRONMENT
212,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[corr_matrix_25_intermediate_1 -----sort values---->corr_matrix_25],"corr_matrix_24 -----select---->corr_matrix_25_intermediate_1
y_43_intermediate_2 -----sort values---->y_43",EDA
213,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[X_42_intermediate_1 -----values---->X_42],"ad_36 -----iloc---->X_42_intermediate_1
y_43_intermediate_2 -----values---->y_43
y_43_intermediate_2 -----x---->y_43
y_43_intermediate_2 -----x---->y_43
y_43_intermediate_2 -----x---->y_43",DATA_TRANSFORM
214,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_43_intermediate_1 -----greater than or equal---->y_43_intermediate_2],"ad_36 -----iloc---->y_43_intermediate_1
y_43_intermediate_2 -----greater than or equal---->y_43
y_43_intermediate_2 -----astype---->y_43",DATA_TRANSFORM
215,00001a6f18a1c1aa22e1075c8c852ef81e840a13.execution_graph,[y_43_intermediate_2 -----astype---->y_43],"y_43_intermediate_1 -----greater than or equal---->y_43_intermediate_2
y_43_intermediate_2 -----astype---->y_43
y_43_intermediate_2 -----y---->y_43
y_43_intermediate_2 -----y---->y_43
y_43_intermediate_2 -----y---->y_43
y_43_intermediate_2 -----y---->y_43
y_43_intermediate_2 -----y---->y_43
y_43_intermediate_2 -----y---->y_43
y_43_intermediate_2 -----y---->y_43",DATA_TRANSFORM
216,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[input_file_11 -----input file---->input_file_base_12],"10	
11	input_file = '03_form_lab_kits.csv'
12	input_file_base = str(input_file.split('.')[0])
13	db_name = 'BESTD_csvdb'
",DATA_TRANSFORM
217,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[input_file_11 -----input file---->df_15],"13	db_name = 'BESTD_csvdb'
14	
15	df = pandas.read_csv(input_file)
16	
",DATA_IMPORT_EXTRACTION
218,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[input_file_11 -----reassign---->input_file_22],"20	df.head(10)
21	
22	input_file = 'JULIAN_sheet_1.csv'
23	plink_missing_code = '-99999999'
",DATA_IMPORT_EXTRACTION
219,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[db_name_13 -----reassign---->db_name_24],"22	input_file = 'JULIAN_sheet_1.csv'
23	plink_missing_code = '-99999999'
24	db_name = 'BESTD_csvdb'
25	
",ENVIRONMENT
220,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[df_15 -----to sql---->df_18],"16	
17	#Create SQL database and insert tables (table names can't begin with number!):
18	df.to_sql(name=str('pt_ids_'+input_file_base+'_original'), if_exists='replace', flavor='sqlite', con=sqlite3.connect(db_name))
19	
",DATA_EXPORT
221,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[pandas -----read csv---->df_15],"13	db_name = 'BESTD_csvdb'
14	
15	df = pandas.read_csv(input_file)
16	
",DATA_IMPORT_EXTRACTION
222,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[pandas -----read csv---->df3_26],"24	db_name = 'BESTD_csvdb'
25	
26	df3 = pandas.read_csv(input_file)
27	
",DATA_IMPORT_EXTRACTION
223,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[df_18 -----head---->df_20],"18	df.to_sql(name=str('pt_ids_'+input_file_base+'_original'), if_exists='replace', flavor='sqlite', con=sqlite3.connect(db_name))
19	
20	df.head(10)
21	
",EDA
224,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[df_20 -----to sql---->df_43],"41	
42	#Create SQL database and insert tables:
43	df.to_sql(name='JULIAN_sheet_1_original', if_exists='replace', flavor='sqlite', con=sqlite3.connect('BESTD_csvdb'))
44	df2.to_sql(name='JULIAN_sheet_1_for_plink', if_exists='replace', flavor='sqlite', con=sqlite3.connect('BESTD_csvdb'))
",DATA_EXPORT
225,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[input_file_22 -----input file---->df3_26],"24	db_name = 'BESTD_csvdb'
25	
26	df3 = pandas.read_csv(input_file)
27	
",DATA_IMPORT_EXTRACTION
226,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[df3_26 -----copy---->df4_30],"28	#Prepare file for alternate phenotype analysis for plink using named variables and headers:
29	#http://pngu.mgh.harvard.edu/~purcell/plink/data.shtml#pheno
30	df4 = df3.copy()
31	df4.insert(0, 'FID', '-99999999')
",DATA_TRANSFORM
227,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[df4_30 -----insert---->df4_31],"29	#http://pngu.mgh.harvard.edu/~purcell/plink/data.shtml#pheno
30	df4 = df3.copy()
31	df4.insert(0, 'FID', '-99999999')
32	df4.insert(1, 'IID', '-99999999')
",DATA_TRANSFORM
228,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[df4_31 -----insert---->df4_32],"30	df4 = df3.copy()
31	df4.insert(0, 'FID', '-99999999')
32	df4.insert(1, 'IID', '-99999999')
33	
",DATA_TRANSFORM
229,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[df4_32 -----fillna---->df4_36],"34	#All phenotypes must be numerically coded, including missing values, in the alternate phenotype file. 
35	#The default missing value is -9, set to -99999999, use  --missing-phenotype in plink to specify this:
36	df4.fillna('-99999999')
37	
",DATA_TRANSFORM
230,000020dbf7f3eca41c1f6de84147782ad9023198.execution_graph,[df4_36 -----head---->df4_38],"36	df4.fillna('-99999999')
37	
38	df4.head(10)
39	
",EDA
231,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[img_7 -----img---->imgplot_12],"10	
11	# Ploting Numpy arrays as Image
12	imgplot = plt.imshow(img)
13	
",EDA
232,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,"[img_7 -----img[:, :, 0]---->pseudo_img_17]","15	# (Pseudocolor can be a useful tool for enhancing contrast and visualizing your data more easily.)
16	
17	pseudo_img = img[:, :, 0] # slicing in numpy array
18	plt.imshow(pseudo_img) # luminosity (2D, no color) image
",DATA_TRANSFORM
233,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[img_7 -----reassign---->img_35],"33	# nterpolation calculates what the color or value of a pixel ""should"" be, according to different mathematical schemes.
34	from PIL import Image
35	img = Image.open('image.jpg')
36	img.thumbnail((64, 64), Image.ANTIALIAS) # resize the image in-place # play with numbers to get more idea
",DATA_IMPORT_EXTRACTION
234,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[matplotlib.image -----imread---->img_7],"5	
6	# Importing Image data to numpy array
7	img = mpimg.imread('image.jpg')
8	print(type(img))
",DATA_IMPORT_EXTRACTION
235,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[imgplot_12 -----reassign---->imgplot_23],"21	
22	# another way of using cmap is set_cmap() function
23	imgplot = plt.imshow(pseudo_img)
24	imgplot.set_cmap('nipy_spectral')
",EDA
236,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[matplotlib.pyplot -----imshow---->imgplot_12],"10	
11	# Ploting Numpy arrays as Image
12	imgplot = plt.imshow(img)
13	
",EDA
237,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[matplotlib.pyplot -----imshow---->plt_18],"16	
17	pseudo_img = img[:, :, 0] # slicing in numpy array
18	plt.imshow(pseudo_img) # luminosity (2D, no color) image
19	
",EDA
238,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[matplotlib.pyplot -----imshow---->plt_20],"18	plt.imshow(pseudo_img) # luminosity (2D, no color) image
19	
20	plt.imshow(pseudo_img, cmap='hot')
21	
",EDA
239,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[matplotlib.pyplot -----imshow---->imgplot_23],"21	
22	# another way of using cmap is set_cmap() function
23	imgplot = plt.imshow(pseudo_img)
24	imgplot.set_cmap('nipy_spectral')
",EDA
240,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[matplotlib.pyplot -----imshow---->imgplot_27],"25	
26	# Color scale reference
27	imgplot = plt.imshow(pseudo_img)
28	plt.colorbar()
",EDA
241,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[matplotlib.pyplot -----colorbar---->plt_28],"26	# Color scale reference
27	imgplot = plt.imshow(pseudo_img)
28	plt.colorbar()
29	
",EDA
242,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[matplotlib.pyplot -----imshow---->imgplot_30],"28	plt.colorbar()
29	
30	imgplot = plt.imshow(pseudo_img, clim = (0.0, 500))
31	
",EDA
243,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[matplotlib.pyplot -----imshow---->imgplot_37],"35	img = Image.open('image.jpg')
36	img.thumbnail((64, 64), Image.ANTIALIAS) # resize the image in-place # play with numbers to get more idea
37	imgplot = plt.imshow(img)
38	
",EDA
244,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[matplotlib.pyplot -----imshow---->imgplot_40],"38	
39	# Interpolation ""neatest""
40	imgplot = plt.imshow(img, interpolation='nearest')
41	
",EDA
245,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[matplotlib.pyplot -----imshow---->imgplot_43],"41	
42	# Interpolation 'bicubic'
43	imgplot = plt.imshow(img, interpolation='bicubic')
44	
",EDA
246,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[pseudo_img_17 -----pseudo img---->plt_18],"16	
17	pseudo_img = img[:, :, 0] # slicing in numpy array
18	plt.imshow(pseudo_img) # luminosity (2D, no color) image
19	
",DATA_TRANSFORM
247,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[pseudo_img_17 -----pseudo img---->plt_20],"18	plt.imshow(pseudo_img) # luminosity (2D, no color) image
19	
20	plt.imshow(pseudo_img, cmap='hot')
21	
",DATA_TRANSFORM
248,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[pseudo_img_17 -----pseudo img---->imgplot_23],"21	
22	# another way of using cmap is set_cmap() function
23	imgplot = plt.imshow(pseudo_img)
24	imgplot.set_cmap('nipy_spectral')
",EDA
249,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[pseudo_img_17 -----pseudo img---->imgplot_27],"25	
26	# Color scale reference
27	imgplot = plt.imshow(pseudo_img)
28	plt.colorbar()
",EDA
250,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[pseudo_img_17 -----pseudo img---->imgplot_30],"28	plt.colorbar()
29	
30	imgplot = plt.imshow(pseudo_img, clim = (0.0, 500))
31	
",EDA
251,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[imgplot_23 -----set cmap---->imgplot_24],"22	# another way of using cmap is set_cmap() function
23	imgplot = plt.imshow(pseudo_img)
24	imgplot.set_cmap('nipy_spectral')
25	
",EDA
252,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[imgplot_24 -----reassign---->imgplot_27],"25	
26	# Color scale reference
27	imgplot = plt.imshow(pseudo_img)
28	plt.colorbar()
",EDA
253,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[imgplot_27 -----reassign---->imgplot_30],"28	plt.colorbar()
29	
30	imgplot = plt.imshow(pseudo_img, clim = (0.0, 500))
31	
",EDA
254,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[imgplot_30 -----reassign---->imgplot_37],"35	img = Image.open('image.jpg')
36	img.thumbnail((64, 64), Image.ANTIALIAS) # resize the image in-place # play with numbers to get more idea
37	imgplot = plt.imshow(img)
38	
",EDA
255,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[img_35 -----thumbnail---->img_36],"34	from PIL import Image
35	img = Image.open('image.jpg')
36	img.thumbnail((64, 64), Image.ANTIALIAS) # resize the image in-place # play with numbers to get more idea
37	imgplot = plt.imshow(img)
",DATA_TRANSFORM
256,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[PIL -----image---->img_35_intermediate_1],"img_35_intermediate_1 -----image---->img_35
img_35_intermediate_1 -----open---->img_35",DATA_IMPORT_EXTRACTION
257,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[img_36 -----img---->imgplot_37],"35	img = Image.open('image.jpg')
36	img.thumbnail((64, 64), Image.ANTIALIAS) # resize the image in-place # play with numbers to get more idea
37	imgplot = plt.imshow(img)
38	
",DATA_TRANSFORM
258,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[img_36 -----img---->imgplot_40],"38	
39	# Interpolation ""neatest""
40	imgplot = plt.imshow(img, interpolation='nearest')
41	
",EDA
259,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[img_36 -----img---->imgplot_43],"41	
42	# Interpolation 'bicubic'
43	imgplot = plt.imshow(img, interpolation='bicubic')
44	
",EDA
260,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[imgplot_37 -----reassign---->imgplot_40],"38	
39	# Interpolation ""neatest""
40	imgplot = plt.imshow(img, interpolation='nearest')
41	
",EDA
261,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[imgplot_40 -----reassign---->imgplot_43],"41	
42	# Interpolation 'bicubic'
43	imgplot = plt.imshow(img, interpolation='bicubic')
44	
",EDA
262,000022ad7fff9a8da3835005efeb786fa283ac1a.execution_graph,[img_35_intermediate_1 -----open---->img_35],"PIL -----image---->img_35_intermediate_1
img_35_intermediate_1 -----open---->img_35
img_35_intermediate_1 -----thumbnail---->img_35",DATA_IMPORT_EXTRACTION
263,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[plt_4 -----reassign---->plt_5],"3	import numpy as np
4	plt.rcParams['axes.linewidth']=1.5
5	plt.rcParams['axes.titlesize']=16
6	plt.rcParams['lines.linewidth'] = 3
",ENVIRONMENT
264,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[rcParams_4 -----reassign---->rcParams_5],"3	import numpy as np
4	plt.rcParams['axes.linewidth']=1.5
5	plt.rcParams['axes.titlesize']=16
6	plt.rcParams['lines.linewidth'] = 3
",ENVIRONMENT
265,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[plt_5 -----reassign---->plt_6],"4	plt.rcParams['axes.linewidth']=1.5
5	plt.rcParams['axes.titlesize']=16
6	plt.rcParams['lines.linewidth'] = 3
7	plt.rcParams['axes.labelsize'] = 20
",ENVIRONMENT
266,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[rcParams_5 -----reassign---->rcParams_6],"4	plt.rcParams['axes.linewidth']=1.5
5	plt.rcParams['axes.titlesize']=16
6	plt.rcParams['lines.linewidth'] = 3
7	plt.rcParams['axes.labelsize'] = 20
",ENVIRONMENT
267,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[plt_6 -----reassign---->plt_7],"5	plt.rcParams['axes.titlesize']=16
6	plt.rcParams['lines.linewidth'] = 3
7	plt.rcParams['axes.labelsize'] = 20
8	plt.rcParams['xtick.labelsize'] = 16
",ENVIRONMENT
268,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[rcParams_6 -----reassign---->rcParams_7],"5	plt.rcParams['axes.titlesize']=16
6	plt.rcParams['lines.linewidth'] = 3
7	plt.rcParams['axes.labelsize'] = 20
8	plt.rcParams['xtick.labelsize'] = 16
",ENVIRONMENT
269,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[plt_7 -----reassign---->plt_8],"6	plt.rcParams['lines.linewidth'] = 3
7	plt.rcParams['axes.labelsize'] = 20
8	plt.rcParams['xtick.labelsize'] = 16
9	plt.rcParams['ytick.labelsize'] = 16
",ENVIRONMENT
270,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[rcParams_7 -----reassign---->rcParams_8],"6	plt.rcParams['lines.linewidth'] = 3
7	plt.rcParams['axes.labelsize'] = 20
8	plt.rcParams['xtick.labelsize'] = 16
9	plt.rcParams['ytick.labelsize'] = 16
",ENVIRONMENT
271,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[plt_8 -----reassign---->plt_9],"7	plt.rcParams['axes.labelsize'] = 20
8	plt.rcParams['xtick.labelsize'] = 16
9	plt.rcParams['ytick.labelsize'] = 16
10	plt.rcParams['xtick.minor.width'] = 1.5
",ENVIRONMENT
272,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[rcParams_8 -----reassign---->rcParams_9],"7	plt.rcParams['axes.labelsize'] = 20
8	plt.rcParams['xtick.labelsize'] = 16
9	plt.rcParams['ytick.labelsize'] = 16
10	plt.rcParams['xtick.minor.width'] = 1.5
",ENVIRONMENT
273,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[plt_9 -----reassign---->plt_10],"8	plt.rcParams['xtick.labelsize'] = 16
9	plt.rcParams['ytick.labelsize'] = 16
10	plt.rcParams['xtick.minor.width'] = 1.5
11	plt.rcParams['xtick.major.width'] = 1.5
",ENVIRONMENT
274,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[rcParams_9 -----reassign---->rcParams_10],"8	plt.rcParams['xtick.labelsize'] = 16
9	plt.rcParams['ytick.labelsize'] = 16
10	plt.rcParams['xtick.minor.width'] = 1.5
11	plt.rcParams['xtick.major.width'] = 1.5
",ENVIRONMENT
275,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[plt_10 -----reassign---->plt_11],"9	plt.rcParams['ytick.labelsize'] = 16
10	plt.rcParams['xtick.minor.width'] = 1.5
11	plt.rcParams['xtick.major.width'] = 1.5
12	
",ENVIRONMENT
276,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[rcParams_10 -----reassign---->rcParams_11],"9	plt.rcParams['ytick.labelsize'] = 16
10	plt.rcParams['xtick.minor.width'] = 1.5
11	plt.rcParams['xtick.major.width'] = 1.5
12	
",ENVIRONMENT
277,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax_13 -----arrow---->ax_14],"12	
13	ax = plt.axes()
14	ax.arrow(0, 0, 1.0, 0.0, head_width=0.0, head_length=0.0, fc='k', ec='k')
15	ax.arrow(0, 0, 0.0, 1.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
",EDA
278,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----axes---->ax_13],"11	plt.rcParams['xtick.major.width'] = 1.5
12	
13	ax = plt.axes()
14	ax.arrow(0, 0, 1.0, 0.0, head_width=0.0, head_length=0.0, fc='k', ec='k')
",EDA
279,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----circle---->circle1_17],"15	ax.arrow(0, 0, 0.0, 1.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
16	ax.arrow(1, 0, 0.0, 1.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
17	circle1=plt.Circle((0.5,0.3),.05,color='xkcd:azure',alpha=0.6)
18	plt.gcf().gca().add_artist(circle1)
",EDA
280,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----gcf---->plt_18_intermediate_1],"i_81_intermediate_1 -----axes---->i_81
i_81_intermediate_1 -----circle---->i_81
i_81_intermediate_1 -----gcf---->i_81
i_81_intermediate_1 -----xlim---->i_81
i_81_intermediate_1 -----ylim---->i_81
i_81_intermediate_1 -----xticks---->i_81
i_81_intermediate_1 -----yticks---->i_81
i_81_intermediate_1 -----axis---->i_81
i_81_intermediate_1 -----show---->i_81
i_81_intermediate_1 -----figure---->i_81
i_81_intermediate_1 -----hist---->i_81
i_81_intermediate_1 -----xlabel---->i_81
i_81_intermediate_1 -----ylabel---->i_81
i_81_intermediate_1 -----show---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots adjust---->i_81
i_81_intermediate_1 -----show---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots---->i_81
i_81_intermediate_1 -----subplots adjust---->i_81
i_81_intermediate_1 -----show---->i_81
i_81_intermediate_1 -----gca---->i_81",EDA
281,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----xlim---->plt_20],"18	plt.gcf().gca().add_artist(circle1)
19	ax.arrow(0.5, 0.3, 0.1, 0.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
20	plt.xlim([-0.1,1.3])
21	plt.ylim([-0.1,1.2])
",EDA
282,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----ylim---->plt_21],"19	ax.arrow(0.5, 0.3, 0.1, 0.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
20	plt.xlim([-0.1,1.3])
21	plt.ylim([-0.1,1.2])
22	plt.xticks([])
",EDA
283,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----xticks---->plt_22],"20	plt.xlim([-0.1,1.3])
21	plt.ylim([-0.1,1.2])
22	plt.xticks([])
23	plt.yticks([])
",EDA
284,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----yticks---->plt_23],"21	plt.ylim([-0.1,1.2])
22	plt.xticks([])
23	plt.yticks([])
24	plt.axis('off')
",EDA
285,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----axis---->plt_24],"22	plt.xticks([])
23	plt.yticks([])
24	plt.axis('off')
25	ax.text(0.48, -0.1, 'x', fontsize=16)
",EDA
286,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----show---->plt_31],"29	ax.text(-0.1, 1.1, r'$V \rightarrow \infty$', fontsize=16)
30	ax.text(0.9, 1.1, r'$V \rightarrow \infty$', fontsize=16)
31	plt.show()
32	
",EDA
287,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----figure---->plt_48],"46	        v = -v
47	
48	plt.figure(figsize=(4,4))
49	plt.hist(x, bins=51, normed=True,alpha=0.6)
",EDA
288,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----hist---->plt_49],"47	
48	plt.figure(figsize=(4,4))
49	plt.hist(x, bins=51, normed=True,alpha=0.6)
50	plt.xlabel('x',fontsize=18)
",EDA
289,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----xlabel---->plt_50],"48	plt.figure(figsize=(4,4))
49	plt.hist(x, bins=51, normed=True,alpha=0.6)
50	plt.xlabel('x',fontsize=18)
51	plt.ylabel('Probability')
",EDA
290,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----ylabel---->plt_51],"49	plt.hist(x, bins=51, normed=True,alpha=0.6)
50	plt.xlabel('x',fontsize=18)
51	plt.ylabel('Probability')
52	plt.show()
",EDA
291,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----show---->plt_52],"50	plt.xlabel('x',fontsize=18)
51	plt.ylabel('Probability')
52	plt.show()
53	
",EDA
292,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->f_63],"61	
62	#f, ((ax1, ax2), (ax3, ax4)) = plt.subplots(4, 1, sharex='col',figsize=(10,10))
63	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
64	for i in (ax1,ax2,ax3,ax4):
",EDA
293,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->ax1_63],"61	
62	#f, ((ax1, ax2), (ax3, ax4)) = plt.subplots(4, 1, sharex='col',figsize=(10,10))
63	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
64	for i in (ax1,ax2,ax3,ax4):
",EDA
294,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->ax2_63],"61	
62	#f, ((ax1, ax2), (ax3, ax4)) = plt.subplots(4, 1, sharex='col',figsize=(10,10))
63	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
64	for i in (ax1,ax2,ax3,ax4):
",EDA
295,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->ax3_63],"61	
62	#f, ((ax1, ax2), (ax3, ax4)) = plt.subplots(4, 1, sharex='col',figsize=(10,10))
63	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
64	for i in (ax1,ax2,ax3,ax4):
",EDA
296,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->ax4_63],"61	
62	#f, ((ax1, ax2), (ax3, ax4)) = plt.subplots(4, 1, sharex='col',figsize=(10,10))
63	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
64	for i in (ax1,ax2,ax3,ax4):
",EDA
297,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->None_63],"61	
62	#f, ((ax1, ax2), (ax3, ax4)) = plt.subplots(4, 1, sharex='col',figsize=(10,10))
63	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
64	for i in (ax1,ax2,ax3,ax4):
",EDA
298,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots adjust---->plt_66],"64	for i in (ax1,ax2,ax3,ax4):
65	    i.set_xlim([0,1])
66	plt.subplots_adjust(hspace=0.4)
67	ax1.plot(x, y[0,:])
",EDA
299,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----show---->plt_76],"74	ax4.set_title('n = 4')
75	ax4.set_xlabel('x/L')
76	plt.show()
77	
",EDA
300,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->f_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
301,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->ax1_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
302,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->ax2_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
303,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->ax3_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
304,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->ax4_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
305,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots---->None_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
306,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----subplots adjust---->plt_79],"77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
80	for i in (ax1,ax2,ax3,ax4):
",EDA
307,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[matplotlib.pyplot -----show---->plt_93],"91	ax4.set_title('n = 4',fontsize=16)
92	ax4.set_xlabel('x/L',fontsize=16)
93	plt.show()
94	
",EDA
308,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax_14 -----arrow---->ax_15],"13	ax = plt.axes()
14	ax.arrow(0, 0, 1.0, 0.0, head_width=0.0, head_length=0.0, fc='k', ec='k')
15	ax.arrow(0, 0, 0.0, 1.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
16	ax.arrow(1, 0, 0.0, 1.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
",EDA
309,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax_15 -----arrow---->ax_16],"14	ax.arrow(0, 0, 1.0, 0.0, head_width=0.0, head_length=0.0, fc='k', ec='k')
15	ax.arrow(0, 0, 0.0, 1.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
16	ax.arrow(1, 0, 0.0, 1.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
17	circle1=plt.Circle((0.5,0.3),.05,color='xkcd:azure',alpha=0.6)
",EDA
310,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax_16 -----arrow---->ax_19],"17	circle1=plt.Circle((0.5,0.3),.05,color='xkcd:azure',alpha=0.6)
18	plt.gcf().gca().add_artist(circle1)
19	ax.arrow(0.5, 0.3, 0.1, 0.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
20	plt.xlim([-0.1,1.3])
",EDA
311,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[circle1_17 -----circle1---->plt_18],"16	ax.arrow(1, 0, 0.0, 1.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
17	circle1=plt.Circle((0.5,0.3),.05,color='xkcd:azure',alpha=0.6)
18	plt.gcf().gca().add_artist(circle1)
19	ax.arrow(0.5, 0.3, 0.1, 0.0, head_width=0.05, head_length=0.05, fc='k', ec='k')
",EDA
312,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax_19 -----text---->ax_25],"23	plt.yticks([])
24	plt.axis('off')
25	ax.text(0.48, -0.1, 'x', fontsize=16)
26	ax.text(0.0, -0.1, '0', fontsize=16)
",EDA
313,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax_25 -----text---->ax_26],"24	plt.axis('off')
25	ax.text(0.48, -0.1, 'x', fontsize=16)
26	ax.text(0.0, -0.1, '0', fontsize=16)
27	ax.text(1.0, -0.1, 'L', fontsize=16)
",EDA
314,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax_26 -----text---->ax_27],"25	ax.text(0.48, -0.1, 'x', fontsize=16)
26	ax.text(0.0, -0.1, '0', fontsize=16)
27	ax.text(1.0, -0.1, 'L', fontsize=16)
28	ax.text(0.16, 0.9, 'Particle in box setup', fontsize=16)
",EDA
315,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax_27 -----text---->ax_28],"26	ax.text(0.0, -0.1, '0', fontsize=16)
27	ax.text(1.0, -0.1, 'L', fontsize=16)
28	ax.text(0.16, 0.9, 'Particle in box setup', fontsize=16)
29	ax.text(-0.1, 1.1, r'$V \rightarrow \infty$', fontsize=16)
",EDA
316,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax_28 -----text---->ax_29],"27	ax.text(1.0, -0.1, 'L', fontsize=16)
28	ax.text(0.16, 0.9, 'Particle in box setup', fontsize=16)
29	ax.text(-0.1, 1.1, r'$V \rightarrow \infty$', fontsize=16)
30	ax.text(0.9, 1.1, r'$V \rightarrow \infty$', fontsize=16)
",EDA
317,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax_29 -----text---->ax_30],"28	ax.text(0.16, 0.9, 'Particle in box setup', fontsize=16)
29	ax.text(-0.1, 1.1, r'$V \rightarrow \infty$', fontsize=16)
30	ax.text(0.9, 1.1, r'$V \rightarrow \infty$', fontsize=16)
31	plt.show()
",EDA
318,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[Length_34 -----length---->x_57],"55	    return np.sqrt(2/L)*np.sin(n * np.pi * x / L)
56	
57	x = np.linspace(0, Length, 100)
58	y = np.zeros((4,100))
",DATA_TRANSFORM
319,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[Length_34 -----length---->y_60],"58	y = np.zeros((4,100))
59	for j in range(0,4):
60	    y[j,:] = ParticleInBox(j+1,x,Length)
61	
",EDA
320,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[timesteps_35 -----timesteps---->x_37],"35	timesteps = 20000     # Number of time-steps.
36	dt = 0.005            # Time-step size.
37	x = np.zeros(timesteps)
38	x[0] = 0.0            # This is the initial position
",DATA_TRANSFORM
321,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[dt_36 -----mult---->x_42],"40	
41	for i in range(1,timesteps):
42	    x[i] = x[i-1] + dt * v
43	    
",DATA_TRANSFORM
322,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_37 -----reassign---->x_38],"36	dt = 0.005            # Time-step size.
37	x = np.zeros(timesteps)
38	x[0] = 0.0            # This is the initial position
39	v = 0.01              # This is the initial velocity.
",ENVIRONMENT
323,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[numpy -----zeros---->x_37],"35	timesteps = 20000     # Number of time-steps.
36	dt = 0.005            # Time-step size.
37	x = np.zeros(timesteps)
38	x[0] = 0.0            # This is the initial position
",ENVIRONMENT
324,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[numpy -----linspace---->x_57],"55	    return np.sqrt(2/L)*np.sin(n * np.pi * x / L)
56	
57	x = np.linspace(0, Length, 100)
58	y = np.zeros((4,100))
",DATA_TRANSFORM
325,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[numpy -----zeros---->y_58],"56	
57	x = np.linspace(0, Length, 100)
58	y = np.zeros((4,100))
59	for j in range(0,4):
",DATA_TRANSFORM
326,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_38 -----loop---->x_42_intermediate_1],"x_37 -----reassign---->x_38
loop_x_38_x_42 -----restart_loop---->x_38
i_81_intermediate_1 -----loop---->i_81
i_81_intermediate_1 -----x[i-1]---->i_81",ENVIRONMENT
327,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[v_39 -----loop---->v_46],"
",DATA_TRANSFORM
328,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[v_39 -----mult---->x_42],"40	
41	for i in range(1,timesteps):
42	    x[i] = x[i-1] + dt * v
43	    
",DATA_TRANSFORM
329,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_42 -----end_loop---->loop_x_38_x_42],"
",DATA_TRANSFORM
330,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[v_46 -----end_loop---->loop_v_39_v_46],"
",ENVIRONMENT
331,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[loop_x_38_x_42 -----restart_loop---->x_38],"
",DATA_TRANSFORM
332,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[loop_x_38_x_42 -----x---->plt_49],"47	
48	plt.figure(figsize=(4,4))
49	plt.hist(x, bins=51, normed=True,alpha=0.6)
50	plt.xlabel('x',fontsize=18)
",EDA
333,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[loop_x_38_x_42 -----reassign---->x_57],"55	    return np.sqrt(2/L)*np.sin(n * np.pi * x / L)
56	
57	x = np.linspace(0, Length, 100)
58	y = np.zeros((4,100))
",DATA_TRANSFORM
334,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[loop_v_39_v_46 -----restart_loop---->v_39],"
",DATA_TRANSFORM
335,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_57 -----x---->y_60],"58	y = np.zeros((4,100))
59	for j in range(0,4):
60	    y[j,:] = ParticleInBox(j+1,x,Length)
61	
",DATA_TRANSFORM
336,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_57 -----x---->ax1_67],"65	    i.set_xlim([0,1])
66	plt.subplots_adjust(hspace=0.4)
67	ax1.plot(x, y[0,:])
68	ax1.set_title('n = 1')
",DATA_TRANSFORM
337,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_57 -----x---->ax2_69],"67	ax1.plot(x, y[0,:])
68	ax1.set_title('n = 1')
69	ax2.plot(x, y[1,:])
70	ax2.set_title('n = 2')
",EDA
338,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_57 -----x---->ax3_71],"69	ax2.plot(x, y[1,:])
70	ax2.set_title('n = 2')
71	ax3.plot(x,y[2,:])
72	ax3.set_title('n = 3')
",EDA
339,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_57 -----x---->ax4_73],"71	ax3.plot(x,y[2,:])
72	ax3.set_title('n = 3')
73	ax4.plot(x, y[3,:])
74	ax4.set_title('n = 4')
",EDA
340,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_57 -----x---->ax1_84],"82	    i.set_ylim([0,2.5])
83	    i.set_ylabel('P(x)',fontsize=16)
84	ax1.fill(x, y[0,:]**2,'r',alpha=0.6)
85	ax1.set_title('n = 1',fontsize=16)
",DATA_TRANSFORM
341,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_57 -----x---->ax2_86],"84	ax1.fill(x, y[0,:]**2,'r',alpha=0.6)
85	ax1.set_title('n = 1',fontsize=16)
86	ax2.fill(x, y[1,:]**2,'r',alpha=0.6)
87	ax2.set_title('n = 2',fontsize=16)
",EDA
342,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_57 -----x---->ax3_88],"86	ax2.fill(x, y[1,:]**2,'r',alpha=0.6)
87	ax2.set_title('n = 2',fontsize=16)
88	ax3.fill(x,y[2,:]**2,'r',alpha=0.6)
89	ax3.set_title('n = 3',fontsize=16)
",DATA_TRANSFORM
343,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_57 -----x---->ax4_90],"88	ax3.fill(x,y[2,:]**2,'r',alpha=0.6)
89	ax3.set_title('n = 3',fontsize=16)
90	ax4.fill(x, y[3,:]**2,'r',alpha=0.6)
91	ax4.set_title('n = 4',fontsize=16)
",EDA
344,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[y_58 -----loop---->y_60],"
",DATA_TRANSFORM
345,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[y_60 -----end_loop---->loop_y_58_y_60],"
",EDA
346,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[loop_y_58_y_60 -----restart_loop---->y_58],"
",DATA_TRANSFORM
347,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[loop_y_58_y_60 -----y---->ax1_67],"65	    i.set_xlim([0,1])
66	plt.subplots_adjust(hspace=0.4)
67	ax1.plot(x, y[0,:])
68	ax1.set_title('n = 1')
",EDA
348,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[loop_y_58_y_60 -----y---->ax2_69],"67	ax1.plot(x, y[0,:])
68	ax1.set_title('n = 1')
69	ax2.plot(x, y[1,:])
70	ax2.set_title('n = 2')
",DATA_TRANSFORM
349,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[loop_y_58_y_60 -----y---->ax3_71],"69	ax2.plot(x, y[1,:])
70	ax2.set_title('n = 2')
71	ax3.plot(x,y[2,:])
72	ax3.set_title('n = 3')
",DATA_TRANSFORM
350,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[loop_y_58_y_60 -----y---->ax4_73],"71	ax3.plot(x,y[2,:])
72	ax3.set_title('n = 3')
73	ax4.plot(x, y[3,:])
74	ax4.set_title('n = 4')
",DATA_TRANSFORM
351,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[f_63 -----reassign---->f_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
352,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax1_63 -----plot---->ax1_67],"65	    i.set_xlim([0,1])
66	plt.subplots_adjust(hspace=0.4)
67	ax1.plot(x, y[0,:])
68	ax1.set_title('n = 1')
",EDA
353,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax2_63 -----plot---->ax2_69],"67	ax1.plot(x, y[0,:])
68	ax1.set_title('n = 1')
69	ax2.plot(x, y[1,:])
70	ax2.set_title('n = 2')
",EDA
354,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax3_63 -----plot---->ax3_71],"69	ax2.plot(x, y[1,:])
70	ax2.set_title('n = 2')
71	ax3.plot(x,y[2,:])
72	ax3.set_title('n = 3')
",EDA
355,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax4_63 -----plot---->ax4_73],"71	ax3.plot(x,y[2,:])
72	ax3.set_title('n = 3')
73	ax4.plot(x, y[3,:])
74	ax4.set_title('n = 4')
",EDA
356,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[None_63 -----reassign---->None_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
357,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[i_65 -----loop---->i_81_intermediate_1],"loop_i_65_i_83 -----restart_loop---->i_65
i_81_intermediate_1 -----loop---->i_81
i_81_intermediate_1 -----set xlim---->i_81",EDA
358,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax1_67 -----set title---->ax1_68],"66	plt.subplots_adjust(hspace=0.4)
67	ax1.plot(x, y[0,:])
68	ax1.set_title('n = 1')
69	ax2.plot(x, y[1,:])
",EDA
359,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax1_68 -----reassign---->ax1_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
360,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax2_69 -----set title---->ax2_70],"68	ax1.set_title('n = 1')
69	ax2.plot(x, y[1,:])
70	ax2.set_title('n = 2')
71	ax3.plot(x,y[2,:])
",EDA
361,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax2_70 -----reassign---->ax2_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
362,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax3_71 -----set title---->ax3_72],"70	ax2.set_title('n = 2')
71	ax3.plot(x,y[2,:])
72	ax3.set_title('n = 3')
73	ax4.plot(x, y[3,:])
",EDA
363,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax3_72 -----reassign---->ax3_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
364,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax4_73 -----set title---->ax4_74],"72	ax3.set_title('n = 3')
73	ax4.plot(x, y[3,:])
74	ax4.set_title('n = 4')
75	ax4.set_xlabel('x/L')
",EDA
365,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax4_74 -----set xlabel---->ax4_75],"73	ax4.plot(x, y[3,:])
74	ax4.set_title('n = 4')
75	ax4.set_xlabel('x/L')
76	plt.show()
",EDA
366,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax4_75 -----reassign---->ax4_78],"76	plt.show()
77	
78	f, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(8,10))
79	plt.subplots_adjust(hspace=0.4)
",EDA
367,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax1_78 -----fill---->ax1_84],"82	    i.set_ylim([0,2.5])
83	    i.set_ylabel('P(x)',fontsize=16)
84	ax1.fill(x, y[0,:]**2,'r',alpha=0.6)
85	ax1.set_title('n = 1',fontsize=16)
",EDA
368,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax2_78 -----fill---->ax2_86],"84	ax1.fill(x, y[0,:]**2,'r',alpha=0.6)
85	ax1.set_title('n = 1',fontsize=16)
86	ax2.fill(x, y[1,:]**2,'r',alpha=0.6)
87	ax2.set_title('n = 2',fontsize=16)
",EDA
369,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax3_78 -----fill---->ax3_88],"86	ax2.fill(x, y[1,:]**2,'r',alpha=0.6)
87	ax2.set_title('n = 2',fontsize=16)
88	ax3.fill(x,y[2,:]**2,'r',alpha=0.6)
89	ax3.set_title('n = 3',fontsize=16)
",EDA
370,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax4_78 -----fill---->ax4_90],"88	ax3.fill(x,y[2,:]**2,'r',alpha=0.6)
89	ax3.set_title('n = 3',fontsize=16)
90	ax4.fill(x, y[3,:]**2,'r',alpha=0.6)
91	ax4.set_title('n = 4',fontsize=16)
",EDA
371,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[i_81 -----set ylim---->i_82],"80	for i in (ax1,ax2,ax3,ax4):
81	    i.set_xlim([0,1])
82	    i.set_ylim([0,2.5])
83	    i.set_ylabel('P(x)',fontsize=16)
",EDA
372,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[i_82 -----set ylabel---->i_83],"81	    i.set_xlim([0,1])
82	    i.set_ylim([0,2.5])
83	    i.set_ylabel('P(x)',fontsize=16)
84	ax1.fill(x, y[0,:]**2,'r',alpha=0.6)
",EDA
373,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[i_83 -----end_loop---->loop_i_65_i_83],"
",MODEL_TRAIN
374,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[loop_i_65_i_83 -----restart_loop---->i_65],"
",EDA
375,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax1_84 -----set title---->ax1_85],"83	    i.set_ylabel('P(x)',fontsize=16)
84	ax1.fill(x, y[0,:]**2,'r',alpha=0.6)
85	ax1.set_title('n = 1',fontsize=16)
86	ax2.fill(x, y[1,:]**2,'r',alpha=0.6)
",EDA
376,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax2_86 -----set title---->ax2_87],"85	ax1.set_title('n = 1',fontsize=16)
86	ax2.fill(x, y[1,:]**2,'r',alpha=0.6)
87	ax2.set_title('n = 2',fontsize=16)
88	ax3.fill(x,y[2,:]**2,'r',alpha=0.6)
",EDA
377,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax3_88 -----set title---->ax3_89],"87	ax2.set_title('n = 2',fontsize=16)
88	ax3.fill(x,y[2,:]**2,'r',alpha=0.6)
89	ax3.set_title('n = 3',fontsize=16)
90	ax4.fill(x, y[3,:]**2,'r',alpha=0.6)
",EDA
378,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax4_90 -----set title---->ax4_91],"89	ax3.set_title('n = 3',fontsize=16)
90	ax4.fill(x, y[3,:]**2,'r',alpha=0.6)
91	ax4.set_title('n = 4',fontsize=16)
92	ax4.set_xlabel('x/L',fontsize=16)
",EDA
379,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[ax4_91 -----set xlabel---->ax4_92],"90	ax4.fill(x, y[3,:]**2,'r',alpha=0.6)
91	ax4.set_title('n = 4',fontsize=16)
92	ax4.set_xlabel('x/L',fontsize=16)
93	plt.show()
",EDA
380,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[plt_18_intermediate_1 -----gca---->plt_18_intermediate_2],"matplotlib.pyplot -----gcf---->plt_18_intermediate_1
i_81_intermediate_1 -----gca---->i_81
i_81_intermediate_1 -----add artist---->i_81",EDA
381,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[plt_18_intermediate_2 -----add artist---->plt_18],"plt_18_intermediate_1 -----gca---->plt_18_intermediate_2
i_81_intermediate_1 -----add artist---->i_81",EDA
382,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_42_intermediate_1 -----x[i-1]---->x_42_intermediate_2],"x_38 -----loop---->x_42_intermediate_1
i_81_intermediate_1 -----x[i-1]---->i_81
i_81_intermediate_1 -----add---->i_81",MODEL_TRAIN
383,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[x_42_intermediate_2 -----add---->x_42],"x_42_intermediate_1 -----x[i-1]---->x_42_intermediate_2
i_81_intermediate_1 -----add---->i_81
i_81_intermediate_1 -----end_loop---->i_81",DATA_TRANSFORM
384,00002c434c41cef7c50be7a70836c400ac04d33d.execution_graph,[i_81_intermediate_1 -----set xlim---->i_81],"i_65 -----loop---->i_81_intermediate_1
i_81_intermediate_1 -----set xlim---->i_81
i_81_intermediate_1 -----set ylim---->i_81",EDA
385,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[test_seq_6 -----test seq---->test_seq_8],"6	test_seq = torch.randn(20,5)
7	
8	test_seq
9	
",DATA_IMPORT_EXTRACTION
386,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch -----randn---->test_seq_6],"4	
5	
6	test_seq = torch.randn(20,5)
7	
",EDA
387,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch -----unsqueeze---->input_seq_16],"14	test_seq.shape # L, C_in
15	
16	input_seq = torch.unsqueeze(test_seq.transpose(0,1),0)
17	input_seq.shape
",DATA_TRANSFORM
388,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch -----max pool1d---->max_pool_22],"20	out_seq.shape
21	
22	max_pool = torch.nn.MaxPool1d(3)
23	
",MODEL_TRAIN
389,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch -----max pool1d---->max_pool2_27],"25	pooled_seq.shape
26	
27	max_pool2 = torch.nn.MaxPool1d(3, stride=1)
28	
",MODEL_TRAIN
390,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch -----cat---->torch_38_intermediate_1],"torch_80_intermediate_1 -----randn---->torch_80
torch_80_intermediate_1 -----unsqueeze---->torch_80
torch_80_intermediate_1 -----max pool1d---->torch_80
torch_80_intermediate_1 -----max pool1d---->torch_80
torch_80_intermediate_1 -----cat---->torch_80
torch_80_intermediate_1 -----tensor---->torch_80
torch_80_intermediate_1 -----unsqueeze---->torch_80
torch_80_intermediate_1 -----shape---->torch_80",NOT_INTERESTING
391,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch -----tensor---->fake_input_78],"76	                dropout = 0.5)
77	
78	fake_input = torch.tensor([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])
79	
",MODEL_TRAIN
392,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch -----unsqueeze---->torch_80_intermediate_1],"torch_80_intermediate_1 -----randn---->torch_80
torch_80_intermediate_1 -----unsqueeze---->torch_80
torch_80_intermediate_1 -----max pool1d---->torch_80
torch_80_intermediate_1 -----max pool1d---->torch_80
torch_80_intermediate_1 -----cat---->torch_80
torch_80_intermediate_1 -----tensor---->torch_80
torch_80_intermediate_1 -----unsqueeze---->torch_80
torch_80_intermediate_1 -----shape---->torch_80",DATA_TRANSFORM
393,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[test_seq_8 -----shape---->test_seq_14],"12	list(conv1.parameters())
13	
14	test_seq.shape # L, C_in
15	
",EDA
394,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[conv1_10 -----conv1---->out_seq_19],"17	input_seq.shape
18	
19	out_seq = conv1(input_seq)
20	out_seq.shape
",MODEL_TRAIN
395,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch.nn -----conv1d---->conv1_10],"8	test_seq
9	
10	conv1 = nn.Conv1d(5, 4, 3)
11	
",ENVIRONMENT
396,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch.nn -----embedding---->embedding_32],"30	pooled_seq2.shape
31	
32	embedding = nn.Embedding(10,300)
33	
",ENVIRONMENT
397,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[input_seq_16 -----shape---->input_seq_17],"15	
16	input_seq = torch.unsqueeze(test_seq.transpose(0,1),0)
17	input_seq.shape
18	
",NOT_INTERESTING
398,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[input_seq_17 -----input seq---->out_seq_19],"17	input_seq.shape
18	
19	out_seq = conv1(input_seq)
20	out_seq.shape
",MODEL_TRAIN
399,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[out_seq_19 -----shape---->out_seq_20],"18	
19	out_seq = conv1(input_seq)
20	out_seq.shape
21	
",NOT_INTERESTING
400,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[out_seq_20 -----out seq---->pooled_seq_24],"22	max_pool = torch.nn.MaxPool1d(3)
23	
24	pooled_seq = max_pool(out_seq)
25	pooled_seq.shape
",MODEL_TRAIN
401,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[out_seq_20 -----out seq---->pooled_seq2_29],"27	max_pool2 = torch.nn.MaxPool1d(3, stride=1)
28	
29	pooled_seq2 = max_pool2(out_seq)
30	pooled_seq2.shape
",MODEL_TRAIN
402,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[max_pool_22 -----max pool---->pooled_seq_24],"22	max_pool = torch.nn.MaxPool1d(3)
23	
24	pooled_seq = max_pool(out_seq)
25	pooled_seq.shape
",MODEL_TRAIN
403,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[pooled_seq_24 -----shape---->pooled_seq_25],"23	
24	pooled_seq = max_pool(out_seq)
25	pooled_seq.shape
26	
",MODEL_TRAIN
404,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[max_pool2_27 -----max pool2---->pooled_seq2_29],"27	max_pool2 = torch.nn.MaxPool1d(3, stride=1)
28	
29	pooled_seq2 = max_pool2(out_seq)
30	pooled_seq2.shape
",MODEL_TRAIN
405,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[pooled_seq2_29 -----shape---->pooled_seq2_30],"28	
29	pooled_seq2 = max_pool2(out_seq)
30	pooled_seq2.shape
31	
",MODEL_TRAIN
406,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[embedding_32 -----embedding---->out_embed1_34],"32	embedding = nn.Embedding(10,300)
33	
34	out_embed1 = embedding(torch.tensor([1,2,3]))
35	out_embed2 = embedding(torch.tensor([[1,2,3],[4,5,6]]))
",MODEL_TRAIN
407,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[embedding_32 -----embedding---->out_embed2_35],"33	
34	out_embed1 = embedding(torch.tensor([1,2,3]))
35	out_embed2 = embedding(torch.tensor([[1,2,3],[4,5,6]]))
36	out_embed1.shape, out_embed2.shape
",MODEL_TRAIN
408,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[model_75 -----batch forward---->model_86],"84	F.softmax(model(fake_input), 1)
85	
86	model.batch_forward(fake_input)
87	
",MODEL_TRAIN
409,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[CNN1DText -----cnn1dtext---->model_75],"73	        return torch.unsqueeze(torch.max(x,0)[0],0) #(1, class_num)
74	
75	model = CNN1DText(embed_num = 259922, embed_dim = 300, class_num = 2, kernel_num = 100, kernel_sizes = (3,4,5),
76	                dropout = 0.5)
",MODEL_TRAIN
410,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[fake_input_78 -----fake input---->torch_80],"78	fake_input = torch.tensor([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])
79	
80	torch.unsqueeze(fake_input,0).shape
81	
",MODEL_TRAIN
411,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[fake_input_78 -----fake input---->model_86],"84	F.softmax(model(fake_input), 1)
85	
86	model.batch_forward(fake_input)
87	
",MODEL_TRAIN
412,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch.nn.functional -----softmax---->F_84],"82	model(torch.unsqueeze(fake_input,0))
83	
84	F.softmax(model(fake_input), 1)
85	
",MODEL_EVALUATION
413,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch.nn.functional -----softmax---->F_88],"86	model.batch_forward(fake_input)
87	
88	F.softmax(model.batch_forward(fake_input), 1)
89	
",MODEL_EVALUATION
414,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch_38_intermediate_1 -----shape---->torch_38],"torch -----cat---->torch_38_intermediate_1
torch_80_intermediate_1 -----shape---->torch_80",DATA_TRANSFORM
415,00002dfa92dd5d67ea2df65a0e23b61efe962cfe.execution_graph,[torch_80_intermediate_1 -----shape---->torch_80],"torch -----unsqueeze---->torch_80_intermediate_1
torch_80_intermediate_1 -----shape---->torch_80",DATA_TRANSFORM
416,00002e24ca84f5a75c57e0603c7d4f5e17979b27.execution_graph,[FACETS_PATH_8 -----facets path---->sys_9],"7	
8	FACETS_PATH = './facets/facets_overview/python'
9	sys.path.append(FACETS_PATH)
10	
",ENVIRONMENT
417,00002e24ca84f5a75c57e0603c7d4f5e17979b27.execution_graph,[sys -----path---->sys_9_intermediate_1],"protostr_41_intermediate_1 -----path---->protostr_41
protostr_41_intermediate_1 -----append---->protostr_41",ENVIRONMENT
418,00002e24ca84f5a75c57e0603c7d4f5e17979b27.execution_graph,[pandas -----read csv---->train_data_19],"17	            ""Occupation"", ""Relationship"", ""Race"", ""Sex"", ""Capital Gain"", ""Capital Loss"",
18	            ""Hours per week"", ""Country"", ""Target""]
19	train_data = pd.read_csv(
20	    ""./data/adult.data"",
",DATA_IMPORT_EXTRACTION
419,00002e24ca84f5a75c57e0603c7d4f5e17979b27.execution_graph,[pandas -----read csv---->test_data_25],"23	    engine='python',
24	    na_values=""?"")
25	test_data = pd.read_csv(
26	    ""./data/adult.test"",
",DATA_IMPORT_EXTRACTION
420,00002e24ca84f5a75c57e0603c7d4f5e17979b27.execution_graph,[gfsg_38 -----proto from data frames---->proto_39],"37	
38	gfsg = GenericFeatureStatisticsGenerator()
39	proto = gfsg.ProtoFromDataFrames([{'name': 'train', 'table': train_data},
40	                                  {'name': 'test', 'table': test_data}])
",DATA_TRANSFORM
421,00002e24ca84f5a75c57e0603c7d4f5e17979b27.execution_graph,[generic_feature_statistics_generator -----generic feature statistics generator---->gfsg_38],"36	import base64
37	
38	gfsg = GenericFeatureStatisticsGenerator()
39	proto = gfsg.ProtoFromDataFrames([{'name': 'train', 'table': train_data},
",EDA
422,00002e24ca84f5a75c57e0603c7d4f5e17979b27.execution_graph,[base64 -----b64encode---->protostr_41_intermediate_1],"protostr_41_intermediate_1 -----b64encode---->protostr_41
protostr_41_intermediate_1 -----decode---->protostr_41",DATA_TRANSFORM
423,00002e24ca84f5a75c57e0603c7d4f5e17979b27.execution_graph,[HTML_TEMPLATE_46 -----format---->html_52],"50	        </script>""""""
51	
52	html = HTML_TEMPLATE.format(protostr=protostr)
53	display(HTML(html))
",DATA_TRANSFORM
424,00002e24ca84f5a75c57e0603c7d4f5e17979b27.execution_graph,[IPython.core.display -----display---->display_53],"51	
52	html = HTML_TEMPLATE.format(protostr=protostr)
53	display(HTML(html))
54	
",ENVIRONMENT
425,00002e24ca84f5a75c57e0603c7d4f5e17979b27.execution_graph,[sys_9_intermediate_1 -----append---->sys_9],"sys -----path---->sys_9_intermediate_1
protostr_41_intermediate_1 -----append---->protostr_41",ENVIRONMENT
426,00002e24ca84f5a75c57e0603c7d4f5e17979b27.execution_graph,[protostr_41_intermediate_1 -----decode---->protostr_41],"base64 -----b64encode---->protostr_41_intermediate_1
protostr_41_intermediate_1 -----decode---->protostr_41",DATA_TRANSFORM
427,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[n_features_12 -----n features---->gen_cov_15],"13	
14	# generate data
15	gen_cov = np.eye(n_features)
16	gen_cov[0, 0] = 2.
",DATA_TRANSFORM
428,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[n_features_12 -----n features---->outliers_cov_19],"17	X = np.dot(np.random.randn(n_samples, n_features), gen_cov)
18	# add some outliers
19	outliers_cov = np.eye(n_features)
20	outliers_cov[np.arange(1, n_features), np.arange(1, n_features)] = 7.
",DATA_TRANSFORM
429,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[gen_cov_15 -----reassign---->gen_cov_16],"14	# generate data
15	gen_cov = np.eye(n_features)
16	gen_cov[0, 0] = 2.
17	X = np.dot(np.random.randn(n_samples, n_features), gen_cov)
",DATA_TRANSFORM
430,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[numpy -----eye---->gen_cov_15],"13	
14	# generate data
15	gen_cov = np.eye(n_features)
16	gen_cov[0, 0] = 2.
",DATA_TRANSFORM
431,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[numpy -----dot---->X_17],"15	gen_cov = np.eye(n_features)
16	gen_cov[0, 0] = 2.
17	X = np.dot(np.random.randn(n_samples, n_features), gen_cov)
18	# add some outliers
",DATA_TRANSFORM
432,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[numpy -----eye---->outliers_cov_19],"17	X = np.dot(np.random.randn(n_samples, n_features), gen_cov)
18	# add some outliers
19	outliers_cov = np.eye(n_features)
20	outliers_cov[np.arange(1, n_features), np.arange(1, n_features)] = 7.
",DATA_TRANSFORM
433,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[numpy -----dot---->X_21],"19	outliers_cov = np.eye(n_features)
20	outliers_cov[np.arange(1, n_features), np.arange(1, n_features)] = 7.
21	X[-n_outliers:] = np.dot(np.random.randn(n_outliers, n_features), outliers_cov)
22	
",DATA_TRANSFORM
434,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[numpy -----meshgrid---->xx_44],"42	
43	# Show contours of the distance functions
44	xx, yy = np.meshgrid(np.linspace(plt.xlim()[0], plt.xlim()[1], 100),
45	                     np.linspace(plt.ylim()[0], plt.ylim()[1], 100))
",EDA
435,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[numpy -----meshgrid---->yy_44],"42	
43	# Show contours of the distance functions
44	xx, yy = np.meshgrid(np.linspace(plt.xlim()[0], plt.xlim()[1], 100),
45	                     np.linspace(plt.ylim()[0], plt.ylim()[1], 100))
",EDA
436,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[numpy -----c---->zz_46],"44	xx, yy = np.meshgrid(np.linspace(plt.xlim()[0], plt.xlim()[1], 100),
45	                     np.linspace(plt.ylim()[0], plt.ylim()[1], 100))
46	zz = np.c_[xx.ravel(), yy.ravel()]
47	
",EDA
437,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[gen_cov_16 -----gen cov---->X_17],"15	gen_cov = np.eye(n_features)
16	gen_cov[0, 0] = 2.
17	X = np.dot(np.random.randn(n_samples, n_features), gen_cov)
18	# add some outliers
",DATA_TRANSFORM
438,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[X_17 -----reassign---->X_21],"19	outliers_cov = np.eye(n_features)
20	outliers_cov[np.arange(1, n_features), np.arange(1, n_features)] = 7.
21	X[-n_outliers:] = np.dot(np.random.randn(n_outliers, n_features), outliers_cov)
22	
",DATA_TRANSFORM
439,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[outliers_cov_19 -----reassign---->outliers_cov_20],"18	# add some outliers
19	outliers_cov = np.eye(n_features)
20	outliers_cov[np.arange(1, n_features), np.arange(1, n_features)] = 7.
21	X[-n_outliers:] = np.dot(np.random.randn(n_outliers, n_features), outliers_cov)
",DATA_TRANSFORM
440,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[outliers_cov_20 -----outliers cov---->X_21],"19	outliers_cov = np.eye(n_features)
20	outliers_cov[np.arange(1, n_features), np.arange(1, n_features)] = 7.
21	X[-n_outliers:] = np.dot(np.random.randn(n_outliers, n_features), outliers_cov)
22	
",DATA_TRANSFORM
441,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[X_21 -----x---->robust_cov_24],"22	
23	# fit a Minimum Covariance Determinant (MCD) robust estimator to data
24	robust_cov = MinCovDet().fit(X)
25	
",MODEL_TRAIN
442,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[X_21 -----x---->emp_cov_27],"25	
26	# compare estimators learnt from the full data set with true parameters
27	emp_cov = EmpiricalCovariance().fit(X)
28	
",MODEL_TRAIN
443,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[X_21 -----x---->inlier_plot_36],"34	# Show data set
35	subfig1 = plt.subplot(3, 1, 1)
36	inlier_plot = subfig1.scatter(X[:, 0], X[:, 1],
37	                              color='black', label='inliers')
",EDA
444,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[X_21 -----x---->outlier_plot_38],"36	inlier_plot = subfig1.scatter(X[:, 0], X[:, 1],
37	                              color='black', label='inliers')
38	outlier_plot = subfig1.scatter(X[:, 0][-n_outliers:], X[:, 1][-n_outliers:],
39	                               color='red', label='outliers')
",EDA
445,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[robust_cov_24 -----mahalanobis---->mahal_robust_cov_54],"52	                                  linestyles='dashed')
53	
54	mahal_robust_cov = robust_cov.mahalanobis(zz)
55	mahal_robust_cov = mahal_robust_cov.reshape(xx.shape)
",MODEL_EVALUATION
446,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[robust_cov_24 -----mahalanobis---->robust_mahal_79_intermediate_1],"X_21 -----x---->robust_cov_24
robust_cov_24_intermediate_1 -----fit---->robust_cov_24
subfig3_87_intermediate_1 -----mahalanobis---->subfig3_87
subfig3_87_intermediate_1 -----mahalanobis---->subfig3_87
subfig3_87_intermediate_1 -----pow---->subfig3_87",MODEL_EVALUATION
447,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[sklearn.covariance -----min cov det---->robust_cov_24_intermediate_1],"subfig3_87_intermediate_1 -----min cov det---->subfig3_87
subfig3_87_intermediate_1 -----empirical covariance---->subfig3_87
subfig3_87_intermediate_1 -----fit---->subfig3_87",MODEL_TRAIN
448,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[sklearn.covariance -----empirical covariance---->emp_cov_27_intermediate_1],"subfig3_87_intermediate_1 -----min cov det---->subfig3_87
subfig3_87_intermediate_1 -----empirical covariance---->subfig3_87
subfig3_87_intermediate_1 -----fit---->subfig3_87",MODEL_TRAIN
449,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[emp_cov_27 -----mahalanobis---->mahal_emp_cov_48],"46	zz = np.c_[xx.ravel(), yy.ravel()]
47	
48	mahal_emp_cov = emp_cov.mahalanobis(zz)
49	mahal_emp_cov = mahal_emp_cov.reshape(xx.shape)
",EDA
450,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[emp_cov_27 -----mahalanobis---->emp_mahal_67_intermediate_1],"X_21 -----x---->emp_cov_27
emp_cov_27_intermediate_1 -----fit---->emp_cov_27
subfig3_87_intermediate_1 -----mahalanobis---->subfig3_87
subfig3_87_intermediate_1 -----mahalanobis---->subfig3_87
subfig3_87_intermediate_1 -----pow---->subfig3_87",EDA
451,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[matplotlib.pyplot -----figure---->fig_31],"29	# #############################################################################
30	# Display results
31	fig = plt.figure()
32	plt.subplots_adjust(hspace=-.1, wspace=.4, top=.95, bottom=.05)
",EDA
452,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[matplotlib.pyplot -----subplots adjust---->plt_32],"30	# Display results
31	fig = plt.figure()
32	plt.subplots_adjust(hspace=-.1, wspace=.4, top=.95, bottom=.05)
33	
",EDA
453,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[matplotlib.pyplot -----subplot---->subfig1_35],"33	
34	# Show data set
35	subfig1 = plt.subplot(3, 1, 1)
36	inlier_plot = subfig1.scatter(X[:, 0], X[:, 1],
",EDA
454,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[matplotlib.pyplot -----xticks---->plt_63],"61	               ['MLE dist', 'robust dist', 'inliers', 'outliers'],
62	               loc=""upper right"", borderaxespad=0)
63	plt.xticks(())
64	plt.yticks(())
",EDA
455,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[matplotlib.pyplot -----yticks---->plt_64],"62	               loc=""upper right"", borderaxespad=0)
63	plt.xticks(())
64	plt.yticks(())
65	
",EDA
456,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[matplotlib.pyplot -----subplot---->subfig2_68],"66	# Plot the scores for each point
67	emp_mahal = emp_cov.mahalanobis(X - np.mean(X, 0)) ** (0.33)
68	subfig2 = plt.subplot(2, 2, 3)
69	subfig2.boxplot([emp_mahal[:-n_outliers], emp_mahal[-n_outliers:]], widths=.25)
",EDA
457,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[matplotlib.pyplot -----yticks---->plt_77],"75	subfig2.set_ylabel(r""$\sqrt[3]{\rm{(Mahal. dist.)}}$"", size=16)
76	subfig2.set_title(""1. from non-robust estimates\n(Maximum Likelihood)"")
77	plt.yticks(())
78	
",EDA
458,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[matplotlib.pyplot -----subplot---->subfig3_80],"78	
79	robust_mahal = robust_cov.mahalanobis(X - robust_cov.location_) ** (0.33)
80	subfig3 = plt.subplot(2, 2, 4)
81	subfig3.boxplot([robust_mahal[:-n_outliers], robust_mahal[-n_outliers:]],
",EDA
459,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[matplotlib.pyplot -----yticks---->plt_90],"88	subfig3.set_ylabel(r""$\sqrt[3]{\rm{(Mahal. dist.)}}$"", size=16)
89	subfig3.set_title(""2. from robust estimates\n(Minimum Covariance Determinant)"")
90	plt.yticks(())
91	
",EDA
460,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[matplotlib.pyplot -----show---->plt_92],"90	plt.yticks(())
91	
92	plt.show()
",EDA
461,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig1_35 -----scatter---->inlier_plot_36],"34	# Show data set
35	subfig1 = plt.subplot(3, 1, 1)
36	inlier_plot = subfig1.scatter(X[:, 0], X[:, 1],
37	                              color='black', label='inliers')
",EDA
462,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig1_35 -----scatter---->outlier_plot_38],"36	inlier_plot = subfig1.scatter(X[:, 0], X[:, 1],
37	                              color='black', label='inliers')
38	outlier_plot = subfig1.scatter(X[:, 0][-n_outliers:], X[:, 1][-n_outliers:],
39	                               color='red', label='outliers')
",EDA
463,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig1_35 -----set xlim---->subfig1_40],"38	outlier_plot = subfig1.scatter(X[:, 0][-n_outliers:], X[:, 1][-n_outliers:],
39	                               color='red', label='outliers')
40	subfig1.set_xlim(subfig1.get_xlim()[0], 11.)
41	subfig1.set_title(""Mahalanobis distances of a contaminated data set:"")
",EDA
464,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig1_40 -----set title---->subfig1_41],"39	                               color='red', label='outliers')
40	subfig1.set_xlim(subfig1.get_xlim()[0], 11.)
41	subfig1.set_title(""Mahalanobis distances of a contaminated data set:"")
42	
",EDA
465,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig1_41 -----contour---->emp_cov_contour_50],"48	mahal_emp_cov = emp_cov.mahalanobis(zz)
49	mahal_emp_cov = mahal_emp_cov.reshape(xx.shape)
50	emp_cov_contour = subfig1.contour(xx, yy, np.sqrt(mahal_emp_cov),
51	                                  cmap=plt.cm.PuBu_r,
",EDA
466,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig1_41 -----contour---->robust_contour_56],"54	mahal_robust_cov = robust_cov.mahalanobis(zz)
55	mahal_robust_cov = mahal_robust_cov.reshape(xx.shape)
56	robust_contour = subfig1.contour(xx, yy, np.sqrt(mahal_robust_cov),
57	                                 cmap=plt.cm.YlOrBr_r, linestyles='dotted')
",EDA
467,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig1_41 -----legend---->subfig1_59],"57	                                 cmap=plt.cm.YlOrBr_r, linestyles='dotted')
58	
59	subfig1.legend([emp_cov_contour.collections[1], robust_contour.collections[1],
60	                inlier_plot, outlier_plot],
",EDA
468,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[xx_44 -----ravel---->zz_46],"44	xx, yy = np.meshgrid(np.linspace(plt.xlim()[0], plt.xlim()[1], 100),
45	                     np.linspace(plt.ylim()[0], plt.ylim()[1], 100))
46	zz = np.c_[xx.ravel(), yy.ravel()]
47	
",DATA_TRANSFORM
469,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[xx_44 -----xx---->mahal_emp_cov_49],"47	
48	mahal_emp_cov = emp_cov.mahalanobis(zz)
49	mahal_emp_cov = mahal_emp_cov.reshape(xx.shape)
50	emp_cov_contour = subfig1.contour(xx, yy, np.sqrt(mahal_emp_cov),
",EDA
470,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[xx_44 -----xx---->emp_cov_contour_50],"48	mahal_emp_cov = emp_cov.mahalanobis(zz)
49	mahal_emp_cov = mahal_emp_cov.reshape(xx.shape)
50	emp_cov_contour = subfig1.contour(xx, yy, np.sqrt(mahal_emp_cov),
51	                                  cmap=plt.cm.PuBu_r,
",EDA
471,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[xx_44 -----xx---->mahal_robust_cov_55],"53	
54	mahal_robust_cov = robust_cov.mahalanobis(zz)
55	mahal_robust_cov = mahal_robust_cov.reshape(xx.shape)
56	robust_contour = subfig1.contour(xx, yy, np.sqrt(mahal_robust_cov),
",EDA
472,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[xx_44 -----xx---->robust_contour_56],"54	mahal_robust_cov = robust_cov.mahalanobis(zz)
55	mahal_robust_cov = mahal_robust_cov.reshape(xx.shape)
56	robust_contour = subfig1.contour(xx, yy, np.sqrt(mahal_robust_cov),
57	                                 cmap=plt.cm.YlOrBr_r, linestyles='dotted')
",EDA
473,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[yy_44 -----ravel---->zz_46],"44	xx, yy = np.meshgrid(np.linspace(plt.xlim()[0], plt.xlim()[1], 100),
45	                     np.linspace(plt.ylim()[0], plt.ylim()[1], 100))
46	zz = np.c_[xx.ravel(), yy.ravel()]
47	
",DATA_TRANSFORM
474,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[yy_44 -----yy---->emp_cov_contour_50],"48	mahal_emp_cov = emp_cov.mahalanobis(zz)
49	mahal_emp_cov = mahal_emp_cov.reshape(xx.shape)
50	emp_cov_contour = subfig1.contour(xx, yy, np.sqrt(mahal_emp_cov),
51	                                  cmap=plt.cm.PuBu_r,
",EDA
475,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[yy_44 -----yy---->robust_contour_56],"54	mahal_robust_cov = robust_cov.mahalanobis(zz)
55	mahal_robust_cov = mahal_robust_cov.reshape(xx.shape)
56	robust_contour = subfig1.contour(xx, yy, np.sqrt(mahal_robust_cov),
57	                                 cmap=plt.cm.YlOrBr_r, linestyles='dotted')
",EDA
476,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[zz_46 -----zz---->mahal_emp_cov_48],"46	zz = np.c_[xx.ravel(), yy.ravel()]
47	
48	mahal_emp_cov = emp_cov.mahalanobis(zz)
49	mahal_emp_cov = mahal_emp_cov.reshape(xx.shape)
",EDA
477,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[zz_46 -----zz---->mahal_robust_cov_54],"52	                                  linestyles='dashed')
53	
54	mahal_robust_cov = robust_cov.mahalanobis(zz)
55	mahal_robust_cov = mahal_robust_cov.reshape(xx.shape)
",EDA
478,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[mahal_emp_cov_48 -----reshape---->mahal_emp_cov_49],"47	
48	mahal_emp_cov = emp_cov.mahalanobis(zz)
49	mahal_emp_cov = mahal_emp_cov.reshape(xx.shape)
50	emp_cov_contour = subfig1.contour(xx, yy, np.sqrt(mahal_emp_cov),
",DATA_TRANSFORM
479,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[mahal_robust_cov_54 -----reshape---->mahal_robust_cov_55],"53	
54	mahal_robust_cov = robust_cov.mahalanobis(zz)
55	mahal_robust_cov = mahal_robust_cov.reshape(xx.shape)
56	robust_contour = subfig1.contour(xx, yy, np.sqrt(mahal_robust_cov),
",DATA_TRANSFORM
480,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[emp_mahal_67 -----emp mahal---->subfig2_70],"68	subfig2 = plt.subplot(2, 2, 3)
69	subfig2.boxplot([emp_mahal[:-n_outliers], emp_mahal[-n_outliers:]], widths=.25)
70	subfig2.plot(np.full(n_samples - n_outliers, 1.26),
71	             emp_mahal[:-n_outliers], '+k', markeredgewidth=1)
",EDA
481,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[emp_mahal_67 -----emp mahal---->subfig2_72],"70	subfig2.plot(np.full(n_samples - n_outliers, 1.26),
71	             emp_mahal[:-n_outliers], '+k', markeredgewidth=1)
72	subfig2.plot(np.full(n_outliers, 2.26),
73	             emp_mahal[-n_outliers:], '+k', markeredgewidth=1)
",EDA
482,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig2_68 -----boxplot---->subfig2_69],"67	emp_mahal = emp_cov.mahalanobis(X - np.mean(X, 0)) ** (0.33)
68	subfig2 = plt.subplot(2, 2, 3)
69	subfig2.boxplot([emp_mahal[:-n_outliers], emp_mahal[-n_outliers:]], widths=.25)
70	subfig2.plot(np.full(n_samples - n_outliers, 1.26),
",EDA
483,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig2_69 -----plot---->subfig2_70],"68	subfig2 = plt.subplot(2, 2, 3)
69	subfig2.boxplot([emp_mahal[:-n_outliers], emp_mahal[-n_outliers:]], widths=.25)
70	subfig2.plot(np.full(n_samples - n_outliers, 1.26),
71	             emp_mahal[:-n_outliers], '+k', markeredgewidth=1)
",EDA
484,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig2_70 -----plot---->subfig2_72],"70	subfig2.plot(np.full(n_samples - n_outliers, 1.26),
71	             emp_mahal[:-n_outliers], '+k', markeredgewidth=1)
72	subfig2.plot(np.full(n_outliers, 2.26),
73	             emp_mahal[-n_outliers:], '+k', markeredgewidth=1)
",EDA
485,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig2_72 -----axes---->subfig2_74_intermediate_1],"emp_mahal_67 -----emp mahal---->subfig2_72
subfig2_70 -----plot---->subfig2_72
subfig3_87_intermediate_1 -----axes---->subfig3_87
subfig3_87_intermediate_1 -----set xticklabels---->subfig3_87",EDA
486,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig2_74 -----set ylabel---->subfig2_75],"73	             emp_mahal[-n_outliers:], '+k', markeredgewidth=1)
74	subfig2.axes.set_xticklabels(('inliers', 'outliers'), size=15)
75	subfig2.set_ylabel(r""$\sqrt[3]{\rm{(Mahal. dist.)}}$"", size=16)
76	subfig2.set_title(""1. from non-robust estimates\n(Maximum Likelihood)"")
",EDA
487,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig2_75 -----set title---->subfig2_76],"74	subfig2.axes.set_xticklabels(('inliers', 'outliers'), size=15)
75	subfig2.set_ylabel(r""$\sqrt[3]{\rm{(Mahal. dist.)}}$"", size=16)
76	subfig2.set_title(""1. from non-robust estimates\n(Maximum Likelihood)"")
77	plt.yticks(())
",EDA
488,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[robust_mahal_79 -----robust mahal---->subfig3_83],"81	subfig3.boxplot([robust_mahal[:-n_outliers], robust_mahal[-n_outliers:]],
82	                widths=.25)
83	subfig3.plot(np.full(n_samples - n_outliers, 1.26),
84	             robust_mahal[:-n_outliers], '+k', markeredgewidth=1)
",EDA
489,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[robust_mahal_79 -----robust mahal---->subfig3_85],"83	subfig3.plot(np.full(n_samples - n_outliers, 1.26),
84	             robust_mahal[:-n_outliers], '+k', markeredgewidth=1)
85	subfig3.plot(np.full(n_outliers, 2.26),
86	             robust_mahal[-n_outliers:], '+k', markeredgewidth=1)
",EDA
490,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig3_80 -----boxplot---->subfig3_81],"79	robust_mahal = robust_cov.mahalanobis(X - robust_cov.location_) ** (0.33)
80	subfig3 = plt.subplot(2, 2, 4)
81	subfig3.boxplot([robust_mahal[:-n_outliers], robust_mahal[-n_outliers:]],
82	                widths=.25)
",EDA
491,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig3_81 -----plot---->subfig3_83],"81	subfig3.boxplot([robust_mahal[:-n_outliers], robust_mahal[-n_outliers:]],
82	                widths=.25)
83	subfig3.plot(np.full(n_samples - n_outliers, 1.26),
84	             robust_mahal[:-n_outliers], '+k', markeredgewidth=1)
",EDA
492,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig3_83 -----plot---->subfig3_85],"83	subfig3.plot(np.full(n_samples - n_outliers, 1.26),
84	             robust_mahal[:-n_outliers], '+k', markeredgewidth=1)
85	subfig3.plot(np.full(n_outliers, 2.26),
86	             robust_mahal[-n_outliers:], '+k', markeredgewidth=1)
",EDA
493,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig3_85 -----axes---->subfig3_87_intermediate_1],"robust_mahal_79 -----robust mahal---->subfig3_85
subfig3_83 -----plot---->subfig3_85
subfig3_87_intermediate_1 -----axes---->subfig3_87
subfig3_87_intermediate_1 -----set xticklabels---->subfig3_87",EDA
494,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig3_87 -----set ylabel---->subfig3_88],"86	             robust_mahal[-n_outliers:], '+k', markeredgewidth=1)
87	subfig3.axes.set_xticklabels(('inliers', 'outliers'), size=15)
88	subfig3.set_ylabel(r""$\sqrt[3]{\rm{(Mahal. dist.)}}$"", size=16)
89	subfig3.set_title(""2. from robust estimates\n(Minimum Covariance Determinant)"")
",EDA
495,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig3_88 -----set title---->subfig3_89],"87	subfig3.axes.set_xticklabels(('inliers', 'outliers'), size=15)
88	subfig3.set_ylabel(r""$\sqrt[3]{\rm{(Mahal. dist.)}}$"", size=16)
89	subfig3.set_title(""2. from robust estimates\n(Minimum Covariance Determinant)"")
90	plt.yticks(())
",EDA
496,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[robust_mahal_79_intermediate_1 -----pow---->robust_mahal_79],"robust_cov_24 -----mahalanobis---->robust_mahal_79_intermediate_1
subfig3_87_intermediate_1 -----pow---->subfig3_87
subfig3_87_intermediate_1 -----robust mahal---->subfig3_87
subfig3_87_intermediate_1 -----robust mahal---->subfig3_87",EDA
497,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[robust_cov_24_intermediate_1 -----fit---->robust_cov_24],"sklearn.covariance -----min cov det---->robust_cov_24_intermediate_1
subfig3_87_intermediate_1 -----fit---->subfig3_87
subfig3_87_intermediate_1 -----mahalanobis---->subfig3_87
subfig3_87_intermediate_1 -----mahalanobis---->subfig3_87",MODEL_TRAIN
498,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[emp_cov_27_intermediate_1 -----fit---->emp_cov_27],"sklearn.covariance -----empirical covariance---->emp_cov_27_intermediate_1
subfig3_87_intermediate_1 -----fit---->subfig3_87
subfig3_87_intermediate_1 -----mahalanobis---->subfig3_87
subfig3_87_intermediate_1 -----mahalanobis---->subfig3_87",MODEL_TRAIN
499,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[emp_mahal_67_intermediate_1 -----pow---->emp_mahal_67],"emp_cov_27 -----mahalanobis---->emp_mahal_67_intermediate_1
subfig3_87_intermediate_1 -----pow---->subfig3_87
subfig3_87_intermediate_1 -----emp mahal---->subfig3_87
subfig3_87_intermediate_1 -----emp mahal---->subfig3_87",EDA
500,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig2_74_intermediate_1 -----set xticklabels---->subfig2_74],"subfig2_72 -----axes---->subfig2_74_intermediate_1
subfig3_87_intermediate_1 -----set xticklabels---->subfig3_87
subfig3_87_intermediate_1 -----set ylabel---->subfig3_87",EDA
501,0000312d243324eb29e36d21bb1c7533b79c0351.execution_graph,[subfig3_87_intermediate_1 -----set xticklabels---->subfig3_87],"subfig3_85 -----axes---->subfig3_87_intermediate_1
subfig3_87_intermediate_1 -----set xticklabels---->subfig3_87
subfig3_87_intermediate_1 -----set ylabel---->subfig3_87",EDA
502,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[file_4 -----file---->data_6],"4	file = 'D:/Ash/UFL/Sem2/Blockchain Optimization and Applications/HW2/compressed/data/tx.csv'
5	
6	data = pd.read_csv(file, sep='\t', header=None)
7	
",DATA_IMPORT_EXTRACTION
503,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[data_6 -----reassign---->data_8],"6	data = pd.read_csv(file, sep='\t', header=None)
7	
8	data.columns = ['txID', 'blockID', 'n_inputs', 'n_outputs']
9	
",DATA_TRANSFORM
504,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[pandas -----read csv---->data_6],"4	file = 'D:/Ash/UFL/Sem2/Blockchain Optimization and Applications/HW2/compressed/data/tx.csv'
5	
6	data = pd.read_csv(file, sep='\t', header=None)
7	
",DATA_IMPORT_EXTRACTION
505,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[pandas -----data frame---->opComm_10],"8	data.columns = ['txID', 'blockID', 'n_inputs', 'n_outputs']
9	
10	opComm = pd.DataFrame(data.loc[data['n_outputs'] == 1])
11	
",DATA_TRANSFORM
506,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[pandas -----data frame---->o2_14],"12	o1 = opComm.reset_index()
13	
14	o2 = pd.DataFrame(o1['txID'])
15	o2['txID']
",DATA_TRANSFORM
507,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[pandas -----read csv---->data_out_21],"19	file_out = 'D:/Ash/UFL/Sem2/Blockchain Optimization and Applications/HW2/compressed/data/txout.csv'
20	
21	data_out = pd.read_csv(file_out, sep='\t', header=None)
22	
",DATA_IMPORT_EXTRACTION
508,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[pandas -----data frame---->table_new_27],"25	data_out
26	
27	table_new = pd.DataFrame(data_out.loc[data_out['txID'].isin(o2['txID'])])
28	
",DATA_TRANSFORM
509,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[pandas -----data frame---->addrT_29],"27	table_new = pd.DataFrame(data_out.loc[data_out['txID'].isin(o2['txID'])])
28	
29	addrT = pd.DataFrame(table_new['addrID'])
30	
",DATA_TRANSFORM
510,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[pandas -----read csv---->data_addr_33],"31	file_path_add = 'D:/Ash/UFL/Sem2/Blockchain Optimization and Applications/HW2/compressed/data/addr_sccs.dat'
32	
33	data_addr = pd.read_csv(file_path_add, sep='\t', header=None)
34	
",DATA_IMPORT_EXTRACTION
511,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[pandas -----data frame---->addrUniq_37],"35	data_addr.columns = ['addrID','address']
36	
37	addrUniq =pd.DataFrame(~addrT.loc[addrT['addrID'].isin(data_addr['addrID'])]) 
38	
",DATA_TRANSFORM
512,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[pandas -----read csv---->data_add_39],"37	addrUniq =pd.DataFrame(~addrT.loc[addrT['addrID'].isin(data_addr['addrID'])]) 
38	
39	data_add = pd.read_csv(file_path_add, sep='\t', header=None)
40	
",DATA_IMPORT_EXTRACTION
513,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[data_8 -----data---->opComm_10],"8	data.columns = ['txID', 'blockID', 'n_inputs', 'n_outputs']
9	
10	opComm = pd.DataFrame(data.loc[data['n_outputs'] == 1])
11	
",DATA_TRANSFORM
514,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[columns_8 -----reassign---->columns_23],"21	data_out = pd.read_csv(file_out, sep='\t', header=None)
22	
23	data_out.columns = ['txID', 'output_seq', 'addrID', 'sum']
24	
",DATA_TRANSFORM
515,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[opComm_10 -----op comm---->o1_12_intermediate_1],"pandas -----data frame---->opComm_10
data_8 -----data---->opComm_10
data_add_43_intermediate_1 -----op comm---->data_add_43
data_add_43_intermediate_1 -----reset index---->data_add_43",DATA_TRANSFORM
516,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[o1_12 -----o1---->o2_14],"12	o1 = opComm.reset_index()
13	
14	o2 = pd.DataFrame(o1['txID'])
15	o2['txID']
",DATA_TRANSFORM
517,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[o2_14 -----select---->o2_15],"13	
14	o2 = pd.DataFrame(o1['txID'])
15	o2['txID']
16	
",DATA_TRANSFORM
518,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[file_out_19 -----file out---->data_out_21],"19	file_out = 'D:/Ash/UFL/Sem2/Blockchain Optimization and Applications/HW2/compressed/data/txout.csv'
20	
21	data_out = pd.read_csv(file_out, sep='\t', header=None)
22	
",DATA_IMPORT_EXTRACTION
519,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[data_out_21 -----reassign---->data_out_23],"21	data_out = pd.read_csv(file_out, sep='\t', header=None)
22	
23	data_out.columns = ['txID', 'output_seq', 'addrID', 'sum']
24	
",DATA_TRANSFORM
520,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[data_out_23 -----data out---->data_out_25],"23	data_out.columns = ['txID', 'output_seq', 'addrID', 'sum']
24	
25	data_out
26	
",DATA_TRANSFORM
521,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[columns_23 -----reassign---->columns_35],"33	data_addr = pd.read_csv(file_path_add, sep='\t', header=None)
34	
35	data_addr.columns = ['addrID','address']
36	
",DATA_TRANSFORM
522,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[data_out_25 -----data out---->table_new_27],"25	data_out
26	
27	table_new = pd.DataFrame(data_out.loc[data_out['txID'].isin(o2['txID'])])
28	
",DATA_TRANSFORM
523,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[table_new_27 -----table new---->addrT_29],"27	table_new = pd.DataFrame(data_out.loc[data_out['txID'].isin(o2['txID'])])
28	
29	addrT = pd.DataFrame(table_new['addrID'])
30	
",DATA_TRANSFORM
524,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[file_path_add_31 -----file path add---->data_addr_33],"31	file_path_add = 'D:/Ash/UFL/Sem2/Blockchain Optimization and Applications/HW2/compressed/data/addr_sccs.dat'
32	
33	data_addr = pd.read_csv(file_path_add, sep='\t', header=None)
34	
",DATA_IMPORT_EXTRACTION
525,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[file_path_add_31 -----file path add---->data_add_39],"37	addrUniq =pd.DataFrame(~addrT.loc[addrT['addrID'].isin(data_addr['addrID'])]) 
38	
39	data_add = pd.read_csv(file_path_add, sep='\t', header=None)
40	
",DATA_IMPORT_EXTRACTION
526,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[data_addr_33 -----reassign---->data_addr_35],"33	data_addr = pd.read_csv(file_path_add, sep='\t', header=None)
34	
35	data_addr.columns = ['addrID','address']
36	
",DATA_TRANSFORM
527,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[columns_35 -----reassign---->columns_41],"39	data_add = pd.read_csv(file_path_add, sep='\t', header=None)
40	
41	data_add.columns = ['addrID','userID']
42	
",DATA_TRANSFORM
528,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[data_add_39 -----reassign---->data_add_41],"39	data_add = pd.read_csv(file_path_add, sep='\t', header=None)
40	
41	data_add.columns = ['addrID','userID']
42	
",DATA_TRANSFORM
529,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[data_add_41 -----select---->data_add_43_intermediate_1],"data_add_39 -----reassign---->data_add_41
data_add_43_intermediate_1 -----select---->data_add_43
data_add_43_intermediate_1 -----count---->data_add_43",DATA_TRANSFORM
530,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[o1_12_intermediate_1 -----reset index---->o1_12],"opComm_10 -----op comm---->o1_12_intermediate_1
data_add_43_intermediate_1 -----reset index---->data_add_43
data_add_43_intermediate_1 -----o1---->data_add_43",DATA_TRANSFORM
531,000032cd75b88a6a568a1c23e4b346a9048818ba.execution_graph,[data_add_43_intermediate_1 -----count---->data_add_43],"data_add_41 -----select---->data_add_43_intermediate_1
data_add_43_intermediate_1 -----count---->data_add_43",DATA_TRANSFORM
532,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[warnings -----filterwarnings---->warnings_4],"2	import numpy as np
3	import warnings
4	warnings.filterwarnings('ignore')
5	
",ENVIRONMENT
533,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[Data_6 -----data---->Dataset_8],"6	Data = 'breast-cancer.data'
7	Names = ['Class','age','menopause','tumor-size','inv-nodes','node-caps','deg-malig','breast','breast-quad','irradiat']
8	Dataset = pd.read_csv(Data,header=None,names=Names)
9	
",DATA_IMPORT_EXTRACTION
534,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[Dataset_8 -----dataset---->Dataset_10],"8	Dataset = pd.read_csv(Data,header=None,names=Names)
9	
10	Dataset
11	
",DATA_TRANSFORM
535,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[pandas -----read csv---->Dataset_8],"6	Data = 'breast-cancer.data'
7	Names = ['Class','age','menopause','tumor-size','inv-nodes','node-caps','deg-malig','breast','breast-quad','irradiat']
8	Dataset = pd.read_csv(Data,header=None,names=Names)
9	
",DATA_IMPORT_EXTRACTION
536,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[Dataset_10 -----isnull---->Dataset_12_intermediate_1],"Dataset_8 -----dataset---->Dataset_10
pca3_98_intermediate_1 -----isnull---->pca3_98
pca3_98_intermediate_1 -----sum---->pca3_98",EDA
537,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[Dataset_12 -----select---->missing_17_intermediate_1],"Dataset_12_intermediate_1 -----sum---->Dataset_12
pca3_98_intermediate_1 -----select---->pca3_98
pca3_98_intermediate_1 -----reassign---->pca3_98
pca3_98_intermediate_1 -----values---->pca3_98",DATA_TRANSFORM
538,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[Dataset_12 -----reassign---->Dataset_18],"16	
17	missing = Dataset['deg-malig'].values.reshape(-1,1)
18	Dataset['deg-malig'] = imputer.fit_transform(missing)
19	
",DATA_TRANSFORM
539,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[imputer_15 -----fit transform---->Dataset_18],"16	
17	missing = Dataset['deg-malig'].values.reshape(-1,1)
18	Dataset['deg-malig'] = imputer.fit_transform(missing)
19	
",DATA_TRANSFORM
540,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.preprocessing -----imputer---->imputer_15],"13	
14	from sklearn.preprocessing import Imputer
15	imputer = Imputer(missing_values=np.nan, strategy='median')
16	
",DATA_TRANSFORM
541,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.preprocessing -----label encoder---->encoder_28],"26	
27	from sklearn.preprocessing import LabelEncoder
28	encoder = LabelEncoder()
29	categorcial_feature_mask = X.dtypes==object
",DATA_TRANSFORM
542,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.preprocessing -----one hot encoder---->ohe_35],"33	
34	from sklearn.preprocessing import OneHotEncoder
35	ohe = OneHotEncoder(categorical_features = categorcial_feature_mask, sparse=False)
36	X = ohe.fit_transform(X)
",DATA_TRANSFORM
543,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.preprocessing -----min max scaler---->scaler_43],"41	
42	from sklearn.preprocessing import MinMaxScaler
43	scaler = MinMaxScaler(feature_range=(0,1))
44	X_train = scaler.fit_transform(X_train)
",DATA_TRANSFORM
544,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.preprocessing -----standard scaler---->sc_X_49],"47	
48	from sklearn.preprocessing import StandardScaler
49	sc_X = StandardScaler()
50	X_train = sc_X.fit_transform(X_train)
",DATA_TRANSFORM
545,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.preprocessing -----normalizer---->norm_X_55],"53	
54	from sklearn.preprocessing import Normalizer
55	norm_X = Normalizer()
56	X_train = norm_X.fit_transform(X_train)
",DATA_TRANSFORM
546,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.preprocessing -----label binarizer---->lb_61],"59	
60	from sklearn.preprocessing import LabelBinarizer
61	lb = LabelBinarizer()
62	y = lb.fit_transform(y)
",DATA_TRANSFORM
547,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[missing_17 -----missing---->Dataset_18],"16	
17	missing = Dataset['deg-malig'].values.reshape(-1,1)
18	Dataset['deg-malig'] = imputer.fit_transform(missing)
19	
",DATA_TRANSFORM
548,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[Dataset_18 -----head---->Dataset_20],"18	Dataset['deg-malig'] = imputer.fit_transform(missing)
19	
20	Dataset.head(10)
21	
",DATA_TRANSFORM
549,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[Dataset_20 -----isnull---->Dataset_22_intermediate_1],"Dataset_18 -----head---->Dataset_20
pca3_98_intermediate_1 -----isnull---->pca3_98
pca3_98_intermediate_1 -----sum---->pca3_98",DATA_TRANSFORM
550,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[Dataset_22 -----iloc---->X_24],"22	Dataset.isnull().sum()
23	
24	X = Dataset.iloc[:,:-1]
25	y = Dataset.iloc[:,9]
",DATA_TRANSFORM
551,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[Dataset_22 -----iloc---->y_25],"23	
24	X = Dataset.iloc[:,:-1]
25	y = Dataset.iloc[:,9]
26	
",DATA_TRANSFORM
552,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_24 -----dtypes---->categorcial_feature_mask_29_intermediate_1],"Dataset_22 -----iloc---->X_24
pca3_98_intermediate_1 -----dtypes---->pca3_98
pca3_98_intermediate_1 -----columns---->pca3_98
pca3_98_intermediate_1 -----x[categorcial cols]---->pca3_98
pca3_98_intermediate_1 -----equal---->pca3_98",DATA_TRANSFORM
553,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_24 -----columns---->categorcial_cols_30_intermediate_1],"Dataset_22 -----iloc---->X_24
pca3_98_intermediate_1 -----dtypes---->pca3_98
pca3_98_intermediate_1 -----columns---->pca3_98
pca3_98_intermediate_1 -----x[categorcial cols]---->pca3_98
pca3_98_intermediate_1 -----tolist---->pca3_98",DATA_TRANSFORM
554,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_24 -----x[categorcial cols]---->X_31_intermediate_1],"Dataset_22 -----iloc---->X_24
pca3_98_intermediate_1 -----dtypes---->pca3_98
pca3_98_intermediate_1 -----columns---->pca3_98
pca3_98_intermediate_1 -----x[categorcial cols]---->pca3_98
pca3_98_intermediate_1 -----apply---->pca3_98",DATA_TRANSFORM
555,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[y_25 -----y---->X_train_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",MODEL_TRAIN
556,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[y_25 -----y---->X_test_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",MODEL_EVALUATION
557,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[y_25 -----y---->y_train_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",MODEL_TRAIN
558,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[y_25 -----y---->y_test_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",MODEL_EVALUATION
559,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[y_25 -----y---->y_62],"60	from sklearn.preprocessing import LabelBinarizer
61	lb = LabelBinarizer()
62	y = lb.fit_transform(y)
63	y = np.concatenate(y,axis=0)
",MODEL_TRAIN
560,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[categorcial_feature_mask_29 -----x columns[categorcial feature mask]---->categorcial_cols_30],"28	encoder = LabelEncoder()
29	categorcial_feature_mask = X.dtypes==object
30	categorcial_cols = X.columns[categorcial_feature_mask].tolist()
31	X[categorcial_cols] = X[categorcial_cols].apply(lambda col:encoder.fit_transform(col))
",DATA_TRANSFORM
561,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[categorcial_cols_30 -----x[categorcial cols]---->X_31],"29	categorcial_feature_mask = X.dtypes==object
30	categorcial_cols = X.columns[categorcial_feature_mask].tolist()
31	X[categorcial_cols] = X[categorcial_cols].apply(lambda col:encoder.fit_transform(col))
32	X.head(10)
",DATA_TRANSFORM
562,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_31 -----head---->X_32],"30	categorcial_cols = X.columns[categorcial_feature_mask].tolist()
31	X[categorcial_cols] = X[categorcial_cols].apply(lambda col:encoder.fit_transform(col))
32	X.head(10)
33	
",DATA_TRANSFORM
563,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_32 -----x---->X_36],"34	from sklearn.preprocessing import OneHotEncoder
35	ohe = OneHotEncoder(categorical_features = categorcial_feature_mask, sparse=False)
36	X = ohe.fit_transform(X)
37	X
",DATA_TRANSFORM
564,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[ohe_35 -----fit transform---->X_36],"34	from sklearn.preprocessing import OneHotEncoder
35	ohe = OneHotEncoder(categorical_features = categorcial_feature_mask, sparse=False)
36	X = ohe.fit_transform(X)
37	X
",DATA_TRANSFORM
565,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_36 -----x---->X_37],"35	ohe = OneHotEncoder(categorical_features = categorcial_feature_mask, sparse=False)
36	X = ohe.fit_transform(X)
37	X
38	
",DATA_TRANSFORM
566,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_37 -----x---->X_train_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",DATA_TRANSFORM
567,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_37 -----x---->X_test_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",DATA_TRANSFORM
568,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_37 -----x---->y_train_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",MODEL_TRAIN
569,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_37 -----x---->y_test_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",MODEL_EVALUATION
570,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_37 -----x---->X_r_69],"67	from sklearn.decomposition import PCA
68	pca = PCA(n_components=2)
69	X_r = pca.fit_transform(X)
70	
",DATA_TRANSFORM
571,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_37 -----x---->X_r3_83],"81	
82	pca3 = PCA(n_components=3)
83	X_r3 = pca3.fit_transform(X)
84	
",DATA_TRANSFORM
572,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_train_40 -----x train---->X_train_44],"42	from sklearn.preprocessing import MinMaxScaler
43	scaler = MinMaxScaler(feature_range=(0,1))
44	X_train = scaler.fit_transform(X_train)
45	X_test  = scaler.transform(X_test)
",DATA_TRANSFORM
573,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.model_selection -----train test split---->X_train_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",DATA_TRANSFORM
574,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.model_selection -----train test split---->X_test_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",DATA_TRANSFORM
575,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.model_selection -----train test split---->y_train_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",DATA_TRANSFORM
576,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.model_selection -----train test split---->y_test_40],"38	
39	from sklearn.model_selection import train_test_split
40	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
41	
",DATA_TRANSFORM
577,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_test_40 -----x test---->X_test_45],"43	scaler = MinMaxScaler(feature_range=(0,1))
44	X_train = scaler.fit_transform(X_train)
45	X_test  = scaler.transform(X_test)
46	X_train
",DATA_TRANSFORM
578,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[scaler_43 -----fit transform---->X_train_44],"42	from sklearn.preprocessing import MinMaxScaler
43	scaler = MinMaxScaler(feature_range=(0,1))
44	X_train = scaler.fit_transform(X_train)
45	X_test  = scaler.transform(X_test)
",DATA_TRANSFORM
579,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[scaler_43 -----transform---->X_test_45],"43	scaler = MinMaxScaler(feature_range=(0,1))
44	X_train = scaler.fit_transform(X_train)
45	X_test  = scaler.transform(X_test)
46	X_train
",DATA_TRANSFORM
580,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_train_44 -----x train---->X_train_46],"44	X_train = scaler.fit_transform(X_train)
45	X_test  = scaler.transform(X_test)
46	X_train
47	
",DATA_TRANSFORM
581,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_test_45 -----x test---->X_test_51],"49	sc_X = StandardScaler()
50	X_train = sc_X.fit_transform(X_train)
51	X_test = sc_X.transform(X_test)
52	X_train
",DATA_TRANSFORM
582,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_train_46 -----x train---->X_train_50],"48	from sklearn.preprocessing import StandardScaler
49	sc_X = StandardScaler()
50	X_train = sc_X.fit_transform(X_train)
51	X_test = sc_X.transform(X_test)
",DATA_TRANSFORM
583,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sc_X_49 -----fit transform---->X_train_50],"48	from sklearn.preprocessing import StandardScaler
49	sc_X = StandardScaler()
50	X_train = sc_X.fit_transform(X_train)
51	X_test = sc_X.transform(X_test)
",DATA_TRANSFORM
584,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sc_X_49 -----transform---->X_test_51],"49	sc_X = StandardScaler()
50	X_train = sc_X.fit_transform(X_train)
51	X_test = sc_X.transform(X_test)
52	X_train
",DATA_TRANSFORM
585,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_train_50 -----x train---->X_train_52],"50	X_train = sc_X.fit_transform(X_train)
51	X_test = sc_X.transform(X_test)
52	X_train
53	
",DATA_TRANSFORM
586,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_test_51 -----x test---->X_test_57],"55	norm_X = Normalizer()
56	X_train = norm_X.fit_transform(X_train)
57	X_test = norm_X.transform(X_test)
58	X_train
",DATA_TRANSFORM
587,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_train_52 -----x train---->X_train_56],"54	from sklearn.preprocessing import Normalizer
55	norm_X = Normalizer()
56	X_train = norm_X.fit_transform(X_train)
57	X_test = norm_X.transform(X_test)
",DATA_TRANSFORM
588,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[norm_X_55 -----fit transform---->X_train_56],"54	from sklearn.preprocessing import Normalizer
55	norm_X = Normalizer()
56	X_train = norm_X.fit_transform(X_train)
57	X_test = norm_X.transform(X_test)
",DATA_TRANSFORM
589,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[norm_X_55 -----transform---->X_test_57],"55	norm_X = Normalizer()
56	X_train = norm_X.fit_transform(X_train)
57	X_test = norm_X.transform(X_test)
58	X_train
",DATA_TRANSFORM
590,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_train_56 -----x train---->X_train_58],"56	X_train = norm_X.fit_transform(X_train)
57	X_test = norm_X.transform(X_test)
58	X_train
59	
",DATA_TRANSFORM
591,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[lb_61 -----fit transform---->y_62],"60	from sklearn.preprocessing import LabelBinarizer
61	lb = LabelBinarizer()
62	y = lb.fit_transform(y)
63	y = np.concatenate(y,axis=0)
",MODEL_TRAIN
592,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[y_62 -----y---->y_63],"61	lb = LabelBinarizer()
62	y = lb.fit_transform(y)
63	y = np.concatenate(y,axis=0)
64	y
",DATA_TRANSFORM
593,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[y_63 -----y---->y_64],"62	y = lb.fit_transform(y)
63	y = np.concatenate(y,axis=0)
64	y
65	
",DATA_TRANSFORM
594,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[numpy -----concatenate---->y_63],"61	lb = LabelBinarizer()
62	y = lb.fit_transform(y)
63	y = np.concatenate(y,axis=0)
64	y
",DATA_TRANSFORM
595,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[pca_68 -----fit transform---->X_r_69],"67	from sklearn.decomposition import PCA
68	pca = PCA(n_components=2)
69	X_r = pca.fit_transform(X)
70	
",DATA_TRANSFORM
596,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.decomposition -----pca---->pca_68],"66	import matplotlib.pyplot as plt
67	from sklearn.decomposition import PCA
68	pca = PCA(n_components=2)
69	X_r = pca.fit_transform(X)
",MODEL_TRAIN
597,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[sklearn.decomposition -----pca---->pca3_82],"80	plt.title(""PCA of Breast Cancer Dataset"")
81	
82	pca3 = PCA(n_components=3)
83	X_r3 = pca3.fit_transform(X)
",MODEL_TRAIN
598,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_r_69 -----x r---->plt_77],"75	
76	for color, i, target_names in zip(colors, [0,1], target_names):
77	    plt.scatter(X_r[y == i, 0], X_r[y == i, 1], color=color, alpha= .8, lw=2, label= target_names)
78	
",EDA
599,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[plt_73 -----loop---->plt_77],"
",EDA
600,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[matplotlib.pyplot -----figure---->plt_73],"71	target_names = ['no','yse']
72	
73	plt.figure()
74	colors = ['darkorange','turquoise']
",EDA
601,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[matplotlib.pyplot -----scatter---->plt_77],"75	
76	for color, i, target_names in zip(colors, [0,1], target_names):
77	    plt.scatter(X_r[y == i, 0], X_r[y == i, 1], color=color, alpha= .8, lw=2, label= target_names)
78	
",EDA
602,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[matplotlib.pyplot -----legend---->plt_79],"77	    plt.scatter(X_r[y == i, 0], X_r[y == i, 1], color=color, alpha= .8, lw=2, label= target_names)
78	
79	plt.legend(scatterpoints=1)
80	plt.title(""PCA of Breast Cancer Dataset"")
",EDA
603,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[matplotlib.pyplot -----title---->plt_80],"78	
79	plt.legend(scatterpoints=1)
80	plt.title(""PCA of Breast Cancer Dataset"")
81	
",EDA
604,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[matplotlib.pyplot -----figure---->plt_87],"85	from mpl_toolkits.mplot3d import Axes3D
86	
87	plt.figure()
88	fig = plt.figure(figsize = (10,8))
",EDA
605,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[matplotlib.pyplot -----figure---->fig_88],"86	
87	plt.figure()
88	fig = plt.figure(figsize = (10,8))
89	ax = fig.add_subplot(111,projection='3d')
",EDA
606,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[matplotlib.pyplot -----scatter---->plt_92],"90	
91	for color, i, target_name in zip(colors,[0,1],target_names):
92	    plt.scatter(X_r3[y == i, 0],X_r3[y == i, 1],X_r3[y == i, 2],color=color, alpha=.8,lw=5,label=target_name)
93	    
",EDA
607,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[matplotlib.pyplot -----show---->plt_94],"92	    plt.scatter(X_r3[y == i, 0],X_r3[y == i, 1],X_r3[y == i, 2],color=color, alpha=.8,lw=5,label=target_name)
93	    
94	plt.show()
95	
",EDA
608,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[plt_77 -----end_loop---->loop_plt_73_plt_77],"
",EDA
609,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[loop_plt_73_plt_77 -----restart_loop---->plt_73],"
",EDA
610,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[pca3_82 -----fit transform---->X_r3_83],"81	
82	pca3 = PCA(n_components=3)
83	X_r3 = pca3.fit_transform(X)
84	
",DATA_TRANSFORM
611,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[pca3_82 -----explained variance ratio---->pca3_96],"94	plt.show()
95	
96	pca3.explained_variance_ratio_
97	
",EDA
612,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_r3_83 -----x r3---->plt_92],"90	
91	for color, i, target_name in zip(colors,[0,1],target_names):
92	    plt.scatter(X_r3[y == i, 0],X_r3[y == i, 1],X_r3[y == i, 2],color=color, alpha=.8,lw=5,label=target_name)
93	    
",EDA
613,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[plt_87 -----loop---->plt_92],"
",EDA
614,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[fig_88 -----add subplot---->ax_89],"87	plt.figure()
88	fig = plt.figure(figsize = (10,8))
89	ax = fig.add_subplot(111,projection='3d')
90	
",EDA
615,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[plt_92 -----end_loop---->loop_plt_87_plt_92],"
",EDA
616,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[loop_plt_87_plt_92 -----restart_loop---->plt_87],"
",EDA
617,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[pca3_96 -----explained variance ratio---->pca3_98_intermediate_1],"pca3_82 -----explained variance ratio---->pca3_96
pca3_98_intermediate_1 -----explained variance ratio---->pca3_98
pca3_98_intermediate_1 -----sum---->pca3_98",EDA
618,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[Dataset_12_intermediate_1 -----sum---->Dataset_12],"Dataset_10 -----isnull---->Dataset_12_intermediate_1
pca3_98_intermediate_1 -----sum---->pca3_98
pca3_98_intermediate_1 -----select---->pca3_98
pca3_98_intermediate_1 -----reassign---->pca3_98",DATA_TRANSFORM
619,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[missing_17_intermediate_1 -----values---->missing_17_intermediate_2],"Dataset_12 -----select---->missing_17_intermediate_1
pca3_98_intermediate_1 -----values---->pca3_98
pca3_98_intermediate_1 -----reshape---->pca3_98",DATA_TRANSFORM
620,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[missing_17_intermediate_2 -----reshape---->missing_17],"missing_17_intermediate_1 -----values---->missing_17_intermediate_2
pca3_98_intermediate_1 -----reshape---->pca3_98
pca3_98_intermediate_1 -----missing---->pca3_98",DATA_TRANSFORM
621,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[Dataset_22_intermediate_1 -----sum---->Dataset_22],"Dataset_20 -----isnull---->Dataset_22_intermediate_1
pca3_98_intermediate_1 -----sum---->pca3_98
pca3_98_intermediate_1 -----iloc---->pca3_98
pca3_98_intermediate_1 -----iloc---->pca3_98",EDA
622,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[categorcial_feature_mask_29_intermediate_1 -----equal---->categorcial_feature_mask_29],"X_24 -----dtypes---->categorcial_feature_mask_29_intermediate_1
pca3_98_intermediate_1 -----equal---->pca3_98
pca3_98_intermediate_1 -----x columns[categorcial feature mask]---->pca3_98",DATA_TRANSFORM
623,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[categorcial_cols_30_intermediate_1 -----tolist---->categorcial_cols_30],"X_24 -----columns---->categorcial_cols_30_intermediate_1
pca3_98_intermediate_1 -----tolist---->pca3_98
pca3_98_intermediate_1 -----x[categorcial cols]---->pca3_98",DATA_TRANSFORM
624,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[X_31_intermediate_1 -----apply---->X_31],"X_24 -----x[categorcial cols]---->X_31_intermediate_1
pca3_98_intermediate_1 -----apply---->pca3_98
pca3_98_intermediate_1 -----head---->pca3_98",DATA_TRANSFORM
625,0000347864da3dbdcc2302192c4ef7d1f64a761c.execution_graph,[pca3_98_intermediate_1 -----sum---->pca3_98],"pca3_96 -----explained variance ratio---->pca3_98_intermediate_1
pca3_98_intermediate_1 -----sum---->pca3_98",EDA
626,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_4 -----columns---->prods_6_intermediate_1],"pandas -----read csv---->trn_4
labels_44_intermediate_1 -----columns---->labels_44
labels_44_intermediate_1 -----select---->labels_44
labels_44_intermediate_1 -----tolist---->labels_44",DATA_TRANSFORM
627,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_4 -----select---->trn_14_intermediate_1],"pandas -----read csv---->trn_4
labels_44_intermediate_1 -----columns---->labels_44
labels_44_intermediate_1 -----select---->labels_44
labels_44_intermediate_1 -----map---->labels_44",DATA_TRANSFORM
628,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[pandas -----read csv---->trn_4],"2	import numpy as np
3	
4	trn = pd.read_csv('./dataset/train_ver2.csv')
5	
",DATA_IMPORT_EXTRACTION
629,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[prods_6 -----prods---->add_cols_43],"41	    df_trn[padd] = ((df_trn[prod] == 1) & (df_trn[prev] == 0)).astype(np.int8) 
42	
43	add_cols = [prod + '_add' for prod in prods]
44	labels = df_trn[add_cols].copy()
",DATA_TRANSFORM
630,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[prods_6 -----prods---->labels_45],"43	add_cols = [prod + '_add' for prod in prods]
44	labels = df_trn[add_cols].copy()
45	labels.columns = prods
46	
",MODEL_TRAIN
631,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[prods_6 -----prods---->columns_45],"43	add_cols = [prod + '_add' for prod in prods]
44	labels = df_trn[add_cols].copy()
45	labels.columns = prods
46	
",DATA_TRANSFORM
632,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_14 -----copy---->trn_lag_16],"14	trn['int_date'] = trn['fecha_dato'].map(date_to_int).astype(np.int8)
15	
16	trn_lag = trn.copy()
17	
",DATA_TRANSFORM
633,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_14 -----columns---->trn_lag_19],"17	
18	trn_lag['int_date'] += 1
19	trn_lag.columns = [col + '_prev' if col not in ['ncodpers', 'int_date'] else col for col in trn.columns]
20	
",DATA_TRANSFORM
634,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_14 -----columns---->columns_19],"17	
18	trn_lag['int_date'] += 1
19	trn_lag.columns = [col + '_prev' if col not in ['ncodpers', 'int_date'] else col for col in trn.columns]
20	
",DATA_TRANSFORM
635,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_14 -----head---->trn_25],"23	del trn_lag['canal_entrada_prev']
24	
25	trn.head()
26	
",EDA
636,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_lag_16 -----add---->trn_lag_18],"16	trn_lag = trn.copy()
17	
18	trn_lag['int_date'] += 1
19	trn_lag.columns = [col + '_prev' if col not in ['ncodpers', 'int_date'] else col for col in trn.columns]
",DATA_TRANSFORM
637,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_lag_18 -----if---->trn_lag_19],"17	
18	trn_lag['int_date'] += 1
19	trn_lag.columns = [col + '_prev' if col not in ['ncodpers', 'int_date'] else col for col in trn.columns]
20	
",DATA_TRANSFORM
638,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_lag_19 -----trn lag---->df_trn_27],"25	trn.head()
26	
27	df_trn = trn.merge(trn_lag, on=['ncodpers', 'int_date'], how='left')
28	
",DATA_TRANSFORM
639,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[columns_19 -----reassign---->columns_45],"43	add_cols = [prod + '_add' for prod in prods]
44	labels = df_trn[add_cols].copy()
45	labels.columns = prods
46	
",DATA_TRANSFORM
640,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_25 -----merge---->df_trn_27],"25	trn.head()
26	
27	df_trn = trn.merge(trn_lag, on=['ncodpers', 'int_date'], how='left')
28	
",DATA_TRANSFORM
641,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[df_trn_27 -----head---->df_trn_31],"29	del trn, trn_lag
30	
31	df_trn.head()
32	
",EDA
642,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[df_trn_31 -----loop---->df_trn_35_intermediate_1],"df_trn_27 -----head---->df_trn_31
loop_df_trn_31_df_trn_35 -----restart_loop---->df_trn_31
labels_44_intermediate_1 -----loop---->labels_44
labels_44_intermediate_1 -----df trn[prev]---->labels_44",DATA_TRANSFORM
643,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[df_trn_35 -----end_loop---->loop_df_trn_31_df_trn_35],"
",DATA_TRANSFORM
644,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[prev_34 -----df trn[prev]---->df_trn_35],"33	for prod in prods:
34	    prev = prod + '_prev'
35	    df_trn[prev].fillna(0, inplace=True)
36	df_trn.head()
",DATA_TRANSFORM
645,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[prev_34 -----loop---->prev_40],"
",DATA_TRANSFORM
646,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[loop_df_trn_31_df_trn_35 -----restart_loop---->df_trn_31],"
",DATA_TRANSFORM
647,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[loop_df_trn_31_df_trn_35 -----head---->df_trn_36],"34	    prev = prod + '_prev'
35	    df_trn[prev].fillna(0, inplace=True)
36	df_trn.head()
37	
",EDA
648,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[df_trn_36 -----loop---->df_trn_41_intermediate_1],"loop_df_trn_31_df_trn_35 -----head---->df_trn_36
loop_df_trn_36_df_trn_41 -----restart_loop---->df_trn_36
labels_44_intermediate_1 -----loop---->labels_44
labels_44_intermediate_1 -----df trn[prod]---->labels_44",DATA_TRANSFORM
649,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[prev_40 -----df trn[prev]---->df_trn_41],"39	    padd = prod + '_add'
40	    prev = prod + '_prev'
41	    df_trn[padd] = ((df_trn[prod] == 1) & (df_trn[prev] == 0)).astype(np.int8) 
42	
",DATA_TRANSFORM
650,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[prev_40 -----end_loop---->loop_prev_34_prev_40],"
",DATA_TRANSFORM
651,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[df_trn_41 -----end_loop---->loop_df_trn_36_df_trn_41],"
",DATA_TRANSFORM
652,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[loop_prev_34_prev_40 -----restart_loop---->prev_34],"
",DATA_TRANSFORM
653,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[loop_df_trn_36_df_trn_41 -----restart_loop---->df_trn_36],"
",DATA_TRANSFORM
654,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[loop_df_trn_36_df_trn_41 -----df trn[add cols]---->labels_44_intermediate_1],"df_trn_41 -----end_loop---->loop_df_trn_36_df_trn_41
labels_44_intermediate_1 -----restart_loop---->labels_44
labels_44_intermediate_1 -----df trn[add cols]---->labels_44
labels_44_intermediate_1 -----copy---->labels_44",DATA_TRANSFORM
655,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[add_cols_43 -----df trn[add cols]---->labels_44],"42	
43	add_cols = [prod + '_add' for prod in prods]
44	labels = df_trn[add_cols].copy()
45	labels.columns = prods
",DATA_TRANSFORM
656,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[labels_44 -----reassign---->labels_45],"43	add_cols = [prod + '_add' for prod in prods]
44	labels = df_trn[add_cols].copy()
45	labels.columns = prods
46	
",DATA_TRANSFORM
657,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[labels_45 -----to csv---->labels_47],"45	labels.columns = prods
46	
47	labels.to_csv('./dataset/labels.csv', index=False)
",DATA_EXPORT
658,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[prods_6_intermediate_1 -----tolist---->prods_6],"trn_4 -----columns---->prods_6_intermediate_1
labels_44_intermediate_1 -----tolist---->labels_44
labels_44_intermediate_1 -----prods---->labels_44
labels_44_intermediate_1 -----prods---->labels_44
labels_44_intermediate_1 -----prods---->labels_44",DATA_TRANSFORM
659,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_14_intermediate_1 -----map---->trn_14_intermediate_2],"trn_4 -----select---->trn_14_intermediate_1
labels_44_intermediate_1 -----map---->labels_44
labels_44_intermediate_1 -----astype---->labels_44",DATA_TRANSFORM
660,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[trn_14_intermediate_2 -----astype---->trn_14],"trn_14_intermediate_1 -----map---->trn_14_intermediate_2
labels_44_intermediate_1 -----astype---->labels_44
labels_44_intermediate_1 -----copy---->labels_44
labels_44_intermediate_1 -----columns---->labels_44
labels_44_intermediate_1 -----columns---->labels_44
labels_44_intermediate_1 -----head---->labels_44",DATA_TRANSFORM
661,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[df_trn_35_intermediate_1 -----df trn[prev]---->df_trn_35_intermediate_2],"df_trn_31 -----loop---->df_trn_35_intermediate_1
labels_44_intermediate_1 -----df trn[prev]---->labels_44
labels_44_intermediate_1 -----fillna---->labels_44",DATA_TRANSFORM
662,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[df_trn_35_intermediate_2 -----fillna---->df_trn_35],"df_trn_35_intermediate_1 -----df trn[prev]---->df_trn_35_intermediate_2
labels_44_intermediate_1 -----fillna---->labels_44
labels_44_intermediate_1 -----end_loop---->labels_44",DATA_TRANSFORM
663,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[df_trn_41_intermediate_1 -----df trn[prod]---->df_trn_41_intermediate_2],"df_trn_36 -----loop---->df_trn_41_intermediate_1
labels_44_intermediate_1 -----df trn[prod]---->labels_44
labels_44_intermediate_1 -----equal---->labels_44",DATA_TRANSFORM
664,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[df_trn_41_intermediate_2 -----equal---->df_trn_41_intermediate_3],"df_trn_41_intermediate_1 -----df trn[prod]---->df_trn_41_intermediate_2
labels_44_intermediate_1 -----equal---->labels_44
labels_44_intermediate_1 -----df trn[prev]---->labels_44",DATA_TRANSFORM
665,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[df_trn_41_intermediate_3 -----df trn[prev]---->df_trn_41_intermediate_4],"df_trn_41_intermediate_2 -----equal---->df_trn_41_intermediate_3
labels_44_intermediate_1 -----df trn[prev]---->labels_44
labels_44_intermediate_1 -----astype---->labels_44",DATA_TRANSFORM
666,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[df_trn_41_intermediate_4 -----astype---->df_trn_41],"df_trn_41_intermediate_3 -----df trn[prev]---->df_trn_41_intermediate_4
labels_44_intermediate_1 -----astype---->labels_44
labels_44_intermediate_1 -----end_loop---->labels_44",DATA_TRANSFORM
667,00003a6a980dffad90d4481db0c49142b9dac913.execution_graph,[labels_44_intermediate_1 -----copy---->labels_44],"loop_df_trn_36_df_trn_41 -----df trn[add cols]---->labels_44_intermediate_1
labels_44_intermediate_1 -----copy---->labels_44
labels_44_intermediate_1 -----reassign---->labels_44",DATA_TRANSFORM
668,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df_3 -----iloc---->new_header_7],"5	
6	
7	new_header = df.iloc[0] 
8	df = df[1:]
",DATA_TRANSFORM
669,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df_3 -----slice---->df_8],"6	
7	new_header = df.iloc[0] 
8	df = df[1:]
9	df.columns = new_header 
",DATA_TRANSFORM
670,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[pandas -----read html---->df_3],"1	import pandas as pd
2	
3	df = pd.read_html(""https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M"")[0]
4	
",DATA_IMPORT_EXTRACTION
671,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[pandas -----read csv---->df3_29],"27	
28	
29	df3 = pd.read_csv('https://cocl.us/Geospatial_data')
30	
",DATA_IMPORT_EXTRACTION
672,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[pandas -----merge---->result_33],"31	df3.head()
32	
33	result = pd.merge(df2, df3, how='inner', left_on='Postcode', right_on='Postal Code')
34	del result['Postal Code']
",DATA_TRANSFORM
673,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[new_header_7 -----new header---->df_9],"7	new_header = df.iloc[0] 
8	df = df[1:]
9	df.columns = new_header 
10	
",DATA_TRANSFORM
674,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[new_header_7 -----new header---->columns_9],"7	new_header = df.iloc[0] 
8	df = df[1:]
9	df.columns = new_header 
10	
",DATA_TRANSFORM
675,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df_8 -----reassign---->df_9],"7	new_header = df.iloc[0] 
8	df = df[1:]
9	df.columns = new_header 
10	
",DATA_TRANSFORM
676,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df_9 -----head---->df_12],"10	
11	
12	df.head()
13	
",DATA_TRANSFORM
677,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df_12 -----filter---->df2_14_intermediate_1],"df_9 -----head---->df_12
df2_25_intermediate_2 -----filter---->df2_25
df2_25_intermediate_2 -----select---->df2_25",DATA_TRANSFORM
678,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_14 -----reset index---->df2_15],"13	
14	df2 = df[df['Borough']!='Not assigned']
15	df2 = df2.reset_index(drop=True)
16	
",DATA_TRANSFORM
679,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_15 -----head---->df2_19],"17	
18	
19	df2.head()
20	
",EDA
680,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_19 -----filter---->df2_21_intermediate_1],"df2_15 -----head---->df2_19
df2_25_intermediate_2 -----filter---->df2_25
df2_25_intermediate_2 -----postcode---->df2_25",EDA
681,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_21 -----loc---->df2_23_intermediate_1],"df2_21_intermediate_2 -----equal---->df2_21
df2_25_intermediate_2 -----loc---->df2_25
df2_25_intermediate_2 -----select---->df2_25",DATA_TRANSFORM
682,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_23 -----loc---->loc_23_intermediate_1],"df2_23_intermediate_2 -----equal---->df2_23
df2_25_intermediate_2 -----loc---->df2_25
df2_25_intermediate_2 -----filter---->df2_25
df2_25_intermediate_2 -----select---->df2_25",DATA_TRANSFORM
683,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_23 -----filter---->df2_25_intermediate_1],"df2_23_intermediate_2 -----equal---->df2_23
df2_25_intermediate_2 -----loc---->df2_25
df2_25_intermediate_2 -----filter---->df2_25
df2_25_intermediate_2 -----postcode---->df2_25",DATA_TRANSFORM
684,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_25 -----df2---->result_33],"31	df3.head()
32	
33	result = pd.merge(df2, df3, how='inner', left_on='Postcode', right_on='Postal Code')
34	del result['Postal Code']
",DATA_TRANSFORM
685,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df3_29 -----head---->df3_31],"29	df3 = pd.read_csv('https://cocl.us/Geospatial_data')
30	
31	df3.head()
32	
",DATA_TRANSFORM
686,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df3_31 -----df3---->result_33],"31	df3.head()
32	
33	result = pd.merge(df2, df3, how='inner', left_on='Postcode', right_on='Postal Code')
34	del result['Postal Code']
",DATA_TRANSFORM
687,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[result_33 -----head---->result_35],"33	result = pd.merge(df2, df3, how='inner', left_on='Postcode', right_on='Postal Code')
34	del result['Postal Code']
35	result.head()
36	
",EDA
688,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_14_intermediate_1 -----select---->df2_14_intermediate_2],"df_12 -----filter---->df2_14_intermediate_1
df2_25_intermediate_2 -----select---->df2_25
df2_25_intermediate_2 -----not equal---->df2_25",DATA_TRANSFORM
689,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_14_intermediate_2 -----not equal---->df2_14],"df2_14_intermediate_1 -----select---->df2_14_intermediate_2
df2_25_intermediate_2 -----not equal---->df2_25
df2_25_intermediate_2 -----reset index---->df2_25",DATA_TRANSFORM
690,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_21_intermediate_1 -----postcode---->df2_21_intermediate_2],"df2_19 -----filter---->df2_21_intermediate_1
df2_25_intermediate_2 -----postcode---->df2_25
df2_25_intermediate_2 -----equal---->df2_25",DATA_TRANSFORM
691,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_21_intermediate_2 -----equal---->df2_21],"df2_21_intermediate_1 -----postcode---->df2_21_intermediate_2
df2_25_intermediate_2 -----equal---->df2_25
df2_25_intermediate_2 -----loc---->df2_25",DATA_TRANSFORM
692,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_23_intermediate_1 -----select---->df2_23_intermediate_2],"df2_21 -----loc---->df2_23_intermediate_1
df2_25_intermediate_2 -----select---->df2_25
df2_25_intermediate_2 -----equal---->df2_25",DATA_TRANSFORM
693,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_23_intermediate_2 -----equal---->df2_23],"df2_23_intermediate_1 -----select---->df2_23_intermediate_2
df2_25_intermediate_2 -----equal---->df2_25
df2_25_intermediate_2 -----loc---->df2_25
df2_25_intermediate_2 -----filter---->df2_25",DATA_TRANSFORM
694,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[loc_23_intermediate_1 -----select---->loc_23_intermediate_2],"df2_23 -----loc---->loc_23_intermediate_1
df2_25_intermediate_2 -----select---->df2_25
df2_25_intermediate_2 -----equal---->df2_25",DATA_TRANSFORM
695,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[loc_23_intermediate_2 -----equal---->loc_23],"loc_23_intermediate_1 -----select---->loc_23_intermediate_2
df2_25_intermediate_2 -----equal---->df2_25",DATA_TRANSFORM
696,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_25_intermediate_1 -----postcode---->df2_25_intermediate_2],"df2_23 -----filter---->df2_25_intermediate_1
df2_25_intermediate_2 -----postcode---->df2_25
df2_25_intermediate_2 -----equal---->df2_25",DATA_TRANSFORM
697,00003b0c778faa19a290df813a02995b960cefb0.execution_graph,[df2_25_intermediate_2 -----equal---->df2_25],"df2_25_intermediate_1 -----postcode---->df2_25_intermediate_2
df2_25_intermediate_2 -----equal---->df2_25
df2_25_intermediate_2 -----df2---->df2_25",DATA_TRANSFORM
698,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[plt_10 -----reassign---->plt_11],"9	# rather than in a new window.
10	plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots
11	plt.rcParams['image.interpolation'] = 'nearest'
12	plt.rcParams['image.cmap'] = 'gray'
",ENVIRONMENT
699,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[rcParams_10 -----reassign---->rcParams_11],"9	# rather than in a new window.
10	plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots
11	plt.rcParams['image.interpolation'] = 'nearest'
12	plt.rcParams['image.cmap'] = 'gray'
",ENVIRONMENT
700,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[plt_11 -----reassign---->plt_12],"10	plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots
11	plt.rcParams['image.interpolation'] = 'nearest'
12	plt.rcParams['image.cmap'] = 'gray'
13	
",ENVIRONMENT
701,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[rcParams_11 -----reassign---->rcParams_12],"10	plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots
11	plt.rcParams['image.interpolation'] = 'nearest'
12	plt.rcParams['image.cmap'] = 'gray'
13	
",ENVIRONMENT
702,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[plt_12 -----loop---->plt_46],"
",EDA
703,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[cifar10_dir_18 -----cifar10 dir---->X_train_28],"26	   pass
27	
28	X_train, y_train, X_test, y_test = load_CIFAR10(cifar10_dir)
29	
",DATA_IMPORT_EXTRACTION
704,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[cifar10_dir_18 -----cifar10 dir---->y_train_28],"26	   pass
27	
28	X_train, y_train, X_test, y_test = load_CIFAR10(cifar10_dir)
29	
",DATA_IMPORT_EXTRACTION
705,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[cifar10_dir_18 -----cifar10 dir---->X_test_28],"26	   pass
27	
28	X_train, y_train, X_test, y_test = load_CIFAR10(cifar10_dir)
29	
",DATA_IMPORT_EXTRACTION
706,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[cifar10_dir_18 -----cifar10 dir---->y_test_28],"26	   pass
27	
28	X_train, y_train, X_test, y_test = load_CIFAR10(cifar10_dir)
29	
",DATA_IMPORT_EXTRACTION
707,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_train_28 -----x train[mask]---->X_train_56],"54	num_training = 5000
55	mask = list(range(num_training))
56	X_train = X_train[mask]
57	y_train = y_train[mask]
",DATA_TRANSFORM
708,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[cs231n.data_utils -----load cifar10---->X_train_28],"26	   pass
27	
28	X_train, y_train, X_test, y_test = load_CIFAR10(cifar10_dir)
29	
",DATA_IMPORT_EXTRACTION
709,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[cs231n.data_utils -----load cifar10---->y_train_28],"26	   pass
27	
28	X_train, y_train, X_test, y_test = load_CIFAR10(cifar10_dir)
29	
",DATA_IMPORT_EXTRACTION
710,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[cs231n.data_utils -----load cifar10---->X_test_28],"26	   pass
27	
28	X_train, y_train, X_test, y_test = load_CIFAR10(cifar10_dir)
29	
",DATA_IMPORT_EXTRACTION
711,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[cs231n.data_utils -----load cifar10---->y_test_28],"26	   pass
27	
28	X_train, y_train, X_test, y_test = load_CIFAR10(cifar10_dir)
29	
",DATA_IMPORT_EXTRACTION
712,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[y_train_28 -----y train[mask]---->y_train_57],"55	mask = list(range(num_training))
56	X_train = X_train[mask]
57	y_train = y_train[mask]
58	
",DATA_TRANSFORM
713,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_test_28 -----x test[mask]---->X_test_61],"59	num_test = 500
60	mask = list(range(num_test))
61	X_test = X_test[mask]
62	y_test = y_test[mask]
",DATA_TRANSFORM
714,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[y_test_28 -----y test[mask]---->y_test_62],"60	mask = list(range(num_test))
61	X_test = X_test[mask]
62	y_test = y_test[mask]
63	
",DATA_TRANSFORM
715,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classes_38 -----classes---->num_classes_39],"37	# We show a few examples of training images from each class.
38	classes = ['plane', 'car', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
39	num_classes = len(classes)
40	samples_per_class = 7
",EDA
716,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[num_classes_39 -----mult---->plt_idx_45],"43	    idxs = np.random.choice(idxs, samples_per_class, replace=False)
44	    for i, idx in enumerate(idxs):
45	        plt_idx = i * num_classes + y + 1
46	        plt.subplot(samples_per_class, num_classes, plt_idx)
",EDA
717,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[num_classes_39 -----num classes---->plt_46],"44	    for i, idx in enumerate(idxs):
45	        plt_idx = i * num_classes + y + 1
46	        plt.subplot(samples_per_class, num_classes, plt_idx)
47	        plt.imshow(X_train[idx].astype('uint8'))
",EDA
718,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[samples_per_class_40 -----samples per class---->idxs_43],"41	for y, cls in enumerate(classes):
42	    idxs = np.flatnonzero(y_train == y)
43	    idxs = np.random.choice(idxs, samples_per_class, replace=False)
44	    for i, idx in enumerate(idxs):
",EDA
719,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[samples_per_class_40 -----samples per class---->plt_46],"44	    for i, idx in enumerate(idxs):
45	        plt_idx = i * num_classes + y + 1
46	        plt.subplot(samples_per_class, num_classes, plt_idx)
47	        plt.imshow(X_train[idx].astype('uint8'))
",EDA
720,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[idxs_42 -----idxs---->idxs_43],"41	for y, cls in enumerate(classes):
42	    idxs = np.flatnonzero(y_train == y)
43	    idxs = np.random.choice(idxs, samples_per_class, replace=False)
44	    for i, idx in enumerate(idxs):
",EDA
721,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[numpy -----flatnonzero---->idxs_42],"40	samples_per_class = 7
41	for y, cls in enumerate(classes):
42	    idxs = np.flatnonzero(y_train == y)
43	    idxs = np.random.choice(idxs, samples_per_class, replace=False)
",EDA
722,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[numpy -----choice---->idxs_43],"41	for y, cls in enumerate(classes):
42	    idxs = np.flatnonzero(y_train == y)
43	    idxs = np.random.choice(idxs, samples_per_class, replace=False)
44	    for i, idx in enumerate(idxs):
",EDA
723,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[numpy -----reshape---->X_train_65],"63	
64	# Reshape the image data into rows
65	X_train = np.reshape(X_train, (X_train.shape[0], -1))
66	X_test = np.reshape(X_test, (X_test.shape[0], -1))
",DATA_TRANSFORM
724,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[numpy -----reshape---->X_test_66],"64	# Reshape the image data into rows
65	X_train = np.reshape(X_train, (X_train.shape[0], -1))
66	X_test = np.reshape(X_test, (X_test.shape[0], -1))
67	print(X_train.shape, X_test.shape)
",DATA_TRANSFORM
725,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[numpy -----sum---->num_correct_94],"92	
93	# Compute and print the fraction of correctly predicted examples
94	num_correct = np.sum(y_test_pred == y_test)
95	accuracy = float(num_correct) / num_test
",MODEL_EVALUATION
726,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[numpy -----sum---->num_correct_99],"97	
98	y_test_pred = classifier.predict_labels(dists, k=5)
99	num_correct = np.sum(y_test_pred == y_test)
100	accuracy = float(num_correct) / num_test
",MODEL_EVALUATION
727,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[numpy -----linalg---->difference_114_intermediate_1],"k_to_accuracies_199_intermediate_2 -----flatnonzero---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----choice---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----reshape---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----reshape---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----sum---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----sum---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----linalg---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----linalg---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----array---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----array---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----sum---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----norm---->k_to_accuracies_199",MODEL_EVALUATION
728,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[numpy -----linalg---->difference_126_intermediate_1],"k_to_accuracies_199_intermediate_2 -----flatnonzero---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----choice---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----reshape---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----reshape---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----sum---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----sum---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----linalg---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----linalg---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----array---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----array---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----sum---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----norm---->k_to_accuracies_199",MODEL_EVALUATION
729,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[numpy -----array---->accuracies_mean_214],"212	
213	# plot the trend line with error bars that correspond to standard deviation
214	accuracies_mean = np.array([np.mean(v) for k,v in sorted(k_to_accuracies.items())])
215	accuracies_std = np.array([np.std(v) for k,v in sorted(k_to_accuracies.items())])
",MODEL_EVALUATION
730,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[numpy -----array---->accuracies_std_215],"213	# plot the trend line with error bars that correspond to standard deviation
214	accuracies_mean = np.array([np.mean(v) for k,v in sorted(k_to_accuracies.items())])
215	accuracies_std = np.array([np.std(v) for k,v in sorted(k_to_accuracies.items())])
216	plt.errorbar(k_choices, accuracies_mean, yerr=accuracies_std)
",DATA_TRANSFORM
731,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[numpy -----sum---->num_correct_232],"230	
231	# Compute and display the accuracy
232	num_correct = np.sum(y_test_pred == y_test)
233	accuracy = float(num_correct) / num_test
",MODEL_EVALUATION
732,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[plt_idx_45 -----plt idx---->plt_46],"44	    for i, idx in enumerate(idxs):
45	        plt_idx = i * num_classes + y + 1
46	        plt.subplot(samples_per_class, num_classes, plt_idx)
47	        plt.imshow(X_train[idx].astype('uint8'))
",EDA
733,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----subplot---->plt_46],"44	    for i, idx in enumerate(idxs):
45	        plt_idx = i * num_classes + y + 1
46	        plt.subplot(samples_per_class, num_classes, plt_idx)
47	        plt.imshow(X_train[idx].astype('uint8'))
",EDA
734,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----imshow---->plt_47],"45	        plt_idx = i * num_classes + y + 1
46	        plt.subplot(samples_per_class, num_classes, plt_idx)
47	        plt.imshow(X_train[idx].astype('uint8'))
48	        plt.axis('off')
",EDA
735,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----axis---->plt_48],"46	        plt.subplot(samples_per_class, num_classes, plt_idx)
47	        plt.imshow(X_train[idx].astype('uint8'))
48	        plt.axis('off')
49	        if i == 0:
",EDA
736,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----title---->plt_50],"48	        plt.axis('off')
49	        if i == 0:
50	            plt.title(cls)
51	plt.show()
",EDA
737,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----show---->plt_51],"49	        if i == 0:
50	            plt.title(cls)
51	plt.show()
52	
",EDA
738,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----imshow---->plt_86],"84	# We can visualize the distance matrix: each row is a single test example and
85	# its distances to training examples
86	plt.imshow(dists, interpolation='none')
87	plt.show()
",EDA
739,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----show---->plt_87],"85	# its distances to training examples
86	plt.imshow(dists, interpolation='none')
87	plt.show()
88	
",EDA
740,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----scatter---->plt_211],"209	for k in k_choices:
210	    accuracies = k_to_accuracies[k]
211	    plt.scatter([k] * len(accuracies), accuracies)
212	
",EDA
741,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----errorbar---->plt_216],"214	accuracies_mean = np.array([np.mean(v) for k,v in sorted(k_to_accuracies.items())])
215	accuracies_std = np.array([np.std(v) for k,v in sorted(k_to_accuracies.items())])
216	plt.errorbar(k_choices, accuracies_mean, yerr=accuracies_std)
217	plt.title('Cross-validation on k')
",EDA
742,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----title---->plt_217],"215	accuracies_std = np.array([np.std(v) for k,v in sorted(k_to_accuracies.items())])
216	plt.errorbar(k_choices, accuracies_mean, yerr=accuracies_std)
217	plt.title('Cross-validation on k')
218	plt.xlabel('k')
",EDA
743,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----xlabel---->plt_218],"216	plt.errorbar(k_choices, accuracies_mean, yerr=accuracies_std)
217	plt.title('Cross-validation on k')
218	plt.xlabel('k')
219	plt.ylabel('Cross-validation accuracy')
",EDA
744,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----ylabel---->plt_219],"217	plt.title('Cross-validation on k')
218	plt.xlabel('k')
219	plt.ylabel('Cross-validation accuracy')
220	plt.show()
",EDA
745,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[matplotlib.pyplot -----show---->plt_220],"218	plt.xlabel('k')
219	plt.ylabel('Cross-validation accuracy')
220	plt.show()
221	
",EDA
746,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[plt_48 -----if---->plt_50],"
",EDA
747,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[plt_50 -----end_loop---->loop_plt_12_plt_50],"
",EDA
748,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[loop_plt_12_plt_50 -----restart_loop---->plt_12],"
",EDA
749,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[mask_55 -----x train[mask]---->X_train_56],"54	num_training = 5000
55	mask = list(range(num_training))
56	X_train = X_train[mask]
57	y_train = y_train[mask]
",DATA_TRANSFORM
750,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[mask_55 -----y train[mask]---->y_train_57],"55	mask = list(range(num_training))
56	X_train = X_train[mask]
57	y_train = y_train[mask]
58	
",DATA_TRANSFORM
751,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[mask_55 -----list---->mask_60],"58	
59	num_test = 500
60	mask = list(range(num_test))
61	X_test = X_test[mask]
",DATA_TRANSFORM
752,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_train_56 -----x train---->X_train_65],"63	
64	# Reshape the image data into rows
65	X_train = np.reshape(X_train, (X_train.shape[0], -1))
66	X_test = np.reshape(X_test, (X_test.shape[0], -1))
",DATA_TRANSFORM
753,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[y_train_57 -----y train---->classifier_75],"73	# the Classifier simply remembers the data and does no further processing 
74	classifier = KNearestNeighbor()
75	classifier.train(X_train, y_train)
76	
",MODEL_TRAIN
754,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[y_train_57 -----y train---->classifier_228],"226	
227	classifier = KNearestNeighbor()
228	classifier.train(X_train, y_train)
229	y_test_pred = classifier.predict(X_test, k=best_k)
",MODEL_TRAIN
755,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[num_test_59 -----div---->accuracy_95],"93	# Compute and print the fraction of correctly predicted examples
94	num_correct = np.sum(y_test_pred == y_test)
95	accuracy = float(num_correct) / num_test
96	print('Got %d / %d correct => accuracy: %f' % (num_correct, num_test, accuracy))
",MODEL_EVALUATION
756,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[num_test_59 -----div---->accuracy_100],"98	y_test_pred = classifier.predict_labels(dists, k=5)
99	num_correct = np.sum(y_test_pred == y_test)
100	accuracy = float(num_correct) / num_test
101	print('Got %d / %d correct => accuracy: %f' % (num_correct, num_test, accuracy))
",MODEL_EVALUATION
757,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[num_test_59 -----div---->accuracy_233],"231	# Compute and display the accuracy
232	num_correct = np.sum(y_test_pred == y_test)
233	accuracy = float(num_correct) / num_test
234	print('Got %d / %d correct => accuracy: %f' % (num_correct, num_test, accuracy))
",MODEL_EVALUATION
758,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[mask_60 -----x test[mask]---->X_test_61],"59	num_test = 500
60	mask = list(range(num_test))
61	X_test = X_test[mask]
62	y_test = y_test[mask]
",DATA_TRANSFORM
759,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[mask_60 -----y test[mask]---->y_test_62],"60	mask = list(range(num_test))
61	X_test = X_test[mask]
62	y_test = y_test[mask]
63	
",DATA_TRANSFORM
760,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_test_61 -----x test---->X_test_66],"64	# Reshape the image data into rows
65	X_train = np.reshape(X_train, (X_train.shape[0], -1))
66	X_test = np.reshape(X_test, (X_test.shape[0], -1))
67	print(X_train.shape, X_test.shape)
",DATA_TRANSFORM
761,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_train_65 -----x train---->classifier_75],"73	# the Classifier simply remembers the data and does no further processing 
74	classifier = KNearestNeighbor()
75	classifier.train(X_train, y_train)
76	
",MODEL_TRAIN
762,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_train_65 -----x train---->classifier_228],"226	
227	classifier = KNearestNeighbor()
228	classifier.train(X_train, y_train)
229	y_test_pred = classifier.predict(X_test, k=best_k)
",MODEL_TRAIN
763,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_test_66 -----x test---->dists_81],"79	
80	# Test your implementation:
81	dists = classifier.compute_distances_two_loops(X_test)
82	print(dists.shape)
",MODEL_EVALUATION
764,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_test_66 -----x test---->dists_one_106],"104	# with one loop. Implement the function compute_distances_one_loop and run the
105	# code below:
106	dists_one = classifier.compute_distances_one_loop(X_test)
107	
",MODEL_EVALUATION
765,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_test_66 -----x test---->dists_two_123],"121	# Now implement the fully vectorized version inside compute_distances_no_loops
122	# and run the code
123	dists_two = classifier.compute_distances_no_loops(X_test)
124	
",MODEL_EVALUATION
766,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_test_66 -----x test---->two_loop_time_144],"142	    return toc - tic
143	
144	two_loop_time = time_function(classifier.compute_distances_two_loops, X_test)
145	print('Two loop version took %f seconds' % two_loop_time)
",MODEL_EVALUATION
767,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_test_66 -----x test---->one_loop_time_147],"145	print('Two loop version took %f seconds' % two_loop_time)
146	
147	one_loop_time = time_function(classifier.compute_distances_one_loop, X_test)
148	print('One loop version took %f seconds' % one_loop_time)
",MODEL_EVALUATION
768,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_test_66 -----x test---->no_loop_time_150],"148	print('One loop version took %f seconds' % one_loop_time)
149	
150	no_loop_time = time_function(classifier.compute_distances_no_loops, X_test)
151	print('No loop version took %f seconds' % no_loop_time)
",MODEL_EVALUATION
769,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_test_66 -----x test---->y_test_pred_229],"227	classifier = KNearestNeighbor()
228	classifier.train(X_train, y_train)
229	y_test_pred = classifier.predict(X_test, k=best_k)
230	
",MODEL_EVALUATION
770,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_74 -----train---->classifier_75],"73	# the Classifier simply remembers the data and does no further processing 
74	classifier = KNearestNeighbor()
75	classifier.train(X_train, y_train)
76	
",MODEL_TRAIN
771,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[cs231n.classifiers -----knearest neighbor---->classifier_74],"72	# Remember that training a kNN classifier is a noop: 
73	# the Classifier simply remembers the data and does no further processing 
74	classifier = KNearestNeighbor()
75	classifier.train(X_train, y_train)
",ENVIRONMENT
772,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[cs231n.classifiers -----knearest neighbor---->classifier_227],"225	best_k = 10
226	
227	classifier = KNearestNeighbor()
228	classifier.train(X_train, y_train)
",ENVIRONMENT
773,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_75 -----compute distances two loops---->dists_81],"79	
80	# Test your implementation:
81	dists = classifier.compute_distances_two_loops(X_test)
82	print(dists.shape)
",MODEL_EVALUATION
774,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_75 -----predict labels---->y_test_pred_91],"89	# Now implement the function predict_labels and run the code below:
90	# We use k = 1 (which is Nearest Neighbor).
91	y_test_pred = classifier.predict_labels(dists, k=1)
92	
",MODEL_EVALUATION
775,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_75 -----predict labels---->y_test_pred_98],"96	print('Got %d / %d correct => accuracy: %f' % (num_correct, num_test, accuracy))
97	
98	y_test_pred = classifier.predict_labels(dists, k=5)
99	num_correct = np.sum(y_test_pred == y_test)
",MODEL_EVALUATION
776,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_75 -----compute distances one loop---->dists_one_106],"104	# with one loop. Implement the function compute_distances_one_loop and run the
105	# code below:
106	dists_one = classifier.compute_distances_one_loop(X_test)
107	
",MODEL_EVALUATION
777,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_75 -----compute distances no loops---->dists_two_123],"121	# Now implement the fully vectorized version inside compute_distances_no_loops
122	# and run the code
123	dists_two = classifier.compute_distances_no_loops(X_test)
124	
",MODEL_EVALUATION
778,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_75 -----classifier---->two_loop_time_144],"142	    return toc - tic
143	
144	two_loop_time = time_function(classifier.compute_distances_two_loops, X_test)
145	print('Two loop version took %f seconds' % two_loop_time)
",MODEL_EVALUATION
779,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_75 -----classifier---->one_loop_time_147],"145	print('Two loop version took %f seconds' % two_loop_time)
146	
147	one_loop_time = time_function(classifier.compute_distances_one_loop, X_test)
148	print('One loop version took %f seconds' % one_loop_time)
",MODEL_EVALUATION
780,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_75 -----classifier---->no_loop_time_150],"148	print('One loop version took %f seconds' % one_loop_time)
149	
150	no_loop_time = time_function(classifier.compute_distances_no_loops, X_test)
151	print('No loop version took %f seconds' % no_loop_time)
",MODEL_EVALUATION
781,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_75 -----loop---->classifier_198_intermediate_1],"y_train_57 -----y train---->classifier_75
X_train_65 -----x train---->classifier_75
classifier_74 -----train---->classifier_75
loop_classifier_75_classifier_198 -----restart_loop---->classifier_75
k_to_accuracies_199_intermediate_2 -----compute distances two loops---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----predict labels---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----predict labels---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----compute distances one loop---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----compute distances no loops---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----classifier---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----classifier---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----classifier---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----loop---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----train---->k_to_accuracies_199",MODEL_EVALUATION
782,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[dists_81 -----dists---->plt_86],"84	# We can visualize the distance matrix: each row is a single test example and
85	# its distances to training examples
86	plt.imshow(dists, interpolation='none')
87	plt.show()
",EDA
783,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[dists_81 -----dists---->y_test_pred_91],"89	# Now implement the function predict_labels and run the code below:
90	# We use k = 1 (which is Nearest Neighbor).
91	y_test_pred = classifier.predict_labels(dists, k=1)
92	
",MODEL_EVALUATION
784,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[dists_81 -----dists---->y_test_pred_98],"96	print('Got %d / %d correct => accuracy: %f' % (num_correct, num_test, accuracy))
97	
98	y_test_pred = classifier.predict_labels(dists, k=5)
99	num_correct = np.sum(y_test_pred == y_test)
",MODEL_EVALUATION
785,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[plt_87 -----loop---->plt_211],"
",EDA
786,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[y_test_pred_91 -----reassign---->y_test_pred_98],"96	print('Got %d / %d correct => accuracy: %f' % (num_correct, num_test, accuracy))
97	
98	y_test_pred = classifier.predict_labels(dists, k=5)
99	num_correct = np.sum(y_test_pred == y_test)
",MODEL_EVALUATION
787,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[num_correct_94 -----num correct---->accuracy_95],"93	# Compute and print the fraction of correctly predicted examples
94	num_correct = np.sum(y_test_pred == y_test)
95	accuracy = float(num_correct) / num_test
96	print('Got %d / %d correct => accuracy: %f' % (num_correct, num_test, accuracy))
",MODEL_EVALUATION
788,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[num_correct_94 -----reassign---->num_correct_99],"97	
98	y_test_pred = classifier.predict_labels(dists, k=5)
99	num_correct = np.sum(y_test_pred == y_test)
100	accuracy = float(num_correct) / num_test
",MODEL_EVALUATION
789,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[accuracy_95 -----float---->accuracy_100],"98	y_test_pred = classifier.predict_labels(dists, k=5)
99	num_correct = np.sum(y_test_pred == y_test)
100	accuracy = float(num_correct) / num_test
101	print('Got %d / %d correct => accuracy: %f' % (num_correct, num_test, accuracy))
",MODEL_EVALUATION
790,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[y_test_pred_98 -----reassign---->y_test_pred_229],"227	classifier = KNearestNeighbor()
228	classifier.train(X_train, y_train)
229	y_test_pred = classifier.predict(X_test, k=best_k)
230	
",MODEL_EVALUATION
791,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[num_correct_99 -----num correct---->accuracy_100],"98	y_test_pred = classifier.predict_labels(dists, k=5)
99	num_correct = np.sum(y_test_pred == y_test)
100	accuracy = float(num_correct) / num_test
101	print('Got %d / %d correct => accuracy: %f' % (num_correct, num_test, accuracy))
",MODEL_EVALUATION
792,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[num_correct_99 -----reassign---->num_correct_232],"230	
231	# Compute and display the accuracy
232	num_correct = np.sum(y_test_pred == y_test)
233	accuracy = float(num_correct) / num_test
",MODEL_EVALUATION
793,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[accuracy_100 -----float---->accuracy_233],"231	# Compute and display the accuracy
232	num_correct = np.sum(y_test_pred == y_test)
233	accuracy = float(num_correct) / num_test
234	print('Got %d / %d correct => accuracy: %f' % (num_correct, num_test, accuracy))
",MODEL_EVALUATION
794,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[difference_114 -----reassign---->difference_126],"124	
125	# check that the distance matrix agrees with the one we computed before:
126	difference = np.linalg.norm(dists - dists_two, ord='fro')
127	print('No loop difference was: %f' % (difference, ))
",MODEL_EVALUATION
795,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[k_choices_160 -----k choices---->plt_216],"214	accuracies_mean = np.array([np.mean(v) for k,v in sorted(k_to_accuracies.items())])
215	accuracies_std = np.array([np.std(v) for k,v in sorted(k_to_accuracies.items())])
216	plt.errorbar(k_choices, accuracies_mean, yerr=accuracies_std)
217	plt.title('Cross-validation on k')
",EDA
796,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[X_train_folds_162 -----extend---->X_train_folds_173],"171	# *****START OF YOUR CODE (DO NOT DELETE/MODIFY THIS LINE)*****
172	
173	X_train_folds.extend(np.array_split(X_train,num_folds))
174	y_train_folds.extend(np.array_split(y_train,num_folds))
",DATA_TRANSFORM
797,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[y_train_folds_163 -----extend---->y_train_folds_174],"172	
173	X_train_folds.extend(np.array_split(X_train,num_folds))
174	y_train_folds.extend(np.array_split(y_train,num_folds))
175	
",DATA_TRANSFORM
798,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[k_to_accuracies_182 -----loop---->k_to_accuracies_196],"
",HYPERPARAMETER_TUNING
799,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[k_to_accuracies_196 -----loop---->k_to_accuracies_199_intermediate_1],"k_to_accuracies_182 -----loop---->k_to_accuracies_196
loop_k_to_accuracies_196_k_to_accuracies_199 -----restart_loop---->k_to_accuracies_196
k_to_accuracies_199_intermediate_2 -----loop---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----k to accuracies[k]---->k_to_accuracies_199",HYPERPARAMETER_TUNING
800,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_198 -----end_loop---->loop_classifier_75_classifier_198],"
",MODEL_TRAIN
801,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[k_to_accuracies_199 -----end_loop---->loop_k_to_accuracies_196_k_to_accuracies_199],"
",MODEL_EVALUATION
802,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[loop_k_to_accuracies_196_k_to_accuracies_199 -----restart_loop---->k_to_accuracies_196],"
",HYPERPARAMETER_TUNING
803,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[loop_k_to_accuracies_196_k_to_accuracies_199 -----end_loop---->loop_k_to_accuracies_182_loop_k_to_accuracies_196_k_to_accuracies_199],"
",HYPERPARAMETER_TUNING
804,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[loop_k_to_accuracies_182_loop_k_to_accuracies_196_k_to_accuracies_199 -----restart_loop---->k_to_accuracies_182],"
",HYPERPARAMETER_TUNING
805,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[loop_k_to_accuracies_182_loop_k_to_accuracies_196_k_to_accuracies_199 -----k to accuracies[k]---->accuracies_210],"208	# plot the raw observations
209	for k in k_choices:
210	    accuracies = k_to_accuracies[k]
211	    plt.scatter([k] * len(accuracies), accuracies)
",MODEL_EVALUATION
806,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[loop_classifier_75_classifier_198 -----restart_loop---->classifier_75],"
",MODEL_TRAIN
807,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[loop_classifier_75_classifier_198 -----reassign---->classifier_227],"225	best_k = 10
226	
227	classifier = KNearestNeighbor()
228	classifier.train(X_train, y_train)
",MODEL_TRAIN
808,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[plt_211 -----end_loop---->loop_plt_87_plt_211],"
",HYPERPARAMETER_TUNING
809,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[accuracies_210 -----accuracies---->plt_211],"209	for k in k_choices:
210	    accuracies = k_to_accuracies[k]
211	    plt.scatter([k] * len(accuracies), accuracies)
212	
",EDA
810,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[loop_plt_87_plt_211 -----restart_loop---->plt_87],"
",EDA
811,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[accuracies_mean_214 -----accuracies mean---->plt_216],"214	accuracies_mean = np.array([np.mean(v) for k,v in sorted(k_to_accuracies.items())])
215	accuracies_std = np.array([np.std(v) for k,v in sorted(k_to_accuracies.items())])
216	plt.errorbar(k_choices, accuracies_mean, yerr=accuracies_std)
217	plt.title('Cross-validation on k')
",MODEL_EVALUATION
812,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_227 -----train---->classifier_228],"226	
227	classifier = KNearestNeighbor()
228	classifier.train(X_train, y_train)
229	y_test_pred = classifier.predict(X_test, k=best_k)
",MODEL_TRAIN
813,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_228 -----predict---->y_test_pred_229],"227	classifier = KNearestNeighbor()
228	classifier.train(X_train, y_train)
229	y_test_pred = classifier.predict(X_test, k=best_k)
230	
",MODEL_EVALUATION
814,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[num_correct_232 -----num correct---->accuracy_233],"231	# Compute and display the accuracy
232	num_correct = np.sum(y_test_pred == y_test)
233	accuracy = float(num_correct) / num_test
234	print('Got %d / %d correct => accuracy: %f' % (num_correct, num_test, accuracy))
",MODEL_EVALUATION
815,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[difference_114_intermediate_1 -----norm---->difference_114],"numpy -----linalg---->difference_114_intermediate_1
k_to_accuracies_199_intermediate_2 -----norm---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----reassign---->k_to_accuracies_199",DATA_TRANSFORM
816,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[difference_126_intermediate_1 -----norm---->difference_126],"numpy -----linalg---->difference_126_intermediate_1
k_to_accuracies_199_intermediate_2 -----norm---->k_to_accuracies_199",MODEL_EVALUATION
817,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[classifier_198_intermediate_1 -----train---->classifier_198],"classifier_75 -----loop---->classifier_198_intermediate_1
k_to_accuracies_199_intermediate_2 -----train---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----end_loop---->k_to_accuracies_199",MODEL_TRAIN
818,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[k_to_accuracies_199_intermediate_1 -----k to accuracies[k]---->k_to_accuracies_199_intermediate_2],"k_to_accuracies_196 -----loop---->k_to_accuracies_199_intermediate_1
k_to_accuracies_199_intermediate_2 -----k to accuracies[k]---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----append---->k_to_accuracies_199",HYPERPARAMETER_TUNING
819,00003b298608c14a1217030a11cd9a0ac28e74b4.execution_graph,[k_to_accuracies_199_intermediate_2 -----append---->k_to_accuracies_199],"k_to_accuracies_199_intermediate_1 -----k to accuracies[k]---->k_to_accuracies_199_intermediate_2
k_to_accuracies_199_intermediate_2 -----append---->k_to_accuracies_199
k_to_accuracies_199_intermediate_2 -----end_loop---->k_to_accuracies_199",MODEL_EVALUATION
820,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[matplotlib.pyplot -----style---->plt_16_intermediate_1],"grouped_df_33_intermediate_1 -----style---->grouped_df_33
grouped_df_33_intermediate_1 -----use---->grouped_df_33",ENVIRONMENT
821,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[pandas -----set option---->pd_18],"16	plt.style.use('ggplot')
17	
18	pd.set_option('display.max_rows', 20)
19	pd.set_option('display.max_columns', 20)
",ENVIRONMENT
822,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[pandas -----set option---->pd_19],"17	
18	pd.set_option('display.max_rows', 20)
19	pd.set_option('display.max_columns', 20)
20	pd.set_option('display.notebook_repr_html', True)
",ENVIRONMENT
823,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[pandas -----set option---->pd_20],"18	pd.set_option('display.max_rows', 20)
19	pd.set_option('display.max_columns', 20)
20	pd.set_option('display.notebook_repr_html', True)
21	
",ENVIRONMENT
824,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[pandas -----read csv---->df_23],"21	
22	# Loading dataset
23	df = pd.read_csv(os.path.join('..', 'datasets', 'foursquare_idmapping.csv'))
24	# df = df.set_index(id)
",DATA_IMPORT_EXTRACTION
825,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[pandas -----isnull---->foursquare_rows_76],"76	foursquare_rows = [
77	    foursquare_attributes(grouped_df.foursquare_id[i]) 
78	    for i in range(0, len(grouped_df)) if not(pd.isnull(grouped_df.foursquare_id[i]))
79	]
",DATA_TRANSFORM
826,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[pandas -----data frame---->foursquare_df_82],"80	# foursquare_rows
81	
82	foursquare_df = pd.DataFrame(foursquare_rows)
83	foursquare_df
",DATA_TRANSFORM
827,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[df_23 -----drop---->df_25],"23	df = pd.read_csv(os.path.join('..', 'datasets', 'foursquare_idmapping.csv'))
24	# df = df.set_index(id)
25	df.drop(['Unnamed: 0'],inplace = True, axis = 1)
26	df.drop(['business_name'],inplace = True, axis = 1)
",DATA_TRANSFORM
828,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[df_25 -----drop---->df_26],"24	# df = df.set_index(id)
25	df.drop(['Unnamed: 0'],inplace = True, axis = 1)
26	df.drop(['business_name'],inplace = True, axis = 1)
27	df.drop(['location'],inplace = True, axis = 1)
",DATA_TRANSFORM
829,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[df_26 -----drop---->df_27],"25	df.drop(['Unnamed: 0'],inplace = True, axis = 1)
26	df.drop(['business_name'],inplace = True, axis = 1)
27	df.drop(['location'],inplace = True, axis = 1)
28	df.head()
",DATA_TRANSFORM
830,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[df_27 -----head---->df_28],"26	df.drop(['business_name'],inplace = True, axis = 1)
27	df.drop(['location'],inplace = True, axis = 1)
28	df.head()
29	
",EDA
831,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[df_28 -----groupby---->grouped_df_33_intermediate_1],"df_27 -----head---->df_28
grouped_df_33_intermediate_1 -----groupby---->grouped_df_33
grouped_df_33_intermediate_1 -----df---->grouped_df_33
grouped_df_33_intermediate_1 -----mean---->grouped_df_33",DATA_TRANSFORM
832,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[df_28 -----df---->r_70],"68	        }
69	    
70	r = foursquare_attributes(df.foursquare_id[0])
71	# print attributes
",DATA_IMPORT_EXTRACTION
833,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[grouped_df_33 -----head---->grouped_df_34],"32	
33	grouped_df = df.groupby(['foursquare_id','foursquare_name'], as_index = False)['inspection_score'].mean()
34	grouped_df.head()
35	
",EDA
834,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[grouped_df_34 -----head---->grouped_df_74],"72	
73	{}.get('a')
74	grouped_df.head()
75	
",EDA
835,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[fs_credentials_38 -----select---->fs_client_id_40],"38	    fs_credentials = yaml.load(f)
39	
40	fs_client_id = fs_credentials['client-id']
41	fs_client_secret = fs_credentials['client-secret']
",DATA_IMPORT_EXTRACTION
836,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[fs_credentials_38 -----select---->fs_client_secret_41],"39	
40	fs_client_id = fs_credentials['client-id']
41	fs_client_secret = fs_credentials['client-secret']
42	
",DATA_IMPORT_EXTRACTION
837,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[yaml -----load---->fs_credentials_38],"36	# Applying foursquare credentials
37	with open('foursquare.yaml', 'r') as f:
38	    fs_credentials = yaml.load(f)
39	
",DATA_IMPORT_EXTRACTION
838,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[foursquare -----foursquare---->client_45],"43	
44	
45	client = foursquare.Foursquare(client_id=fs_client_id, client_secret=fs_client_secret)
46	
",ENVIRONMENT
839,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[grouped_df_74 -----grouped df---->foursquare_rows_76],"75	
76	foursquare_rows = [
77	    foursquare_attributes(grouped_df.foursquare_id[i]) 
78	    for i in range(0, len(grouped_df)) if not(pd.isnull(grouped_df.foursquare_id[i]))
",DATA_TRANSFORM
840,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[grouped_df_74 -----merge---->df2_86],"84	
85	# df.join(foursquare_df, on='foursquare_id', lsuffix='l_', rsuffix='r_')
86	df2 = grouped_df.merge(foursquare_df, on='foursquare_id')
87	df2
",DATA_TRANSFORM
841,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[foursquare_rows_76 -----foursquare rows---->foursquare_df_82],"80	# foursquare_rows
81	
82	foursquare_df = pd.DataFrame(foursquare_rows)
83	foursquare_df
",DATA_TRANSFORM
842,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[foursquare_df_82 -----foursquare df---->foursquare_df_83],"81	
82	foursquare_df = pd.DataFrame(foursquare_rows)
83	foursquare_df
84	
",DATA_TRANSFORM
843,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[foursquare_df_83 -----foursquare df---->df2_86],"84	
85	# df.join(foursquare_df, on='foursquare_id', lsuffix='l_', rsuffix='r_')
86	df2 = grouped_df.merge(foursquare_df, on='foursquare_id')
87	df2
",DATA_TRANSFORM
844,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[df2_86 -----df2---->df2_87],"85	# df.join(foursquare_df, on='foursquare_id', lsuffix='l_', rsuffix='r_')
86	df2 = grouped_df.merge(foursquare_df, on='foursquare_id')
87	df2
88	
",DATA_TRANSFORM
845,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[df2_87 -----count---->df2_90],"88	
89	
90	df2.count(axis=0, level=None, numeric_only=False)
91	
",EDA
846,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[df2_90 -----to csv---->df2_96],"94	# Saving the foursquare id mapping to a csv for use for EDA and modeling
95	
96	df2.to_csv(os.path.join('..','datasets','venue_attributes.csv'))
97	
",DATA_EXPORT
847,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[plt_16_intermediate_1 -----use---->plt_16],"matplotlib.pyplot -----style---->plt_16_intermediate_1
grouped_df_33_intermediate_1 -----use---->grouped_df_33",ENVIRONMENT
848,00003efe93a539c36eba10e01e121c451cd8e324.execution_graph,[grouped_df_33_intermediate_1 -----mean---->grouped_df_33],"df_28 -----groupby---->grouped_df_33_intermediate_1
grouped_df_33_intermediate_1 -----mean---->grouped_df_33
grouped_df_33_intermediate_1 -----head---->grouped_df_33",DATA_TRANSFORM
849,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[sc_4 -----text file---->raw_data_26],"24	    return (Vectors.dense([toFloat(e) for e in item[1:10]]),label)
25	
26	raw_data = sc.textFile(""/home/p5hngk/Downloads/GitHub/SD_701---Data_Mining/breast-cancer-wisconsin.data"")
27	schema = StructType([StructField(""features"", VectorUDT(), True),
",DATA_IMPORT_EXTRACTION
850,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[sc_4 -----sc---->data_29],"27	schema = StructType([StructField(""features"", VectorUDT(), True),
28	                     StructField(""label"",IntegerType(),True)])
29	data = SQLContext(sc).createDataFrame(raw_data.map(doLine),schema)
30	
",DATA_IMPORT_EXTRACTION
851,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[pyspark -----spark context---->sc_4],"2	import random
3	import os
4	sc = pyspark.SparkContext(appName=""SparkML"")
5	
",ENVIRONMENT
852,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[schema_27 -----schema---->data_29],"27	schema = StructType([StructField(""features"", VectorUDT(), True),
28	                     StructField(""label"",IntegerType(),True)])
29	data = SQLContext(sc).createDataFrame(raw_data.map(doLine),schema)
30	
",DATA_TRANSFORM
853,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[pyspark.sql.types -----struct type---->schema_27],"25	
26	raw_data = sc.textFile(""/home/p5hngk/Downloads/GitHub/SD_701---Data_Mining/breast-cancer-wisconsin.data"")
27	schema = StructType([StructField(""features"", VectorUDT(), True),
28	                     StructField(""label"",IntegerType(),True)])
",DATA_TRANSFORM
854,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[data_29 -----show---->data_31],"29	data = SQLContext(sc).createDataFrame(raw_data.map(doLine),schema)
30	
31	data.show(10)
32	
",EDA
855,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[pyspark.sql -----sqlcontext---->data_29_intermediate_1],"bc_model_49_intermediate_1 -----sqlcontext---->bc_model_49
bc_model_49_intermediate_1 -----create data frame---->bc_model_49",ENVIRONMENT
856,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[data_31 -----print schema---->data_33],"31	data.show(10)
32	
33	data.printSchema()
34	
",EDA
857,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[data_33 -----groupby---->data_35_intermediate_1],"data_31 -----print schema---->data_33
bc_model_49_intermediate_1 -----groupby---->bc_model_49
bc_model_49_intermediate_1 -----count---->bc_model_49",EDA
858,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[data_35 -----random split---->df_split_37],"35	data.groupby(data.label).count().show()
36	
37	df_split = data.randomSplit([0.9 , 0.1])
38	
",MODEL_TRAIN
859,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[df_split_37 -----select---->data_train_39],"37	df_split = data.randomSplit([0.9 , 0.1])
38	
39	data_train = df_split[0]
40	data_test = df_split[1]
",MODEL_TRAIN
860,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[df_split_37 -----select---->data_test_40],"38	
39	data_train = df_split[0]
40	data_test = df_split[1]
41	
",MODEL_TRAIN
861,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[data_train_39 -----count---->data_train_42],"40	data_test = df_split[1]
41	
42	data_train.count()
43	
",MODEL_TRAIN
862,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[data_test_40 -----count---->data_test_44],"42	data_train.count()
43	
44	data_test.count()
45	
",EDA
863,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[data_train_42 -----data train---->bc_model_49],"47	
48	# Train a DecisionTree model.
49	bc_model = DecisionTreeClassifier(labelCol=""label"", featuresCol=""features"").fit(data_train)
50	
",MODEL_TRAIN
864,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[data_test_44 -----data test---->predictions_51],"49	bc_model = DecisionTreeClassifier(labelCol=""label"", featuresCol=""features"").fit(data_train)
50	
51	predictions = bc_model.transform(data_test)
52	predictions
",MODEL_EVALUATION
865,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[bc_model_49 -----transform---->predictions_51],"49	bc_model = DecisionTreeClassifier(labelCol=""label"", featuresCol=""features"").fit(data_train)
50	
51	predictions = bc_model.transform(data_test)
52	predictions
",MODEL_EVALUATION
866,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[pyspark.ml.classification -----decision tree classifier---->bc_model_49_intermediate_1],"bc_model_49_intermediate_1 -----decision tree classifier---->bc_model_49
bc_model_49_intermediate_1 -----fit---->bc_model_49",MODEL_TRAIN
867,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[predictions_51 -----predictions---->predictions_52],"50	
51	predictions = bc_model.transform(data_test)
52	predictions
53	
",MODEL_EVALUATION
868,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[predictions_52 -----predictions---->result_57],"55	
56	evaluator = BinaryClassificationEvaluator(labelCol=""label"", metricName='areaUnderROC')
57	result = evaluator.evaluate(predictions)
58	print(""The area under ROC of our classifier is : {}"".format(result))
",MODEL_EVALUATION
869,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[predictions_52 -----predictions---->accuracy_63],"61	
62	evaluator2 = MulticlassClassificationEvaluator(labelCol=""label"", predictionCol=""prediction"", metricName=""accuracy"")
63	accuracy = evaluator2.evaluate(predictions)
64	print(""Test error = %g "" % (1.0 - accuracy))
",MODEL_EVALUATION
870,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[evaluator_56 -----evaluate---->result_57],"55	
56	evaluator = BinaryClassificationEvaluator(labelCol=""label"", metricName='areaUnderROC')
57	result = evaluator.evaluate(predictions)
58	print(""The area under ROC of our classifier is : {}"".format(result))
",MODEL_EVALUATION
871,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[pyspark.ml.evaluation -----binary classification evaluator---->evaluator_56],"54	from pyspark.ml.evaluation import BinaryClassificationEvaluator
55	
56	evaluator = BinaryClassificationEvaluator(labelCol=""label"", metricName='areaUnderROC')
57	result = evaluator.evaluate(predictions)
",MODEL_EVALUATION
872,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[pyspark.ml.evaluation -----multiclass classification evaluator---->evaluator2_62],"60	from pyspark.ml.evaluation import MulticlassClassificationEvaluator
61	
62	evaluator2 = MulticlassClassificationEvaluator(labelCol=""label"", predictionCol=""prediction"", metricName=""accuracy"")
63	accuracy = evaluator2.evaluate(predictions)
",MODEL_EVALUATION
873,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[evaluator2_62 -----evaluate---->accuracy_63],"61	
62	evaluator2 = MulticlassClassificationEvaluator(labelCol=""label"", predictionCol=""prediction"", metricName=""accuracy"")
63	accuracy = evaluator2.evaluate(predictions)
64	print(""Test error = %g "" % (1.0 - accuracy))
",MODEL_EVALUATION
874,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[data_29_intermediate_1 -----create data frame---->data_29],"pyspark.sql -----sqlcontext---->data_29_intermediate_1
bc_model_49_intermediate_1 -----create data frame---->bc_model_49
bc_model_49_intermediate_1 -----show---->bc_model_49",DATA_TRANSFORM
875,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[data_35_intermediate_1 -----count---->data_35_intermediate_2],"data_33 -----groupby---->data_35_intermediate_1
bc_model_49_intermediate_1 -----count---->bc_model_49
bc_model_49_intermediate_1 -----show---->bc_model_49",EDA
876,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[data_35_intermediate_2 -----show---->data_35],"data_35_intermediate_1 -----count---->data_35_intermediate_2
bc_model_49_intermediate_1 -----show---->bc_model_49
bc_model_49_intermediate_1 -----random split---->bc_model_49",EDA
877,00004882b20034dc335bea90a6d5665e281e9160.execution_graph,[bc_model_49_intermediate_1 -----fit---->bc_model_49],"pyspark.ml.classification -----decision tree classifier---->bc_model_49_intermediate_1
bc_model_49_intermediate_1 -----fit---->bc_model_49
bc_model_49_intermediate_1 -----transform---->bc_model_49",MODEL_TRAIN
878,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_3 -----a---->a_5],"3	a = np.array([[1,2,3,4],[4,5,6,7]])
4	
5	a
6	
",NOT_INTERESTING
879,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----array---->a_3],"1	import numpy as np
2	
3	a = np.array([[1,2,3,4],[4,5,6,7]])
4	
",NOT_INTERESTING
880,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----ones---->a_16],"14	cols = 5
15	
16	a = np.ones( (rows,cols) , dtype='int8' )
17	a.dtype     # data type of the array passing dtype is optional
",NOT_INTERESTING
881,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----zeros---->a_19],"17	a.dtype     # data type of the array passing dtype is optional
18	
19	a = np.zeros( (rows,cols) ,dtype='complex' )
20	a.dtype
",DATA_TRANSFORM
882,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----arange---->a_22],"20	a.dtype
21	
22	a = np.arange(10,20,2,dtype='int64')    # start , end ,stepsize , dtype
23	a
",DATA_TRANSFORM
883,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----linspace---->a_25],"23	a
24	
25	a = np.linspace( 0.01 , 0.02  , 10 )  # start , end  , number of numbers 
26	a  
",DATA_TRANSFORM
884,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----linspace---->b_28],"26	a  
27	
28	b = np.linspace( 1 , 2 , 5 , dtype='float128' )
29	b
",DATA_TRANSFORM
885,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----ones---->a_31],"29	b
30	
31	a = np.ones((3,4))
32	print( 'Array a = \n' , a)
",DATA_TRANSFORM
886,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----arange---->a_43],"41	a.reshape((4,3))
42	
43	a = np.arange( 1 , 13 )  
44	a = a.reshape((3,4))
",DATA_TRANSFORM
887,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----arange---->a_55],"53	
54	
55	a = np.arange(1,21)
56	a = a.reshape((4,5))
",DATA_TRANSFORM
888,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----array---->a_66],"64	print('Row Wise sum = ' + str(rowsum))
65	
66	a = np.array(
67	    [
",DATA_TRANSFORM
889,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----arange---->a_80],"78	
79	
80	a = np.arange(1,21)
81	a = a.reshape(5,4)
",DATA_TRANSFORM
890,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[numpy -----ones---->b_82],"80	a = np.arange(1,21)
81	a = a.reshape(5,4)
82	b = np.ones((5,4))
83	
",DATA_TRANSFORM
891,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_5 -----ndim---->a_7],"5	a
6	
7	a.ndim
8	
",EDA
892,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_7 -----reassign---->a_16],"14	cols = 5
15	
16	a = np.ones( (rows,cols) , dtype='int8' )
17	a.dtype     # data type of the array passing dtype is optional
",DATA_TRANSFORM
893,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_16 -----dtype---->a_17],"15	
16	a = np.ones( (rows,cols) , dtype='int8' )
17	a.dtype     # data type of the array passing dtype is optional
18	
",EDA
894,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_17 -----reassign---->a_19],"17	a.dtype     # data type of the array passing dtype is optional
18	
19	a = np.zeros( (rows,cols) ,dtype='complex' )
20	a.dtype
",DATA_TRANSFORM
895,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_19 -----dtype---->a_20],"18	
19	a = np.zeros( (rows,cols) ,dtype='complex' )
20	a.dtype
21	
",NOT_INTERESTING
896,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_20 -----reassign---->a_22],"20	a.dtype
21	
22	a = np.arange(10,20,2,dtype='int64')    # start , end ,stepsize , dtype
23	a
",DATA_TRANSFORM
897,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_22 -----a---->a_23],"21	
22	a = np.arange(10,20,2,dtype='int64')    # start , end ,stepsize , dtype
23	a
24	
",NOT_INTERESTING
898,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_23 -----reassign---->a_25],"23	a
24	
25	a = np.linspace( 0.01 , 0.02  , 10 )  # start , end  , number of numbers 
26	a  
",NOT_INTERESTING
899,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_25 -----a---->a_26],"24	
25	a = np.linspace( 0.01 , 0.02  , 10 )  # start , end  , number of numbers 
26	a  
27	
",DATA_TRANSFORM
900,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_26 -----reassign---->a_31],"29	b
30	
31	a = np.ones((3,4))
32	print( 'Array a = \n' , a)
",DATA_TRANSFORM
901,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[b_28 -----b---->b_29],"27	
28	b = np.linspace( 1 , 2 , 5 , dtype='float128' )
29	b
30	
",DATA_TRANSFORM
902,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[b_29 -----reassign---->b_35],"33	
34	# Reshape the array
35	b = a.reshape((6,2))
36	print('Array b = \n',b)
",DATA_TRANSFORM
903,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_31 -----reshape---->b_35],"33	
34	# Reshape the array
35	b = a.reshape((6,2))
36	print('Array b = \n',b)
",DATA_TRANSFORM
904,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_31 -----ravel---->c_38],"36	print('Array b = \n',b)
37	# Flatten the array
38	c = a.ravel()
39	print('Array c = \n',c)
",DATA_TRANSFORM
905,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_31 -----reshape---->a_41],"39	print('Array c = \n',c)
40	
41	a.reshape((4,3))
42	
",DATA_TRANSFORM
906,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[b_35 -----reassign---->b_82],"80	a = np.arange(1,21)
81	a = a.reshape(5,4)
82	b = np.ones((5,4))
83	
",DATA_TRANSFORM
907,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[c_38 -----reassign---->c_84],"82	b = np.ones((5,4))
83	
84	c = a + b
85	c
",DATA_TRANSFORM
908,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_41 -----reassign---->a_43],"41	a.reshape((4,3))
42	
43	a = np.arange( 1 , 13 )  
44	a = a.reshape((3,4))
",DATA_TRANSFORM
909,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_43 -----reshape---->a_44],"42	
43	a = np.arange( 1 , 13 )  
44	a = a.reshape((3,4))
45	print('Array A = \n',a)
",DATA_TRANSFORM
910,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_44 -----reassign---->a_55],"53	
54	
55	a = np.arange(1,21)
56	a = a.reshape((4,5))
",DATA_TRANSFORM
911,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_55 -----reshape---->a_56],"54	
55	a = np.arange(1,21)
56	a = a.reshape((4,5))
57	
",DATA_TRANSFORM
912,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_56 -----sum---->colsum_60],"58	print(a)
59	
60	colsum = a.sum(axis=0)
61	print('\nColumn Wise sum = ' + str(colsum))
",DATA_TRANSFORM
913,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_56 -----sum---->rowsum_63],"61	print('\nColumn Wise sum = ' + str(colsum))
62	
63	rowsum = a.sum(axis=1)
64	print('Row Wise sum = ' + str(rowsum))
",DATA_TRANSFORM
914,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_56 -----reassign---->a_66],"64	print('Row Wise sum = ' + str(rowsum))
65	
66	a = np.array(
67	    [
",DATA_TRANSFORM
915,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_66 -----sum---->a_75],"73	    ]
74	)
75	a.sum(axis=0)
76	a.sum(axis=1)
",DATA_TRANSFORM
916,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_75 -----sum---->a_76],"74	)
75	a.sum(axis=0)
76	a.sum(axis=1)
77	a.sum(axis=2)
",DATA_TRANSFORM
917,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_76 -----sum---->a_77],"75	a.sum(axis=0)
76	a.sum(axis=1)
77	a.sum(axis=2)
78	
",DATA_TRANSFORM
918,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_77 -----reassign---->a_80],"78	
79	
80	a = np.arange(1,21)
81	a = a.reshape(5,4)
",DATA_TRANSFORM
919,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_80 -----reshape---->a_81],"79	
80	a = np.arange(1,21)
81	a = a.reshape(5,4)
82	b = np.ones((5,4))
",DATA_TRANSFORM
920,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_81 -----add---->c_84],"82	b = np.ones((5,4))
83	
84	c = a + b
85	c
",DATA_TRANSFORM
921,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_81 -----mult---->d_87],"85	c
86	
87	d = a * b
88	d
",DATA_TRANSFORM
922,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_81 -----div---->e_90],"88	d
89	
90	e = a / b
91	e
",DATA_TRANSFORM
923,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[a_81 -----dot---->matrix_product_93],"91	e
92	
93	matrix_product = a.dot(b.reshape(4,5))
94	matrix_product
",DATA_TRANSFORM
924,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[b_82 -----add---->c_84],"82	b = np.ones((5,4))
83	
84	c = a + b
85	c
",DATA_TRANSFORM
925,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[b_82 -----mult---->d_87],"85	c
86	
87	d = a * b
88	d
",DATA_TRANSFORM
926,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[b_82 -----div---->e_90],"88	d
89	
90	e = a / b
91	e
",DATA_TRANSFORM
927,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[c_84 -----c---->c_85],"83	
84	c = a + b
85	c
86	
",DATA_TRANSFORM
928,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[d_87 -----d---->d_88],"86	
87	d = a * b
88	d
89	
",DATA_TRANSFORM
929,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[e_90 -----e---->e_91],"89	
90	e = a / b
91	e
92	
",DATA_TRANSFORM
930,000055ecc95a666e9e9b316cfa45030e8f7afb26.execution_graph,[matrix_product_93 -----matrix product---->matrix_product_94],"92	
93	matrix_product = a.dot(b.reshape(4,5))
94	matrix_product
",MODEL_TRAIN
931,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_6 -----head---->ad_data_8],"6	ad_data = pd.read_csv('advertising.csv')
7	
8	ad_data.head()
9	
",EDA
932,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[pandas -----read csv---->ad_data_6],"4	import matplotlib.pyplot as plt
5	
6	ad_data = pd.read_csv('advertising.csv')
7	
",DATA_IMPORT_EXTRACTION
933,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_8 -----info---->ad_data_10],"8	ad_data.head()
9	
10	ad_data.info()
11	
",EDA
934,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_10 -----describe---->ad_data_12],"10	ad_data.info()
11	
12	ad_data.describe()
13	
",EDA
935,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_12 -----select---->ad_data_14_intermediate_1],"ad_data_10 -----describe---->ad_data_12
ad_data_17_intermediate_1 -----select---->ad_data_17
ad_data_17_intermediate_1 -----plot---->ad_data_17",EDA
936,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_14 -----select---->ad_data_17_intermediate_1],"ad_data_14_intermediate_2 -----hist---->ad_data_14
ad_data_17_intermediate_1 -----select---->ad_data_17
ad_data_17_intermediate_1 -----hist---->ad_data_17",EDA
937,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[seaborn -----set style---->sns_16],"14	ad_data['Age'].plot.hist(bins = 30)
15	
16	sns.set_style('whitegrid')
17	ad_data['Age'].hist(bins=30)
",ENVIRONMENT
938,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[seaborn -----distplot---->sns_20],"18	plt.xlabel('Age')
19	
20	sns.distplot(ad_data['Age'], kde = False, bins = 30)
21	
",EDA
939,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[seaborn -----jointplot---->sns_22],"20	sns.distplot(ad_data['Age'], kde = False, bins = 30)
21	
22	sns.jointplot(x = 'Age', y = 'Area Income', data = ad_data)
23	
",EDA
940,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[seaborn -----jointplot---->sns_26],"24	ad_data.head()
25	
26	sns.jointplot(x = 'Age', y = 'Daily Time Spent on Site', data = ad_data, color = 'red', kind='kde')
27	
",EDA
941,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[seaborn -----jointplot---->sns_28],"26	sns.jointplot(x = 'Age', y = 'Daily Time Spent on Site', data = ad_data, color = 'red', kind='kde')
27	
28	sns.jointplot(x = 'Daily Time Spent on Site', y = 'Daily Internet Usage', data = ad_data, color = 'green')
29	
",EDA
942,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[seaborn -----pairplot---->sns_32],"30	ad_data.head()
31	
32	sns.pairplot(ad_data,hue='Clicked on Ad',palette = 'bwr')
33	
",EDA
943,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_17 -----ad data---->sns_20],"18	plt.xlabel('Age')
19	
20	sns.distplot(ad_data['Age'], kde = False, bins = 30)
21	
",EDA
944,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_17 -----head---->ad_data_24],"22	sns.jointplot(x = 'Age', y = 'Area Income', data = ad_data)
23	
24	ad_data.head()
25	
",EDA
945,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[matplotlib.pyplot -----xlabel---->plt_18],"16	sns.set_style('whitegrid')
17	ad_data['Age'].hist(bins=30)
18	plt.xlabel('Age')
19	
",EDA
946,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_24 -----head---->ad_data_30],"28	sns.jointplot(x = 'Daily Time Spent on Site', y = 'Daily Internet Usage', data = ad_data, color = 'green')
29	
30	ad_data.head()
31	
",EDA
947,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_30 -----ad data---->sns_32],"30	ad_data.head()
31	
32	sns.pairplot(ad_data,hue='Clicked on Ad',palette = 'bwr')
33	
",EDA
948,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_30 -----head---->ad_data_34],"32	sns.pairplot(ad_data,hue='Clicked on Ad',palette = 'bwr')
33	
34	ad_data.head()
35	
",EDA
949,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_34 -----columns---->ad_data_36],"34	ad_data.head()
35	
36	ad_data.columns
37	
",EDA
950,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_36 -----select---->X_38],"36	ad_data.columns
37	
38	X = ad_data[['Daily Time Spent on Site', 'Age',
39	       'Daily Internet Usage', 'Male', 'Area Income']]
",DATA_TRANSFORM
951,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_36 -----select---->y_41],"39	       'Daily Internet Usage', 'Male', 'Area Income']]
40	
41	y = ad_data['Clicked on Ad']
42	
",DATA_TRANSFORM
952,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[X_38 -----x---->X_train_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_TRAIN
953,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[X_38 -----x---->X_test_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_EVALUATION
954,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[X_38 -----x---->y_train_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_TRAIN
955,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[X_38 -----x---->y_test_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_EVALUATION
956,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[y_41 -----y---->X_train_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_TRAIN
957,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[y_41 -----y---->X_test_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_TRAIN
958,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[y_41 -----y---->y_train_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_TRAIN
959,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[y_41 -----y---->y_test_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_EVALUATION
960,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[X_train_45 -----x train---->logmodel_50],"48	
49	logmodel = LogisticRegression()
50	logmodel.fit(X_train, y_train)
51	
",MODEL_TRAIN
961,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[sklearn.model_selection -----train test split---->X_train_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_TRAIN
962,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[sklearn.model_selection -----train test split---->X_test_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_TRAIN
963,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[sklearn.model_selection -----train test split---->y_train_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_TRAIN
964,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[sklearn.model_selection -----train test split---->y_test_45],"43	from sklearn.model_selection import train_test_split
44	
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 101)
46	
",MODEL_TRAIN
965,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[X_test_45 -----x test---->Predictions_52],"50	logmodel.fit(X_train, y_train)
51	
52	Predictions = logmodel.predict(X_test)
53	
",MODEL_EVALUATION
966,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[y_train_45 -----y train---->logmodel_50],"48	
49	logmodel = LogisticRegression()
50	logmodel.fit(X_train, y_train)
51	
",MODEL_TRAIN
967,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[logmodel_49 -----fit---->logmodel_50],"48	
49	logmodel = LogisticRegression()
50	logmodel.fit(X_train, y_train)
51	
",MODEL_TRAIN
968,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[sklearn.linear_model -----logistic regression---->logmodel_49],"47	from sklearn.linear_model import LogisticRegression
48	
49	logmodel = LogisticRegression()
50	logmodel.fit(X_train, y_train)
",MODEL_TRAIN
969,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[logmodel_50 -----predict---->Predictions_52],"50	logmodel.fit(X_train, y_train)
51	
52	Predictions = logmodel.predict(X_test)
53	
",MODEL_EVALUATION
970,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_14_intermediate_1 -----plot---->ad_data_14_intermediate_2],"ad_data_12 -----select---->ad_data_14_intermediate_1
ad_data_17_intermediate_1 -----plot---->ad_data_17
ad_data_17_intermediate_1 -----hist---->ad_data_17",EDA
971,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_14_intermediate_2 -----hist---->ad_data_14],"ad_data_14_intermediate_1 -----plot---->ad_data_14_intermediate_2
ad_data_17_intermediate_1 -----hist---->ad_data_17
ad_data_17_intermediate_1 -----select---->ad_data_17",EDA
972,0000576ebd2490aeefefbf300c2305fc0841827c.execution_graph,[ad_data_17_intermediate_1 -----hist---->ad_data_17],"ad_data_14 -----select---->ad_data_17_intermediate_1
ad_data_17_intermediate_1 -----hist---->ad_data_17
ad_data_17_intermediate_1 -----ad data---->ad_data_17
ad_data_17_intermediate_1 -----head---->ad_data_17",EDA
973,0000606218d2e82dca68223963de262bb5088c66.execution_graph,[IPython.display -----html---->HTML_4],"2	
3	from IPython.display import HTML
4	HTML(""""""
5	<script>
",NOT_INTERESTING
974,0000606218d2e82dca68223963de262bb5088c66.execution_graph,[IPython.display -----image---->Image_14],"12	
13	from IPython.display import Image
14	Image(""http://ipython.org/_static/IPy_header.png"")
15	
",NOT_INTERESTING
975,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[seaborn -----set---->sns_13],"11	
12	#make wider graphs
13	sns.set(rc={'figure.figsize':(12,5)});
14	plt.figure(figsize=(12,5));
",ENVIRONMENT
976,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[seaborn -----set---->sns_42],"40	cols = ['ip', 'app', 'device', 'os', 'channel']
41	uniques = [len(train[col].unique()) for col in cols]
42	sns.set(font_scale=1.2)
43	ax = sns.barplot(cols, uniques, log=True)
",ENVIRONMENT
977,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[seaborn -----barplot---->ax_43],"41	uniques = [len(train[col].unique()) for col in cols]
42	sns.set(font_scale=1.2)
43	ax = sns.barplot(cols, uniques, log=True)
44	ax.set(xlabel='Feature', ylabel='log(unique count)', title='Number of unique values per feature (from 10,000,000 samples)')
",EDA
978,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[seaborn -----barplot---->ax_64],"62	#sns.set(font_scale=1.2)
63	mean = (train.is_attributed.values == 1).mean()
64	ax = sns.barplot(['App Downloaded (1)', 'Not Downloaded (0)'], [mean, 1-mean])
65	ax.set(ylabel='Proportion', title='App Downloaded vs Not Downloaded')
",EDA
979,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[seaborn -----barplot---->sns_235],"233	plt.savefig(""pyplot_multiple_y-axis.png"", bbox_inches='tight')
234	
235	sns.barplot('click_hour', 'is_attributed', data=train_smp)
236	plt.title('HOURLY CONVERSION RATIO');
",EDA
980,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----figure---->plt_14],"12	#make wider graphs
13	sns.set(rc={'figure.figsize':(12,5)});
14	plt.figure(figsize=(12,5));
15	
",EDA
981,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----figure---->plt_39],"37	train.describe()
38	
39	plt.figure(figsize=(10, 6))
40	cols = ['ip', 'app', 'device', 'os', 'channel']
",EDA
982,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----figure---->plt_61],"59	test.describe()
60	
61	plt.figure(figsize=(6,6))
62	#sns.set(font_scale=1.2)
",EDA
983,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----title---->plt_99],"97	
98	ax = merge[:300].plot(secondary_y='prop_downloaded')
99	plt.title('Conversion Rates over Counts of 300 Most Popular IPs')
100	ax.set(ylabel='Count of clicks')
",EDA
984,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----ylabel---->plt_101],"99	plt.title('Conversion Rates over Counts of 300 Most Popular IPs')
100	ax.set(ylabel='Count of clicks')
101	plt.ylabel('Proportion Downloaded')
102	plt.show()
",EDA
985,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----show---->plt_102],"100	ax.set(ylabel='Count of clicks')
101	plt.ylabel('Proportion Downloaded')
102	plt.show()
103	
",EDA
986,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----title---->plt_114],"112	
113	ax = merge[:100].plot(secondary_y='prop_downloaded')
114	plt.title('Conversion Rates over Counts of 100 Most Popular Apps')
115	ax.set(ylabel='Count of clicks')
",MODEL_EVALUATION
987,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----ylabel---->plt_116],"114	plt.title('Conversion Rates over Counts of 100 Most Popular Apps')
115	ax.set(ylabel='Count of clicks')
116	plt.ylabel('Proportion Downloaded')
117	plt.show()
",EDA
988,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----show---->plt_117],"115	ax.set(ylabel='Count of clicks')
116	plt.ylabel('Proportion Downloaded')
117	plt.show()
118	
",EDA
989,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----title---->plt_128],"126	
127	ax = merge[:100].plot(secondary_y='prop_downloaded')
128	plt.title('Conversion Rates over Counts of 100 Most Popular Operating Systems')
129	ax.set(ylabel='Count of clicks')
",EDA
990,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----ylabel---->plt_130],"128	plt.title('Conversion Rates over Counts of 100 Most Popular Operating Systems')
129	ax.set(ylabel='Count of clicks')
130	plt.ylabel('Proportion Downloaded')
131	plt.show()
",EDA
991,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----show---->plt_131],"129	ax.set(ylabel='Count of clicks')
130	plt.ylabel('Proportion Downloaded')
131	plt.show()
132	
",EDA
992,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----title---->plt_150],"148	
149	ax = merge[:100].plot(secondary_y='prop_downloaded')
150	plt.title('Conversion Rates over Counts of 100 Most Popular Apps')
151	ax.set(ylabel='Count of clicks')
",EDA
993,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----ylabel---->plt_152],"150	plt.title('Conversion Rates over Counts of 100 Most Popular Apps')
151	ax.set(ylabel='Count of clicks')
152	plt.ylabel('Proportion Downloaded')
153	plt.show()
",EDA
994,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----show---->plt_153],"151	ax.set(ylabel='Count of clicks')
152	plt.ylabel('Proportion Downloaded')
153	plt.show()
154	
",EDA
995,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----title---->plt_171],"169	#check for hourly patterns
170	train_smp[['click_rnd','is_attributed']].groupby(['click_rnd'], as_index=True).count().plot()
171	plt.title('HOURLY CLICK FREQUENCY');
172	plt.ylabel('Number of Clicks');
",EDA
996,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----ylabel---->plt_172],"170	train_smp[['click_rnd','is_attributed']].groupby(['click_rnd'], as_index=True).count().plot()
171	plt.title('HOURLY CLICK FREQUENCY');
172	plt.ylabel('Number of Clicks');
173	
",EDA
997,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----title---->plt_175],"173	
174	train_smp[['click_rnd','is_attributed']].groupby(['click_rnd'], as_index=True).mean().plot()
175	plt.title('HOURLY CONVERSION RATIO');
176	plt.ylabel('Converted Ratio');
",EDA
998,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----ylabel---->plt_176],"174	train_smp[['click_rnd','is_attributed']].groupby(['click_rnd'], as_index=True).mean().plot()
175	plt.title('HOURLY CONVERSION RATIO');
176	plt.ylabel('Converted Ratio');
177	
",EDA
999,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----title---->plt_184],"182	
183	train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=True).count().plot(kind='bar', color='#a675a1')
184	plt.title('HOURLY CLICK FREQUENCY Barplot');
185	plt.ylabel('Number of Clicks');
",EDA
1000,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----ylabel---->plt_185],"183	train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=True).count().plot(kind='bar', color='#a675a1')
184	plt.title('HOURLY CLICK FREQUENCY Barplot');
185	plt.ylabel('Number of Clicks');
186	
",EDA
1001,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----title---->plt_188],"186	
187	train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=True).count().plot(color='#a675a1')
188	plt.title('HOURLY CLICK FREQUENCY Lineplot');
189	plt.ylabel('Number of Clicks');
",EDA
1002,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----ylabel---->plt_189],"187	train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=True).count().plot(color='#a675a1')
188	plt.title('HOURLY CLICK FREQUENCY Lineplot');
189	plt.ylabel('Number of Clicks');
190	
",EDA
1003,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----title---->plt_192],"190	
191	train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=True).mean().plot(kind='bar', color='#75a1a6')
192	plt.title('HOURLY CONVERSION RATIO Barplot');
193	plt.ylabel('Converted Ratio');
",EDA
1004,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----ylabel---->plt_193],"191	train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=True).mean().plot(kind='bar', color='#75a1a6')
192	plt.title('HOURLY CONVERSION RATIO Barplot');
193	plt.ylabel('Converted Ratio');
194	
",EDA
1005,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----title---->plt_196],"194	
195	train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=True).mean().plot( color='#75a1a6')
196	plt.title('HOURLY CONVERSION RATIO Lineplot');
197	plt.ylabel('Converted Ratio');
",EDA
1006,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----ylabel---->plt_197],"195	train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=True).mean().plot( color='#75a1a6')
196	plt.title('HOURLY CONVERSION RATIO Lineplot');
197	plt.ylabel('Converted Ratio');
198	
",EDA
1007,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----figure---->fig_210],"208	
209	
210	fig = plt.figure()
211	host = fig.add_subplot(111)
",EDA
1008,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----savefig---->plt_233],"231	par1.yaxis.label.set_color(p2.get_color())
232	
233	plt.savefig(""pyplot_multiple_y-axis.png"", bbox_inches='tight')
234	
",EDA
1009,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----title---->plt_236],"234	
235	sns.barplot('click_hour', 'is_attributed', data=train_smp)
236	plt.title('HOURLY CONVERSION RATIO');
237	plt.ylabel('Converted Ratio');
",EDA
1010,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[matplotlib.pyplot -----ylabel---->plt_237],"235	sns.barplot('click_hour', 'is_attributed', data=train_smp)
236	plt.title('HOURLY CONVERSION RATIO');
237	plt.ylabel('Converted Ratio');
238	
",EDA
1011,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_17 -----head---->train_20],"18	test = pd.read_csv('../input/test.csv')
19	
20	train.head()
21	
",EDA
1012,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[pandas -----read csv---->train_17],"15	
16	#import first 10,000,000 rows of train and all test data
17	train = pd.read_csv('../input/train.csv', nrows=10000000)
18	test = pd.read_csv('../input/test.csv')
",DATA_IMPORT_EXTRACTION
1013,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[pandas -----read csv---->test_18],"16	#import first 10,000,000 rows of train and all test data
17	train = pd.read_csv('../input/train.csv', nrows=10000000)
18	test = pd.read_csv('../input/test.csv')
19	
",DATA_IMPORT_EXTRACTION
1014,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[pandas -----to datetime---->train_30],"28	
29	#set click_time and attributed_time as timeseries
30	train['click_time'] = pd.to_datetime(train['click_time'])
31	train['attributed_time'] = pd.to_datetime(train['attributed_time'])
",DATA_TRANSFORM
1015,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[pandas -----to datetime---->train_31],"29	#set click_time and attributed_time as timeseries
30	train['click_time'] = pd.to_datetime(train['click_time'])
31	train['attributed_time'] = pd.to_datetime(train['attributed_time'])
32	test['click_time'] = pd.to_datetime(test['click_time'])
",DATA_TRANSFORM
1016,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[pandas -----to datetime---->test_32],"30	train['click_time'] = pd.to_datetime(train['click_time'])
31	train['attributed_time'] = pd.to_datetime(train['attributed_time'])
32	test['click_time'] = pd.to_datetime(test['click_time'])
33	
",DATA_TRANSFORM
1017,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[pandas -----read csv---->train_smp_158],"156	print(merge[:20])
157	
158	train_smp = pd.read_csv('../input/train_sample.csv')
159	
",DATA_IMPORT_EXTRACTION
1018,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[pandas -----to datetime---->train_smp_163],"161	
162	#convert click_time and attributed_time to time series
163	train_smp['click_time'] = pd.to_datetime(train_smp['click_time'])
164	train_smp['attributed_time'] = pd.to_datetime(train_smp['attributed_time'])
",DATA_TRANSFORM
1019,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[pandas -----to datetime---->train_smp_164],"162	#convert click_time and attributed_time to time series
163	train_smp['click_time'] = pd.to_datetime(train_smp['click_time'])
164	train_smp['attributed_time'] = pd.to_datetime(train_smp['attributed_time'])
165	
",DATA_TRANSFORM
1020,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[test_18 -----head---->test_22],"20	train.head()
21	
22	test.head()
23	
",EDA
1021,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_20 -----loop---->train_26_intermediate_1],"train_17 -----head---->train_20
loop_train_20_train_26 -----restart_loop---->train_20
train_247_intermediate_1 -----loop---->train_247
train_247_intermediate_1 -----train[v]---->train_247",EDA
1022,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[test_22 -----loop---->test_27_intermediate_1],"test_18 -----head---->test_22
loop_test_22_test_27 -----restart_loop---->test_22
train_247_intermediate_1 -----loop---->train_247
train_247_intermediate_1 -----test[v]---->train_247",EDA
1023,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_26 -----end_loop---->loop_train_20_train_26],"
",DATA_TRANSFORM
1024,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[test_27 -----end_loop---->loop_test_22_test_27],"
",EDA
1025,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[loop_train_20_train_26 -----restart_loop---->train_20],"
",EDA
1026,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[loop_train_20_train_26 -----train---->train_30],"28	
29	#set click_time and attributed_time as timeseries
30	train['click_time'] = pd.to_datetime(train['click_time'])
31	train['attributed_time'] = pd.to_datetime(train['attributed_time'])
",DATA_TRANSFORM
1027,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[loop_test_22_test_27 -----restart_loop---->test_22],"
",EDA
1028,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[loop_test_22_test_27 -----test---->test_32],"30	train['click_time'] = pd.to_datetime(train['click_time'])
31	train['attributed_time'] = pd.to_datetime(train['attributed_time'])
32	test['click_time'] = pd.to_datetime(test['click_time'])
33	
",EDA
1029,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_30 -----train---->train_31],"29	#set click_time and attributed_time as timeseries
30	train['click_time'] = pd.to_datetime(train['click_time'])
31	train['attributed_time'] = pd.to_datetime(train['attributed_time'])
32	test['click_time'] = pd.to_datetime(test['click_time'])
",DATA_TRANSFORM
1030,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_31 -----select---->train_35_intermediate_1],"pandas -----to datetime---->train_31
train_30 -----train---->train_31
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----astype---->train_247",DATA_TRANSFORM
1031,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[test_32 -----select---->test_58_intermediate_1],"pandas -----to datetime---->test_32
loop_test_22_test_27 -----test---->test_32
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----astype---->train_247",DATA_TRANSFORM
1032,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_35 -----describe---->train_37],"35	train['is_attributed']=train['is_attributed'].astype('category')
36	
37	train.describe()
38	
",EDA
1033,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_37 -----select---->train_55_intermediate_1],"train_35 -----describe---->train_37
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----equal---->train_247",EDA
1034,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[cols_40 -----cols---->uniques_41],"39	plt.figure(figsize=(10, 6))
40	cols = ['ip', 'app', 'device', 'os', 'channel']
41	uniques = [len(train[col].unique()) for col in cols]
42	sns.set(font_scale=1.2)
",EDA
1035,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[cols_40 -----cols---->ax_43],"41	uniques = [len(train[col].unique()) for col in cols]
42	sns.set(font_scale=1.2)
43	ax = sns.barplot(cols, uniques, log=True)
44	ax.set(xlabel='Feature', ylabel='log(unique count)', title='Number of unique values per feature (from 10,000,000 samples)')
",EDA
1036,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[uniques_41 -----uniques---->ax_43],"41	uniques = [len(train[col].unique()) for col in cols]
42	sns.set(font_scale=1.2)
43	ax = sns.barplot(cols, uniques, log=True)
44	ax.set(xlabel='Feature', ylabel='log(unique count)', title='Number of unique values per feature (from 10,000,000 samples)')
",EDA
1037,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_43 -----set---->ax_44],"42	sns.set(font_scale=1.2)
43	ax = sns.barplot(cols, uniques, log=True)
44	ax.set(xlabel='Feature', ylabel='log(unique count)', title='Number of unique values per feature (from 10,000,000 samples)')
45	for p, uniq in zip(ax.patches, uniques):
",EDA
1038,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_44 -----loop---->ax_47_intermediate_1],"ax_43 -----set---->ax_44
loop_ax_44_ax_47 -----restart_loop---->ax_44
train_247_intermediate_1 -----loop---->train_247
train_247_intermediate_1 -----text---->train_247",EDA
1039,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_47 -----end_loop---->loop_ax_44_ax_47],"
",EDA
1040,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[height_46 -----loop---->height_67_intermediate_1],"loop_height_46_height_67 -----restart_loop---->height_46
train_247_intermediate_1 -----loop---->train_247
train_247_intermediate_1 -----get height---->train_247",EDA
1041,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[loop_ax_44_ax_47 -----restart_loop---->ax_44],"
",EDA
1042,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[loop_ax_44_ax_47 -----reassign---->ax_64],"62	#sns.set(font_scale=1.2)
63	mean = (train.is_attributed.values == 1).mean()
64	ax = sns.barplot(['App Downloaded (1)', 'Not Downloaded (0)'], [mean, 1-mean])
65	ax.set(ylabel='Proportion', title='App Downloaded vs Not Downloaded')
",EDA
1043,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_55 -----is attributed---->mean_63_intermediate_1],"train_55_intermediate_2 -----describe---->train_55
train_247_intermediate_1 -----is attributed---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----merge---->train_247
train_247_intermediate_1 -----values---->train_247",EDA
1044,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_55 -----select---->temp_74_intermediate_1],"train_55_intermediate_2 -----describe---->train_55
train_247_intermediate_1 -----is attributed---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----merge---->train_247
train_247_intermediate_1 -----value counts---->train_247",EDA
1045,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_55 -----merge---->train_79],"77	
78	#add temporary counts of ip feature ('counts') to the train table, to see if IPs with high counts have conversions
79	train= train.merge(temp,on='ip', how='left')
80	
",DATA_TRANSFORM
1046,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[test_58 -----describe---->test_59],"57	#set click_id to categorical, for cleaner statistics view
58	test['click_id']=test['click_id'].astype('category')
59	test.describe()
60	
",EDA
1047,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_64 -----set---->ax_65],"63	mean = (train.is_attributed.values == 1).mean()
64	ax = sns.barplot(['App Downloaded (1)', 'Not Downloaded (0)'], [mean, 1-mean])
65	ax.set(ylabel='Proportion', title='App Downloaded vs Not Downloaded')
66	for p, uniq in zip(ax.patches, [mean, 1-mean]):
",EDA
1048,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_65 -----loop---->ax_68_intermediate_1],"ax_64 -----set---->ax_65
loop_ax_65_ax_68 -----restart_loop---->ax_65
train_247_intermediate_1 -----loop---->train_247
train_247_intermediate_1 -----text---->train_247",EDA
1049,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[height_67 -----end_loop---->loop_height_46_height_67],"
",EDA
1050,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_68 -----end_loop---->loop_ax_65_ax_68],"
",EDA
1051,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[loop_height_46_height_67 -----restart_loop---->height_46],"
",EDA
1052,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[loop_ax_65_ax_68 -----restart_loop---->ax_65],"
",EDA
1053,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[loop_ax_65_ax_68 -----reassign---->ax_98],"96	merge.columns = ['ip', 'click_count', 'prop_downloaded']
97	
98	ax = merge[:300].plot(secondary_y='prop_downloaded')
99	plt.title('Conversion Rates over Counts of 300 Most Popular IPs')
",EDA
1054,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[temp_74 -----reassign---->temp_75],"73	#temporary table to see ips with their associated count frequencies
74	temp = train['ip'].value_counts().reset_index(name='counts')
75	temp.columns = ['ip', 'counts']
76	temp[:10]
",EDA
1055,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[temp_75 -----slice---->temp_76],"74	temp = train['ip'].value_counts().reset_index(name='counts')
75	temp.columns = ['ip', 'counts']
76	temp[:10]
77	
",EDA
1056,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[columns_75 -----reassign---->columns_96],"94	
95	merge = counts.merge(proportion, on='ip', how='left')
96	merge.columns = ['ip', 'click_count', 'prop_downloaded']
97	
",DATA_TRANSFORM
1057,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[temp_76 -----temp---->train_79],"77	
78	#add temporary counts of ip feature ('counts') to the train table, to see if IPs with high counts have conversions
79	train= train.merge(temp,on='ip', how='left')
80	
",EDA
1058,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_79 -----filter---->train_82_intermediate_1],"train_55 -----merge---->train_79
temp_76 -----temp---->train_79
train_247_intermediate_1 -----filter---->train_247
train_247_intermediate_1 -----select---->train_247",DATA_TRANSFORM
1059,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_82 -----filter---->train_84_intermediate_1],"train_82_intermediate_3 -----sort values---->train_82
train_247_intermediate_1 -----filter---->train_247
train_247_intermediate_1 -----select---->train_247",EDA
1060,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_84 -----select---->train_87_intermediate_1],"train_84_intermediate_4 -----describe---->train_84
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----astype---->train_247",EDA
1061,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87 -----select---->proportion_89_intermediate_1],"train_87_intermediate_1 -----astype---->train_87
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1062,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87 -----select---->counts_93_intermediate_1],"train_87_intermediate_1 -----astype---->train_87
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",DATA_TRANSFORM
1063,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87 -----select---->proportion_108_intermediate_1],"train_87_intermediate_1 -----astype---->train_87
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1064,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87 -----select---->counts_109_intermediate_1],"train_87_intermediate_1 -----astype---->train_87
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",DATA_TRANSFORM
1065,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87 -----select---->proportion_122_intermediate_1],"train_87_intermediate_1 -----astype---->train_87
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1066,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87 -----select---->counts_123_intermediate_1],"train_87_intermediate_1 -----astype---->train_87
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",DATA_TRANSFORM
1067,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87 -----select---->proportion_136_intermediate_1],"train_87_intermediate_1 -----astype---->train_87
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1068,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87 -----select---->counts_137_intermediate_1],"train_87_intermediate_1 -----astype---->train_87
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",DATA_TRANSFORM
1069,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87 -----select---->proportion_144_intermediate_1],"train_87_intermediate_1 -----astype---->train_87
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1070,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87 -----select---->counts_145_intermediate_1],"train_87_intermediate_1 -----astype---->train_87
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",DATA_TRANSFORM
1071,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87 -----select---->train_246_intermediate_1],"train_87_intermediate_1 -----astype---->train_87
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----sub---->train_247",EDA
1072,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_89 -----proportion---->merge_95],"93	counts = train[['ip', 'is_attributed']].groupby('ip', as_index=False).count().sort_values('is_attributed', ascending=False)
94	
95	merge = counts.merge(proportion, on='ip', how='left')
96	merge.columns = ['ip', 'click_count', 'prop_downloaded']
",EDA
1073,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_89 -----reassign---->proportion_108],"106	
107	
108	proportion = train[['app', 'is_attributed']].groupby('app', as_index=False).mean().sort_values('is_attributed', ascending=False)
109	counts = train[['app', 'is_attributed']].groupby('app', as_index=False).count().sort_values('is_attributed', ascending=False)
",EDA
1074,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_93 -----merge---->merge_95],"93	counts = train[['ip', 'is_attributed']].groupby('ip', as_index=False).count().sort_values('is_attributed', ascending=False)
94	
95	merge = counts.merge(proportion, on='ip', how='left')
96	merge.columns = ['ip', 'click_count', 'prop_downloaded']
",EDA
1075,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_93 -----reassign---->counts_109],"107	
108	proportion = train[['app', 'is_attributed']].groupby('app', as_index=False).mean().sort_values('is_attributed', ascending=False)
109	counts = train[['app', 'is_attributed']].groupby('app', as_index=False).count().sort_values('is_attributed', ascending=False)
110	merge = counts.merge(proportion, on='app', how='left')
",DATA_TRANSFORM
1076,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_95 -----reassign---->merge_96],"94	
95	merge = counts.merge(proportion, on='ip', how='left')
96	merge.columns = ['ip', 'click_count', 'prop_downloaded']
97	
",EDA
1077,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_96 -----slice---->ax_98_intermediate_1],"merge_95 -----reassign---->merge_96
train_247_intermediate_1 -----slice---->train_247
train_247_intermediate_1 -----reassign---->train_247
train_247_intermediate_1 -----plot---->train_247",EDA
1078,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_96 -----reassign---->merge_110],"108	proportion = train[['app', 'is_attributed']].groupby('app', as_index=False).mean().sort_values('is_attributed', ascending=False)
109	counts = train[['app', 'is_attributed']].groupby('app', as_index=False).count().sort_values('is_attributed', ascending=False)
110	merge = counts.merge(proportion, on='app', how='left')
111	merge.columns = ['app', 'click_count', 'prop_downloaded']
",EDA
1079,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[columns_96 -----reassign---->columns_111],"109	counts = train[['app', 'is_attributed']].groupby('app', as_index=False).count().sort_values('is_attributed', ascending=False)
110	merge = counts.merge(proportion, on='app', how='left')
111	merge.columns = ['app', 'click_count', 'prop_downloaded']
112	
",DATA_TRANSFORM
1080,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_98 -----set---->ax_100],"98	ax = merge[:300].plot(secondary_y='prop_downloaded')
99	plt.title('Conversion Rates over Counts of 300 Most Popular IPs')
100	ax.set(ylabel='Count of clicks')
101	plt.ylabel('Proportion Downloaded')
",EDA
1081,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_100 -----reassign---->ax_113],"111	merge.columns = ['app', 'click_count', 'prop_downloaded']
112	
113	ax = merge[:100].plot(secondary_y='prop_downloaded')
114	plt.title('Conversion Rates over Counts of 100 Most Popular Apps')
",EDA
1082,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_108 -----proportion---->merge_110],"108	proportion = train[['app', 'is_attributed']].groupby('app', as_index=False).mean().sort_values('is_attributed', ascending=False)
109	counts = train[['app', 'is_attributed']].groupby('app', as_index=False).count().sort_values('is_attributed', ascending=False)
110	merge = counts.merge(proportion, on='app', how='left')
111	merge.columns = ['app', 'click_count', 'prop_downloaded']
",EDA
1083,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_108 -----reassign---->proportion_122],"120	print(merge[:20])
121	
122	proportion = train[['os', 'is_attributed']].groupby('os', as_index=False).mean().sort_values('is_attributed', ascending=False)
123	counts = train[['os', 'is_attributed']].groupby('os', as_index=False).count().sort_values('is_attributed', ascending=False)
",EDA
1084,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_109 -----merge---->merge_110],"108	proportion = train[['app', 'is_attributed']].groupby('app', as_index=False).mean().sort_values('is_attributed', ascending=False)
109	counts = train[['app', 'is_attributed']].groupby('app', as_index=False).count().sort_values('is_attributed', ascending=False)
110	merge = counts.merge(proportion, on='app', how='left')
111	merge.columns = ['app', 'click_count', 'prop_downloaded']
",EDA
1085,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_109 -----reassign---->counts_123],"121	
122	proportion = train[['os', 'is_attributed']].groupby('os', as_index=False).mean().sort_values('is_attributed', ascending=False)
123	counts = train[['os', 'is_attributed']].groupby('os', as_index=False).count().sort_values('is_attributed', ascending=False)
124	merge = counts.merge(proportion, on='os', how='left')
",EDA
1086,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_110 -----reassign---->merge_111],"109	counts = train[['app', 'is_attributed']].groupby('app', as_index=False).count().sort_values('is_attributed', ascending=False)
110	merge = counts.merge(proportion, on='app', how='left')
111	merge.columns = ['app', 'click_count', 'prop_downloaded']
112	
",EDA
1087,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_111 -----slice---->ax_113_intermediate_1],"merge_110 -----reassign---->merge_111
train_247_intermediate_1 -----slice---->train_247
train_247_intermediate_1 -----reassign---->train_247
train_247_intermediate_1 -----plot---->train_247",EDA
1088,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_111 -----reassign---->merge_124],"122	proportion = train[['os', 'is_attributed']].groupby('os', as_index=False).mean().sort_values('is_attributed', ascending=False)
123	counts = train[['os', 'is_attributed']].groupby('os', as_index=False).count().sort_values('is_attributed', ascending=False)
124	merge = counts.merge(proportion, on='os', how='left')
125	merge.columns = ['os', 'click_count', 'prop_downloaded']
",EDA
1089,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[columns_111 -----reassign---->columns_125],"123	counts = train[['os', 'is_attributed']].groupby('os', as_index=False).count().sort_values('is_attributed', ascending=False)
124	merge = counts.merge(proportion, on='os', how='left')
125	merge.columns = ['os', 'click_count', 'prop_downloaded']
126	
",DATA_TRANSFORM
1090,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_113 -----set---->ax_115],"113	ax = merge[:100].plot(secondary_y='prop_downloaded')
114	plt.title('Conversion Rates over Counts of 100 Most Popular Apps')
115	ax.set(ylabel='Count of clicks')
116	plt.ylabel('Proportion Downloaded')
",EDA
1091,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_115 -----reassign---->ax_127],"125	merge.columns = ['os', 'click_count', 'prop_downloaded']
126	
127	ax = merge[:100].plot(secondary_y='prop_downloaded')
128	plt.title('Conversion Rates over Counts of 100 Most Popular Operating Systems')
",EDA
1092,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_122 -----proportion---->merge_124],"122	proportion = train[['os', 'is_attributed']].groupby('os', as_index=False).mean().sort_values('is_attributed', ascending=False)
123	counts = train[['os', 'is_attributed']].groupby('os', as_index=False).count().sort_values('is_attributed', ascending=False)
124	merge = counts.merge(proportion, on='os', how='left')
125	merge.columns = ['os', 'click_count', 'prop_downloaded']
",EDA
1093,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_122 -----reassign---->proportion_136],"134	print(merge[:20])
135	
136	proportion = train[['device', 'is_attributed']].groupby('device', as_index=False).mean().sort_values('is_attributed', ascending=False)
137	counts = train[['device', 'is_attributed']].groupby('device', as_index=False).count().sort_values('is_attributed', ascending=False)
",EDA
1094,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_123 -----merge---->merge_124],"122	proportion = train[['os', 'is_attributed']].groupby('os', as_index=False).mean().sort_values('is_attributed', ascending=False)
123	counts = train[['os', 'is_attributed']].groupby('os', as_index=False).count().sort_values('is_attributed', ascending=False)
124	merge = counts.merge(proportion, on='os', how='left')
125	merge.columns = ['os', 'click_count', 'prop_downloaded']
",EDA
1095,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_123 -----reassign---->counts_137],"135	
136	proportion = train[['device', 'is_attributed']].groupby('device', as_index=False).mean().sort_values('is_attributed', ascending=False)
137	counts = train[['device', 'is_attributed']].groupby('device', as_index=False).count().sort_values('is_attributed', ascending=False)
138	merge = counts.merge(proportion, on='device', how='left')
",EDA
1096,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_124 -----reassign---->merge_125],"123	counts = train[['os', 'is_attributed']].groupby('os', as_index=False).count().sort_values('is_attributed', ascending=False)
124	merge = counts.merge(proportion, on='os', how='left')
125	merge.columns = ['os', 'click_count', 'prop_downloaded']
126	
",EDA
1097,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_125 -----slice---->ax_127_intermediate_1],"merge_124 -----reassign---->merge_125
train_247_intermediate_1 -----slice---->train_247
train_247_intermediate_1 -----reassign---->train_247
train_247_intermediate_1 -----plot---->train_247",EDA
1098,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_125 -----reassign---->merge_138],"136	proportion = train[['device', 'is_attributed']].groupby('device', as_index=False).mean().sort_values('is_attributed', ascending=False)
137	counts = train[['device', 'is_attributed']].groupby('device', as_index=False).count().sort_values('is_attributed', ascending=False)
138	merge = counts.merge(proportion, on='device', how='left')
139	merge.columns = ['device', 'click_count', 'prop_downloaded']
",EDA
1099,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[columns_125 -----reassign---->columns_139],"137	counts = train[['device', 'is_attributed']].groupby('device', as_index=False).count().sort_values('is_attributed', ascending=False)
138	merge = counts.merge(proportion, on='device', how='left')
139	merge.columns = ['device', 'click_count', 'prop_downloaded']
140	
",DATA_TRANSFORM
1100,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_127 -----set---->ax_129],"127	ax = merge[:100].plot(secondary_y='prop_downloaded')
128	plt.title('Conversion Rates over Counts of 100 Most Popular Operating Systems')
129	ax.set(ylabel='Count of clicks')
130	plt.ylabel('Proportion Downloaded')
",EDA
1101,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_129 -----reassign---->ax_149],"147	merge.columns = ['channel', 'click_count', 'prop_downloaded']
148	
149	ax = merge[:100].plot(secondary_y='prop_downloaded')
150	plt.title('Conversion Rates over Counts of 100 Most Popular Apps')
",EDA
1102,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_136 -----proportion---->merge_138],"136	proportion = train[['device', 'is_attributed']].groupby('device', as_index=False).mean().sort_values('is_attributed', ascending=False)
137	counts = train[['device', 'is_attributed']].groupby('device', as_index=False).count().sort_values('is_attributed', ascending=False)
138	merge = counts.merge(proportion, on='device', how='left')
139	merge.columns = ['device', 'click_count', 'prop_downloaded']
",EDA
1103,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_136 -----reassign---->proportion_144],"142	print(merge)
143	
144	proportion = train[['channel', 'is_attributed']].groupby('channel', as_index=False).mean().sort_values('is_attributed', ascending=False)
145	counts = train[['channel', 'is_attributed']].groupby('channel', as_index=False).count().sort_values('is_attributed', ascending=False)
",DATA_TRANSFORM
1104,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_137 -----merge---->merge_138],"136	proportion = train[['device', 'is_attributed']].groupby('device', as_index=False).mean().sort_values('is_attributed', ascending=False)
137	counts = train[['device', 'is_attributed']].groupby('device', as_index=False).count().sort_values('is_attributed', ascending=False)
138	merge = counts.merge(proportion, on='device', how='left')
139	merge.columns = ['device', 'click_count', 'prop_downloaded']
",EDA
1105,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_137 -----reassign---->counts_145],"143	
144	proportion = train[['channel', 'is_attributed']].groupby('channel', as_index=False).mean().sort_values('is_attributed', ascending=False)
145	counts = train[['channel', 'is_attributed']].groupby('channel', as_index=False).count().sort_values('is_attributed', ascending=False)
146	merge = counts.merge(proportion, on='channel', how='left')
",DATA_TRANSFORM
1106,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_138 -----reassign---->merge_139],"137	counts = train[['device', 'is_attributed']].groupby('device', as_index=False).count().sort_values('is_attributed', ascending=False)
138	merge = counts.merge(proportion, on='device', how='left')
139	merge.columns = ['device', 'click_count', 'prop_downloaded']
140	
",EDA
1107,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_139 -----reassign---->merge_146],"144	proportion = train[['channel', 'is_attributed']].groupby('channel', as_index=False).mean().sort_values('is_attributed', ascending=False)
145	counts = train[['channel', 'is_attributed']].groupby('channel', as_index=False).count().sort_values('is_attributed', ascending=False)
146	merge = counts.merge(proportion, on='channel', how='left')
147	merge.columns = ['channel', 'click_count', 'prop_downloaded']
",EDA
1108,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[columns_139 -----reassign---->columns_147],"145	counts = train[['channel', 'is_attributed']].groupby('channel', as_index=False).count().sort_values('is_attributed', ascending=False)
146	merge = counts.merge(proportion, on='channel', how='left')
147	merge.columns = ['channel', 'click_count', 'prop_downloaded']
148	
",DATA_TRANSFORM
1109,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_144 -----proportion---->merge_146],"144	proportion = train[['channel', 'is_attributed']].groupby('channel', as_index=False).mean().sort_values('is_attributed', ascending=False)
145	counts = train[['channel', 'is_attributed']].groupby('channel', as_index=False).count().sort_values('is_attributed', ascending=False)
146	merge = counts.merge(proportion, on='channel', how='left')
147	merge.columns = ['channel', 'click_count', 'prop_downloaded']
",EDA
1110,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_145 -----merge---->merge_146],"144	proportion = train[['channel', 'is_attributed']].groupby('channel', as_index=False).mean().sort_values('is_attributed', ascending=False)
145	counts = train[['channel', 'is_attributed']].groupby('channel', as_index=False).count().sort_values('is_attributed', ascending=False)
146	merge = counts.merge(proportion, on='channel', how='left')
147	merge.columns = ['channel', 'click_count', 'prop_downloaded']
",EDA
1111,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_146 -----reassign---->merge_147],"145	counts = train[['channel', 'is_attributed']].groupby('channel', as_index=False).count().sort_values('is_attributed', ascending=False)
146	merge = counts.merge(proportion, on='channel', how='left')
147	merge.columns = ['channel', 'click_count', 'prop_downloaded']
148	
",EDA
1112,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[merge_147 -----slice---->ax_149_intermediate_1],"merge_146 -----reassign---->merge_147
train_247_intermediate_1 -----slice---->train_247
train_247_intermediate_1 -----plot---->train_247",EDA
1113,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_149 -----set---->ax_151],"149	ax = merge[:100].plot(secondary_y='prop_downloaded')
150	plt.title('Conversion Rates over Counts of 100 Most Popular Apps')
151	ax.set(ylabel='Count of clicks')
152	plt.ylabel('Proportion Downloaded')
",EDA
1114,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_158 -----head---->train_smp_160],"158	train_smp = pd.read_csv('../input/train_sample.csv')
159	
160	train_smp.head(7)
161	
",EDA
1115,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_160 -----train smp---->train_smp_163],"161	
162	#convert click_time and attributed_time to time series
163	train_smp['click_time'] = pd.to_datetime(train_smp['click_time'])
164	train_smp['attributed_time'] = pd.to_datetime(train_smp['attributed_time'])
",DATA_TRANSFORM
1116,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_163 -----train smp---->train_smp_164],"162	#convert click_time and attributed_time to time series
163	train_smp['click_time'] = pd.to_datetime(train_smp['click_time'])
164	train_smp['attributed_time'] = pd.to_datetime(train_smp['attributed_time'])
165	
",EDA
1117,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_164 -----select---->train_smp_167_intermediate_1],"pandas -----to datetime---->train_smp_164
train_smp_163 -----train smp---->train_smp_164
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----dt---->train_247",EDA
1118,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_167 -----select---->train_smp_170_intermediate_1],"train_smp_167_intermediate_2 -----round---->train_smp_167
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",DATA_TRANSFORM
1119,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_170 -----select---->train_smp_174_intermediate_1],"train_smp_170_intermediate_3 -----plot---->train_smp_170
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1120,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_174 -----select---->train_smp_179_intermediate_1],"train_smp_174_intermediate_3 -----plot---->train_smp_174
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----dt---->train_247",EDA
1121,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_179 -----head---->train_smp_181],"179	train_smp['click_hour']=train_smp['click_time'].dt.hour
180	
181	train_smp.head(7)
182	
",EDA
1122,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_181 -----select---->train_smp_183_intermediate_1],"train_smp_179 -----head---->train_smp_181
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1123,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_183 -----select---->train_smp_187_intermediate_1],"train_smp_183_intermediate_3 -----plot---->train_smp_183
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1124,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_187 -----select---->train_smp_191_intermediate_1],"train_smp_187_intermediate_3 -----plot---->train_smp_187
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1125,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_191 -----select---->train_smp_195_intermediate_1],"train_smp_191_intermediate_3 -----plot---->train_smp_191
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1126,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_195 -----select---->group_203_intermediate_1],"train_smp_195_intermediate_3 -----plot---->train_smp_195
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1127,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_195 -----select---->group_206_intermediate_1],"train_smp_195_intermediate_3 -----plot---->train_smp_195
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----groupby---->train_247",EDA
1128,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_195 -----select---->train_smp_239_intermediate_1],"train_smp_195_intermediate_3 -----plot---->train_smp_195
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----sub---->train_247",EDA
1129,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[group_203 -----select---->x_204],"202	
203	group = train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=False).mean()
204	x = group['click_hour']
205	ymean = group['is_attributed']
",EDA
1130,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[group_203 -----select---->ymean_205],"203	group = train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=False).mean()
204	x = group['click_hour']
205	ymean = group['is_attributed']
206	group = train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=False).count()
",EDA
1131,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[group_203 -----reassign---->group_206],"204	x = group['click_hour']
205	ymean = group['is_attributed']
206	group = train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=False).count()
207	ycount = group['is_attributed']
",EDA
1132,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[x_204 -----x---->p1_224],"222	color2 = '#a675a1'
223	
224	p1, = host.plot(x, ymean, color=color1,label=""Proportion Converted"")
225	p2, = par1.plot(x, ycount, color=color2, label=""Click Count"")
",EDA
1133,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[x_204 -----x---->p2_225],"223	
224	p1, = host.plot(x, ymean, color=color1,label=""Proportion Converted"")
225	p2, = par1.plot(x, ycount, color=color2, label=""Click Count"")
226	
",EDA
1134,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[x_204 -----reassign---->x_249],"247	train['timePass'].describe()
248	
249	x = 5.1
250	y = 4.3
",EDA
1135,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ymean_205 -----ymean---->p1_224],"222	color2 = '#a675a1'
223	
224	p1, = host.plot(x, ymean, color=color1,label=""Proportion Converted"")
225	p2, = par1.plot(x, ycount, color=color2, label=""Click Count"")
",EDA
1136,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[group_206 -----select---->ycount_207],"205	ymean = group['is_attributed']
206	group = train_smp[['click_hour','is_attributed']].groupby(['click_hour'], as_index=False).count()
207	ycount = group['is_attributed']
208	
",EDA
1137,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ycount_207 -----ycount---->p2_225],"223	
224	p1, = host.plot(x, ymean, color=color1,label=""Proportion Converted"")
225	p2, = par1.plot(x, ycount, color=color2, label=""Click Count"")
226	
",EDA
1138,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[fig_210 -----add subplot---->host_211],"209	
210	fig = plt.figure()
211	host = fig.add_subplot(111)
212	
",EDA
1139,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[host_211 -----twinx---->par1_213],"211	host = fig.add_subplot(111)
212	
213	par1 = host.twinx()
214	
",EDA
1140,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[host_211 -----set xlabel---->host_215],"213	par1 = host.twinx()
214	
215	host.set_xlabel(""Time"")
216	host.set_ylabel(""Proportion Converted"")
",EDA
1141,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[par1_213 -----set ylabel---->par1_217],"215	host.set_xlabel(""Time"")
216	host.set_ylabel(""Proportion Converted"")
217	par1.set_ylabel(""Click Count"")
218	
",EDA
1142,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[host_215 -----set ylabel---->host_216],"214	
215	host.set_xlabel(""Time"")
216	host.set_ylabel(""Proportion Converted"")
217	par1.set_ylabel(""Click Count"")
",EDA
1143,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[host_216 -----plot---->p1_224],"222	color2 = '#a675a1'
223	
224	p1, = host.plot(x, ymean, color=color1,label=""Proportion Converted"")
225	p2, = par1.plot(x, ycount, color=color2, label=""Click Count"")
",EDA
1144,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[host_216 -----legend---->host_228],"226	
227	lns = [p1, p2]
228	host.legend(handles=lns, loc='best')
229	
",EDA
1145,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[par1_217 -----plot---->p2_225],"223	
224	p1, = host.plot(x, ymean, color=color1,label=""Proportion Converted"")
225	p2, = par1.plot(x, ycount, color=color2, label=""Click Count"")
226	
",EDA
1146,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[par1_217 -----yaxis---->par1_231_intermediate_1],"par1_213 -----set ylabel---->par1_217
train_247_intermediate_1 -----plot---->train_247
train_247_intermediate_1 -----yaxis---->train_247
train_247_intermediate_1 -----label---->train_247",EDA
1147,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[p1_224 -----p1---->lns_227],"225	p2, = par1.plot(x, ycount, color=color2, label=""Click Count"")
226	
227	lns = [p1, p2]
228	host.legend(handles=lns, loc='best')
",EDA
1148,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[p2_225 -----p2---->lns_227],"225	p2, = par1.plot(x, ycount, color=color2, label=""Click Count"")
226	
227	lns = [p1, p2]
228	host.legend(handles=lns, loc='best')
",EDA
1149,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[host_228 -----yaxis---->host_230_intermediate_1],"host_216 -----legend---->host_228
train_247_intermediate_1 -----yaxis---->train_247
train_247_intermediate_1 -----label---->train_247",EDA
1150,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_239 -----filter---->train_smp_241_intermediate_1],"train_smp_239_intermediate_1 -----sub---->train_smp_239
train_247_intermediate_1 -----filter---->train_247
train_247_intermediate_1 -----select---->train_247",EDA
1151,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_241 -----select---->train_smp_243_intermediate_1],"train_smp_241_intermediate_2 -----equal---->train_smp_241
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----describe---->train_247",EDA
1152,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_246 -----select---->train_247_intermediate_1],"train_246_intermediate_1 -----sub---->train_246
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----describe---->train_247",EDA
1153,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_26_intermediate_1 -----train[v]---->train_26_intermediate_2],"train_20 -----loop---->train_26_intermediate_1
train_247_intermediate_1 -----train[v]---->train_247
train_247_intermediate_1 -----astype---->train_247",EDA
1154,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_26_intermediate_2 -----astype---->train_26],"train_26_intermediate_1 -----train[v]---->train_26_intermediate_2
train_247_intermediate_1 -----astype---->train_247
train_247_intermediate_1 -----end_loop---->train_247",DATA_TRANSFORM
1155,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[test_27_intermediate_1 -----test[v]---->test_27_intermediate_2],"test_22 -----loop---->test_27_intermediate_1
train_247_intermediate_1 -----test[v]---->train_247
train_247_intermediate_1 -----astype---->train_247",EDA
1156,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[test_27_intermediate_2 -----astype---->test_27],"test_27_intermediate_1 -----test[v]---->test_27_intermediate_2
train_247_intermediate_1 -----astype---->train_247
train_247_intermediate_1 -----end_loop---->train_247",DATA_TRANSFORM
1157,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_35_intermediate_1 -----astype---->train_35],"train_31 -----select---->train_35_intermediate_1
train_247_intermediate_1 -----astype---->train_247
train_247_intermediate_1 -----describe---->train_247",DATA_TRANSFORM
1158,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[test_58_intermediate_1 -----astype---->test_58],"test_32 -----select---->test_58_intermediate_1
train_247_intermediate_1 -----astype---->train_247
train_247_intermediate_1 -----describe---->train_247",DATA_TRANSFORM
1159,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_55_intermediate_1 -----equal---->train_55_intermediate_2],"train_37 -----select---->train_55_intermediate_1
train_247_intermediate_1 -----equal---->train_247
train_247_intermediate_1 -----describe---->train_247",EDA
1160,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_55_intermediate_2 -----describe---->train_55],"train_55_intermediate_1 -----equal---->train_55_intermediate_2
train_247_intermediate_1 -----describe---->train_247
train_247_intermediate_1 -----is attributed---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----merge---->train_247",EDA
1161,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_47_intermediate_1 -----text---->ax_47],"ax_44 -----loop---->ax_47_intermediate_1
train_247_intermediate_1 -----text---->train_247
train_247_intermediate_1 -----end_loop---->train_247",EDA
1162,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[height_67_intermediate_1 -----get height---->height_67],"height_46 -----loop---->height_67_intermediate_1
train_247_intermediate_1 -----get height---->train_247
train_247_intermediate_1 -----end_loop---->train_247",EDA
1163,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[mean_63_intermediate_1 -----values---->mean_63_intermediate_2],"train_55 -----is attributed---->mean_63_intermediate_1
train_247_intermediate_1 -----values---->train_247
train_247_intermediate_1 -----equal---->train_247",EDA
1164,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[mean_63_intermediate_2 -----equal---->mean_63_intermediate_3],"mean_63_intermediate_1 -----values---->mean_63_intermediate_2
train_247_intermediate_1 -----equal---->train_247
train_247_intermediate_1 -----mean---->train_247",EDA
1165,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[mean_63_intermediate_3 -----mean---->mean_63],"mean_63_intermediate_2 -----equal---->mean_63_intermediate_3
train_247_intermediate_1 -----mean---->train_247",EDA
1166,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[temp_74_intermediate_1 -----value counts---->temp_74_intermediate_2],"train_55 -----select---->temp_74_intermediate_1
train_247_intermediate_1 -----value counts---->train_247
train_247_intermediate_1 -----reset index---->train_247",EDA
1167,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[temp_74_intermediate_2 -----reset index---->temp_74],"temp_74_intermediate_1 -----value counts---->temp_74_intermediate_2
train_247_intermediate_1 -----reset index---->train_247
train_247_intermediate_1 -----reassign---->train_247",EDA
1168,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_68_intermediate_1 -----text---->ax_68],"ax_65 -----loop---->ax_68_intermediate_1
train_247_intermediate_1 -----text---->train_247
train_247_intermediate_1 -----end_loop---->train_247",EDA
1169,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_82_intermediate_1 -----select---->train_82_intermediate_2],"train_79 -----filter---->train_82_intermediate_1
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----equal---->train_247",DATA_TRANSFORM
1170,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_82_intermediate_2 -----equal---->train_82_intermediate_3],"train_82_intermediate_1 -----select---->train_82_intermediate_2
train_247_intermediate_1 -----equal---->train_247
train_247_intermediate_1 -----sort values---->train_247",DATA_TRANSFORM
1171,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_82_intermediate_3 -----sort values---->train_82],"train_82_intermediate_2 -----equal---->train_82_intermediate_3
train_247_intermediate_1 -----sort values---->train_247
train_247_intermediate_1 -----filter---->train_247",EDA
1172,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_84_intermediate_1 -----select---->train_84_intermediate_2],"train_82 -----filter---->train_84_intermediate_1
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----equal---->train_247",EDA
1173,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_84_intermediate_2 -----equal---->train_84_intermediate_3],"train_84_intermediate_1 -----select---->train_84_intermediate_2
train_247_intermediate_1 -----equal---->train_247
train_247_intermediate_1 -----ip---->train_247",EDA
1174,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_84_intermediate_3 -----ip---->train_84_intermediate_4],"train_84_intermediate_2 -----equal---->train_84_intermediate_3
train_247_intermediate_1 -----ip---->train_247
train_247_intermediate_1 -----describe---->train_247",EDA
1175,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_84_intermediate_4 -----describe---->train_84],"train_84_intermediate_3 -----ip---->train_84_intermediate_4
train_247_intermediate_1 -----describe---->train_247
train_247_intermediate_1 -----select---->train_247",EDA
1176,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_87_intermediate_1 -----astype---->train_87],"train_84 -----select---->train_87_intermediate_1
train_247_intermediate_1 -----astype---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247",DATA_TRANSFORM
1177,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_89_intermediate_1 -----groupby---->proportion_89_intermediate_2],"train_87 -----select---->proportion_89_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----mean---->train_247",EDA
1178,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_89_intermediate_2 -----mean---->proportion_89_intermediate_3],"proportion_89_intermediate_1 -----groupby---->proportion_89_intermediate_2
train_247_intermediate_1 -----mean---->train_247
train_247_intermediate_1 -----sort values---->train_247",EDA
1179,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_89_intermediate_3 -----sort values---->proportion_89],"proportion_89_intermediate_2 -----mean---->proportion_89_intermediate_3
train_247_intermediate_1 -----sort values---->train_247
train_247_intermediate_1 -----proportion---->train_247
train_247_intermediate_1 -----reassign---->train_247",EDA
1180,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_93_intermediate_1 -----groupby---->counts_93_intermediate_2],"train_87 -----select---->counts_93_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----count---->train_247",EDA
1181,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_93_intermediate_2 -----count---->counts_93_intermediate_3],"counts_93_intermediate_1 -----groupby---->counts_93_intermediate_2
train_247_intermediate_1 -----count---->train_247
train_247_intermediate_1 -----sort values---->train_247",EDA
1182,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_93_intermediate_3 -----sort values---->counts_93],"counts_93_intermediate_2 -----count---->counts_93_intermediate_3
train_247_intermediate_1 -----sort values---->train_247
train_247_intermediate_1 -----merge---->train_247
train_247_intermediate_1 -----reassign---->train_247",EDA
1183,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_108_intermediate_1 -----groupby---->proportion_108_intermediate_2],"train_87 -----select---->proportion_108_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----mean---->train_247",EDA
1184,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_108_intermediate_2 -----mean---->proportion_108_intermediate_3],"proportion_108_intermediate_1 -----groupby---->proportion_108_intermediate_2
train_247_intermediate_1 -----mean---->train_247
train_247_intermediate_1 -----sort values---->train_247",EDA
1185,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_108_intermediate_3 -----sort values---->proportion_108],"proportion_108_intermediate_2 -----mean---->proportion_108_intermediate_3
train_247_intermediate_1 -----sort values---->train_247
train_247_intermediate_1 -----proportion---->train_247
train_247_intermediate_1 -----reassign---->train_247",EDA
1186,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_109_intermediate_1 -----groupby---->counts_109_intermediate_2],"train_87 -----select---->counts_109_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----count---->train_247",DATA_TRANSFORM
1187,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_109_intermediate_2 -----count---->counts_109_intermediate_3],"counts_109_intermediate_1 -----groupby---->counts_109_intermediate_2
train_247_intermediate_1 -----count---->train_247
train_247_intermediate_1 -----sort values---->train_247",DATA_TRANSFORM
1188,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_109_intermediate_3 -----sort values---->counts_109],"counts_109_intermediate_2 -----count---->counts_109_intermediate_3
train_247_intermediate_1 -----sort values---->train_247
train_247_intermediate_1 -----merge---->train_247
train_247_intermediate_1 -----reassign---->train_247",EDA
1189,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_122_intermediate_1 -----groupby---->proportion_122_intermediate_2],"train_87 -----select---->proportion_122_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----mean---->train_247",EDA
1190,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_122_intermediate_2 -----mean---->proportion_122_intermediate_3],"proportion_122_intermediate_1 -----groupby---->proportion_122_intermediate_2
train_247_intermediate_1 -----mean---->train_247
train_247_intermediate_1 -----sort values---->train_247",EDA
1191,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_122_intermediate_3 -----sort values---->proportion_122],"proportion_122_intermediate_2 -----mean---->proportion_122_intermediate_3
train_247_intermediate_1 -----sort values---->train_247
train_247_intermediate_1 -----proportion---->train_247
train_247_intermediate_1 -----reassign---->train_247",EDA
1192,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_123_intermediate_1 -----groupby---->counts_123_intermediate_2],"train_87 -----select---->counts_123_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----count---->train_247",EDA
1193,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_123_intermediate_2 -----count---->counts_123_intermediate_3],"counts_123_intermediate_1 -----groupby---->counts_123_intermediate_2
train_247_intermediate_1 -----count---->train_247
train_247_intermediate_1 -----sort values---->train_247",EDA
1194,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_123_intermediate_3 -----sort values---->counts_123],"counts_123_intermediate_2 -----count---->counts_123_intermediate_3
train_247_intermediate_1 -----sort values---->train_247
train_247_intermediate_1 -----merge---->train_247
train_247_intermediate_1 -----reassign---->train_247",EDA
1195,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_136_intermediate_1 -----groupby---->proportion_136_intermediate_2],"train_87 -----select---->proportion_136_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----mean---->train_247",EDA
1196,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_136_intermediate_2 -----mean---->proportion_136_intermediate_3],"proportion_136_intermediate_1 -----groupby---->proportion_136_intermediate_2
train_247_intermediate_1 -----mean---->train_247
train_247_intermediate_1 -----sort values---->train_247",EDA
1197,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_136_intermediate_3 -----sort values---->proportion_136],"proportion_136_intermediate_2 -----mean---->proportion_136_intermediate_3
train_247_intermediate_1 -----sort values---->train_247
train_247_intermediate_1 -----proportion---->train_247
train_247_intermediate_1 -----reassign---->train_247",EDA
1198,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_137_intermediate_1 -----groupby---->counts_137_intermediate_2],"train_87 -----select---->counts_137_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----count---->train_247",EDA
1199,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_137_intermediate_2 -----count---->counts_137_intermediate_3],"counts_137_intermediate_1 -----groupby---->counts_137_intermediate_2
train_247_intermediate_1 -----count---->train_247
train_247_intermediate_1 -----sort values---->train_247",EDA
1200,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_137_intermediate_3 -----sort values---->counts_137],"counts_137_intermediate_2 -----count---->counts_137_intermediate_3
train_247_intermediate_1 -----sort values---->train_247
train_247_intermediate_1 -----merge---->train_247
train_247_intermediate_1 -----reassign---->train_247",EDA
1201,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_144_intermediate_1 -----groupby---->proportion_144_intermediate_2],"train_87 -----select---->proportion_144_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----mean---->train_247",EDA
1202,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_144_intermediate_2 -----mean---->proportion_144_intermediate_3],"proportion_144_intermediate_1 -----groupby---->proportion_144_intermediate_2
train_247_intermediate_1 -----mean---->train_247
train_247_intermediate_1 -----sort values---->train_247",EDA
1203,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[proportion_144_intermediate_3 -----sort values---->proportion_144],"proportion_144_intermediate_2 -----mean---->proportion_144_intermediate_3
train_247_intermediate_1 -----sort values---->train_247
train_247_intermediate_1 -----proportion---->train_247",EDA
1204,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_145_intermediate_1 -----groupby---->counts_145_intermediate_2],"train_87 -----select---->counts_145_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----count---->train_247",DATA_TRANSFORM
1205,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_145_intermediate_2 -----count---->counts_145_intermediate_3],"counts_145_intermediate_1 -----groupby---->counts_145_intermediate_2
train_247_intermediate_1 -----count---->train_247
train_247_intermediate_1 -----sort values---->train_247",DATA_TRANSFORM
1206,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[counts_145_intermediate_3 -----sort values---->counts_145],"counts_145_intermediate_2 -----count---->counts_145_intermediate_3
train_247_intermediate_1 -----sort values---->train_247
train_247_intermediate_1 -----merge---->train_247",DATA_TRANSFORM
1207,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_246_intermediate_1 -----sub---->train_246],"train_87 -----select---->train_246_intermediate_1
train_247_intermediate_1 -----sub---->train_247
train_247_intermediate_1 -----select---->train_247",DATA_TRANSFORM
1208,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_98_intermediate_1 -----plot---->ax_98],"merge_96 -----slice---->ax_98_intermediate_1
train_247_intermediate_1 -----plot---->train_247
train_247_intermediate_1 -----set---->train_247",EDA
1209,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_113_intermediate_1 -----plot---->ax_113],"merge_111 -----slice---->ax_113_intermediate_1
train_247_intermediate_1 -----plot---->train_247
train_247_intermediate_1 -----set---->train_247",EDA
1210,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_127_intermediate_1 -----plot---->ax_127],"merge_125 -----slice---->ax_127_intermediate_1
train_247_intermediate_1 -----plot---->train_247
train_247_intermediate_1 -----set---->train_247",EDA
1211,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[ax_149_intermediate_1 -----plot---->ax_149],"merge_147 -----slice---->ax_149_intermediate_1
train_247_intermediate_1 -----plot---->train_247
train_247_intermediate_1 -----set---->train_247",EDA
1212,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_167_intermediate_1 -----dt---->train_smp_167_intermediate_2],"train_smp_164 -----select---->train_smp_167_intermediate_1
train_247_intermediate_1 -----dt---->train_247
train_247_intermediate_1 -----round---->train_247",EDA
1213,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_167_intermediate_2 -----round---->train_smp_167],"train_smp_167_intermediate_1 -----dt---->train_smp_167_intermediate_2
train_247_intermediate_1 -----round---->train_247
train_247_intermediate_1 -----select---->train_247",DATA_TRANSFORM
1214,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_170_intermediate_1 -----groupby---->train_smp_170_intermediate_2],"train_smp_167 -----select---->train_smp_170_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----count---->train_247",EDA
1215,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_170_intermediate_2 -----count---->train_smp_170_intermediate_3],"train_smp_170_intermediate_1 -----groupby---->train_smp_170_intermediate_2
train_247_intermediate_1 -----count---->train_247
train_247_intermediate_1 -----plot---->train_247",EDA
1216,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_170_intermediate_3 -----plot---->train_smp_170],"train_smp_170_intermediate_2 -----count---->train_smp_170_intermediate_3
train_247_intermediate_1 -----plot---->train_247
train_247_intermediate_1 -----select---->train_247",EDA
1217,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_174_intermediate_1 -----groupby---->train_smp_174_intermediate_2],"train_smp_170 -----select---->train_smp_174_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----mean---->train_247",EDA
1218,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_174_intermediate_2 -----mean---->train_smp_174_intermediate_3],"train_smp_174_intermediate_1 -----groupby---->train_smp_174_intermediate_2
train_247_intermediate_1 -----mean---->train_247
train_247_intermediate_1 -----plot---->train_247",EDA
1219,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_174_intermediate_3 -----plot---->train_smp_174],"train_smp_174_intermediate_2 -----mean---->train_smp_174_intermediate_3
train_247_intermediate_1 -----plot---->train_247
train_247_intermediate_1 -----select---->train_247",EDA
1220,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_179_intermediate_1 -----dt---->train_smp_179_intermediate_2],"train_smp_174 -----select---->train_smp_179_intermediate_1
train_247_intermediate_1 -----dt---->train_247
train_247_intermediate_1 -----hour---->train_247",EDA
1221,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_179_intermediate_2 -----hour---->train_smp_179],"train_smp_179_intermediate_1 -----dt---->train_smp_179_intermediate_2
train_247_intermediate_1 -----hour---->train_247
train_247_intermediate_1 -----head---->train_247",EDA
1222,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_183_intermediate_1 -----groupby---->train_smp_183_intermediate_2],"train_smp_181 -----select---->train_smp_183_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----count---->train_247",EDA
1223,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_183_intermediate_2 -----count---->train_smp_183_intermediate_3],"train_smp_183_intermediate_1 -----groupby---->train_smp_183_intermediate_2
train_247_intermediate_1 -----count---->train_247
train_247_intermediate_1 -----plot---->train_247",EDA
1224,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_183_intermediate_3 -----plot---->train_smp_183],"train_smp_183_intermediate_2 -----count---->train_smp_183_intermediate_3
train_247_intermediate_1 -----plot---->train_247
train_247_intermediate_1 -----select---->train_247",EDA
1225,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_187_intermediate_1 -----groupby---->train_smp_187_intermediate_2],"train_smp_183 -----select---->train_smp_187_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----count---->train_247",EDA
1226,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_187_intermediate_2 -----count---->train_smp_187_intermediate_3],"train_smp_187_intermediate_1 -----groupby---->train_smp_187_intermediate_2
train_247_intermediate_1 -----count---->train_247
train_247_intermediate_1 -----plot---->train_247",EDA
1227,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_187_intermediate_3 -----plot---->train_smp_187],"train_smp_187_intermediate_2 -----count---->train_smp_187_intermediate_3
train_247_intermediate_1 -----plot---->train_247
train_247_intermediate_1 -----select---->train_247",EDA
1228,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_191_intermediate_1 -----groupby---->train_smp_191_intermediate_2],"train_smp_187 -----select---->train_smp_191_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----mean---->train_247",EDA
1229,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_191_intermediate_2 -----mean---->train_smp_191_intermediate_3],"train_smp_191_intermediate_1 -----groupby---->train_smp_191_intermediate_2
train_247_intermediate_1 -----mean---->train_247
train_247_intermediate_1 -----plot---->train_247",EDA
1230,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_191_intermediate_3 -----plot---->train_smp_191],"train_smp_191_intermediate_2 -----mean---->train_smp_191_intermediate_3
train_247_intermediate_1 -----plot---->train_247
train_247_intermediate_1 -----select---->train_247",EDA
1231,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_195_intermediate_1 -----groupby---->train_smp_195_intermediate_2],"train_smp_191 -----select---->train_smp_195_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----mean---->train_247",EDA
1232,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_195_intermediate_2 -----mean---->train_smp_195_intermediate_3],"train_smp_195_intermediate_1 -----groupby---->train_smp_195_intermediate_2
train_247_intermediate_1 -----mean---->train_247
train_247_intermediate_1 -----plot---->train_247",EDA
1233,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_195_intermediate_3 -----plot---->train_smp_195],"train_smp_195_intermediate_2 -----mean---->train_smp_195_intermediate_3
train_247_intermediate_1 -----plot---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247",EDA
1234,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[group_203_intermediate_1 -----groupby---->group_203_intermediate_2],"train_smp_195 -----select---->group_203_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----mean---->train_247",EDA
1235,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[group_203_intermediate_2 -----mean---->group_203],"group_203_intermediate_1 -----groupby---->group_203_intermediate_2
train_247_intermediate_1 -----mean---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----reassign---->train_247",EDA
1236,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[group_206_intermediate_1 -----groupby---->group_206_intermediate_2],"train_smp_195 -----select---->group_206_intermediate_1
train_247_intermediate_1 -----groupby---->train_247
train_247_intermediate_1 -----count---->train_247",EDA
1237,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[group_206_intermediate_2 -----count---->group_206],"group_206_intermediate_1 -----groupby---->group_206_intermediate_2
train_247_intermediate_1 -----count---->train_247
train_247_intermediate_1 -----select---->train_247",EDA
1238,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_239_intermediate_1 -----sub---->train_smp_239],"train_smp_195 -----select---->train_smp_239_intermediate_1
train_247_intermediate_1 -----sub---->train_247
train_247_intermediate_1 -----filter---->train_247",EDA
1239,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[par1_231_intermediate_1 -----label---->par1_231_intermediate_2],"par1_217 -----yaxis---->par1_231_intermediate_1
train_247_intermediate_1 -----label---->train_247
train_247_intermediate_1 -----set color---->train_247",EDA
1240,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[par1_231_intermediate_2 -----set color---->par1_231],"par1_231_intermediate_1 -----label---->par1_231_intermediate_2
train_247_intermediate_1 -----set color---->train_247",EDA
1241,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[host_230_intermediate_1 -----label---->host_230_intermediate_2],"host_228 -----yaxis---->host_230_intermediate_1
train_247_intermediate_1 -----label---->train_247
train_247_intermediate_1 -----set color---->train_247",EDA
1242,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[host_230_intermediate_2 -----set color---->host_230],"host_230_intermediate_1 -----label---->host_230_intermediate_2
train_247_intermediate_1 -----set color---->train_247",EDA
1243,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_241_intermediate_1 -----select---->train_smp_241_intermediate_2],"train_smp_239 -----filter---->train_smp_241_intermediate_1
train_247_intermediate_1 -----select---->train_247
train_247_intermediate_1 -----equal---->train_247",EDA
1244,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_241_intermediate_2 -----equal---->train_smp_241],"train_smp_241_intermediate_1 -----select---->train_smp_241_intermediate_2
train_247_intermediate_1 -----equal---->train_247
train_247_intermediate_1 -----select---->train_247",EDA
1245,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_smp_243_intermediate_1 -----describe---->train_smp_243],"train_smp_241 -----select---->train_smp_243_intermediate_1
train_247_intermediate_1 -----describe---->train_247",EDA
1246,00006a6c82444d9f01c9fe03f89e4ee2bc00bd55.execution_graph,[train_247_intermediate_1 -----describe---->train_247],"train_246 -----select---->train_247_intermediate_1
train_247_intermediate_1 -----describe---->train_247",EDA
1247,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[music_6 -----reassign---->music_7],"5	
6	music = pd.DataFrame()
7	music['duration'] = [184, 134, 243, 186, 122, 197, 294, 382, 102, 264, 
8	                     205, 110, 307, 110, 397, 153, 190, 192, 210, 403,
",DATA_TRANSFORM
1248,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[pandas -----data frame---->music_6],"4	import scipy
5	
6	music = pd.DataFrame()
7	music['duration'] = [184, 134, 243, 186, 122, 197, 294, 382, 102, 264, 
",DATA_TRANSFORM
1249,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[pandas -----data frame---->X_23],"21	
22	# Our input data frame will be the z-scores this time instead of raw data.
23	X = pd.DataFrame({
24	    'loudness': stats.zscore(music.loudness),
",MODEL_TRAIN
1250,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[music_7 -----reassign---->music_10],"8	                     205, 110, 307, 110, 397, 153, 190, 192, 210, 403,
9	                     164, 198, 204, 253, 234, 190, 182, 401, 376, 102]
10	music['loudness'] = [18, 34, 43, 36, 22, 9, 29, 22, 10, 24, 
11	                     20, 10, 17, 51, 7, 13, 19, 12, 21, 22,
",DATA_TRANSFORM
1251,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[music_10 -----reassign---->music_13],"11	                     20, 10, 17, 51, 7, 13, 19, 12, 21, 22,
12	                     16, 18, 4, 23, 34, 19, 14, 11, 37, 42]
13	music['jazz'] = [ 1, 0, 0, 0, 1, 1, 0, 1, 1, 0,
14	                  0, 1, 1, 0, 1, 1, 0, 1, 1, 1,
",DATA_TRANSFORM
1252,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[music_13 -----jazz---->Y_29],"27	
28	# Fit our model.
29	Y = music.jazz
30	neighbors.fit(X, Y)
",MODEL_TRAIN
1253,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[music_13 -----reassign---->music_68],"66	#We can also implement z-scores using StandardScaler
67	from sklearn.preprocessing import StandardScaler
68	music['loudness_scaled'] = StandardScaler().fit_transform(np.array(music.loudness).reshape(-1,1))
69	music['duration_scaled'] = StandardScaler().fit_transform(np.array(music.duration).reshape(-1,1))
",DATA_TRANSFORM
1254,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[neighbors_20 -----fit---->neighbors_30],"28	# Fit our model.
29	Y = music.jazz
30	neighbors.fit(X, Y)
31	
",MODEL_TRAIN
1255,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[sklearn.neighbors -----kneighbors classifier---->neighbors_20],"18	from scipy import stats
19	
20	neighbors = KNeighborsClassifier(n_neighbors=5, weights='distance')
21	
",MODEL_TRAIN
1256,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[X_23 -----x---->neighbors_30],"28	# Fit our model.
29	Y = music.jazz
30	neighbors.fit(X, Y)
31	
",MODEL_TRAIN
1257,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[X_23 -----x---->X_33],"31	
32	# Arrays, not data frames, for the mesh.
33	X = np.array(X)
34	Y = np.array(Y)
",MODEL_TRAIN
1258,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[Y_29 -----y---->neighbors_30],"28	# Fit our model.
29	Y = music.jazz
30	neighbors.fit(X, Y)
31	
",MODEL_TRAIN
1259,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[Y_29 -----y---->Y_34],"32	# Arrays, not data frames, for the mesh.
33	X = np.array(X)
34	Y = np.array(Y)
35	
",DATA_TRANSFORM
1260,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[neighbors_30 -----predict---->Z_48],"46	    np.arange(y_min, y_max, h)
47	)
48	Z = neighbors.predict(np.c_[xx.ravel(), yy.ravel()])
49	
",MODEL_EVALUATION
1261,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[neighbors_30 -----fit---->neighbors_76],"74	
75	Y = music.jazz
76	neighbors.fit(X, Y)
77	
",MODEL_TRAIN
1262,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,"[X_33 -----x[:,0]---->x_min_40_intermediate_1]","X_23 -----x---->X_33
numpy -----array---->X_33
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x---->y_max_89
y_max_89_intermediate_2 -----reassign---->y_max_89
y_max_89_intermediate_2 -----min---->y_max_89",MODEL_EVALUATION
1263,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,"[X_33 -----x[:,0]---->x_max_41_intermediate_1]","X_23 -----x---->X_33
numpy -----array---->X_33
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x---->y_max_89
y_max_89_intermediate_2 -----reassign---->y_max_89
y_max_89_intermediate_2 -----max---->y_max_89",MODEL_TRAIN
1264,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,"[X_33 -----x[:,1]---->y_min_42_intermediate_1]","X_23 -----x---->X_33
numpy -----array---->X_33
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x---->y_max_89
y_max_89_intermediate_2 -----reassign---->y_max_89
y_max_89_intermediate_2 -----min---->y_max_89",MODEL_EVALUATION
1265,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,"[X_33 -----x[:,1]---->y_max_43_intermediate_1]","X_23 -----x---->X_33
numpy -----array---->X_33
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x---->y_max_89
y_max_89_intermediate_2 -----reassign---->y_max_89
y_max_89_intermediate_2 -----max---->y_max_89",MODEL_EVALUATION
1266,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[X_33 -----x---->plt_57],"55	
56	# Add the training points to the plot.
57	plt.scatter(X[:, 0], X[:, 1], c=Y)
58	plt.xlabel('Loudness')
",EDA
1267,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[X_33 -----reassign---->X_73],"71	music.head()
72	
73	X = music.loc[:, ['loudness_scaled','duration_scaled']]
74	
",DATA_TRANSFORM
1268,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[numpy -----array---->X_33],"31	
32	# Arrays, not data frames, for the mesh.
33	X = np.array(X)
34	Y = np.array(Y)
",DATA_TRANSFORM
1269,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[numpy -----array---->Y_34],"32	# Arrays, not data frames, for the mesh.
33	X = np.array(X)
34	Y = np.array(Y)
35	
",DATA_TRANSFORM
1270,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[numpy -----meshgrid---->xx_44],"42	y_min = X[:,1].min() - .5
43	y_max = X[:,1].max() + .5
44	xx, yy = np.meshgrid(
45	    np.arange(x_min, x_max, h),
",MODEL_EVALUATION
1271,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[numpy -----meshgrid---->yy_44],"42	y_min = X[:,1].min() - .5
43	y_max = X[:,1].max() + .5
44	xx, yy = np.meshgrid(
45	    np.arange(x_min, x_max, h),
",MODEL_EVALUATION
1272,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[numpy -----array---->X_79],"77	
78	# Arrays, not data frames, for the mesh.
79	X = np.array(X)
80	Y = np.array(Y)
",MODEL_EVALUATION
1273,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[numpy -----array---->Y_80],"78	# Arrays, not data frames, for the mesh.
79	X = np.array(X)
80	Y = np.array(Y)
81	
",MODEL_EVALUATION
1274,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[numpy -----meshgrid---->xx_90],"88	y_min = X[:,1].min() - .5
89	y_max = X[:,1].max() + .5
90	xx, yy = np.meshgrid(
91	    np.arange(x_min, x_max, h),
",MODEL_EVALUATION
1275,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[numpy -----meshgrid---->yy_90],"88	y_min = X[:,1].min() - .5
89	y_max = X[:,1].max() + .5
90	xx, yy = np.meshgrid(
91	    np.arange(x_min, x_max, h),
",MODEL_EVALUATION
1276,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[Y_34 -----reassign---->Y_75],"73	X = music.loc[:, ['loudness_scaled','duration_scaled']]
74	
75	Y = music.jazz
76	neighbors.fit(X, Y)
",MODEL_EVALUATION
1277,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[h_37 -----reassign---->h_83],"81	
82	# Mesh size.
83	h = .01
84	
",HYPERPARAMETER_TUNING
1278,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[x_min_40 -----reassign---->x_min_86],"84	
85	# Plot the decision boundary. We assign a color to each point in the mesh.
86	x_min = X[:,0].min() - .5
87	x_max = X[:,0].max() + .5
",DATA_TRANSFORM
1279,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[x_max_41 -----reassign---->x_max_87],"85	# Plot the decision boundary. We assign a color to each point in the mesh.
86	x_min = X[:,0].min() - .5
87	x_max = X[:,0].max() + .5
88	y_min = X[:,1].min() - .5
",MODEL_TRAIN
1280,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[y_min_42 -----reassign---->y_min_88],"86	x_min = X[:,0].min() - .5
87	x_max = X[:,0].max() + .5
88	y_min = X[:,1].min() - .5
89	y_max = X[:,1].max() + .5
",DATA_TRANSFORM
1281,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[y_max_43 -----reassign---->y_max_89],"87	x_max = X[:,0].max() + .5
88	y_min = X[:,1].min() - .5
89	y_max = X[:,1].max() + .5
90	xx, yy = np.meshgrid(
",DATA_TRANSFORM
1282,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[xx_44 -----xx---->Z_51],"49	
50	# Put the result into a color plot
51	Z = Z.reshape(xx.shape)
52	plt.figure(1, figsize=(6, 4))
",MODEL_EVALUATION
1283,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[xx_44 -----xx---->plt_54],"52	plt.figure(1, figsize=(6, 4))
53	plt.set_cmap(plt.cm.Paired)
54	plt.pcolormesh(xx, yy, Z)
55	
",MODEL_EVALUATION
1284,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[xx_44 -----reassign---->xx_90],"88	y_min = X[:,1].min() - .5
89	y_max = X[:,1].max() + .5
90	xx, yy = np.meshgrid(
91	    np.arange(x_min, x_max, h),
",MODEL_EVALUATION
1285,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[yy_44 -----yy---->plt_54],"52	plt.figure(1, figsize=(6, 4))
53	plt.set_cmap(plt.cm.Paired)
54	plt.pcolormesh(xx, yy, Z)
55	
",EDA
1286,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[yy_44 -----reassign---->yy_90],"88	y_min = X[:,1].min() - .5
89	y_max = X[:,1].max() + .5
90	xx, yy = np.meshgrid(
91	    np.arange(x_min, x_max, h),
",EDA
1287,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[Z_48 -----reshape---->Z_51],"49	
50	# Put the result into a color plot
51	Z = Z.reshape(xx.shape)
52	plt.figure(1, figsize=(6, 4))
",MODEL_EVALUATION
1288,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[Z_51 -----z---->plt_54],"52	plt.figure(1, figsize=(6, 4))
53	plt.set_cmap(plt.cm.Paired)
54	plt.pcolormesh(xx, yy, Z)
55	
",MODEL_EVALUATION
1289,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[Z_51 -----reassign---->Z_94],"92	    np.arange(y_min, y_max, h)
93	)
94	Z = neighbors.predict(np.c_[xx.ravel(), yy.ravel()])
95	
",MODEL_EVALUATION
1290,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----figure---->plt_52],"50	# Put the result into a color plot
51	Z = Z.reshape(xx.shape)
52	plt.figure(1, figsize=(6, 4))
53	plt.set_cmap(plt.cm.Paired)
",EDA
1291,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----set cmap---->plt_53],"51	Z = Z.reshape(xx.shape)
52	plt.figure(1, figsize=(6, 4))
53	plt.set_cmap(plt.cm.Paired)
54	plt.pcolormesh(xx, yy, Z)
",EDA
1292,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----pcolormesh---->plt_54],"52	plt.figure(1, figsize=(6, 4))
53	plt.set_cmap(plt.cm.Paired)
54	plt.pcolormesh(xx, yy, Z)
55	
",MODEL_EVALUATION
1293,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----scatter---->plt_57],"55	
56	# Add the training points to the plot.
57	plt.scatter(X[:, 0], X[:, 1], c=Y)
58	plt.xlabel('Loudness')
",MODEL_EVALUATION
1294,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----xlabel---->plt_58],"56	# Add the training points to the plot.
57	plt.scatter(X[:, 0], X[:, 1], c=Y)
58	plt.xlabel('Loudness')
59	plt.ylabel('Duration')
",EDA
1295,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----ylabel---->plt_59],"57	plt.scatter(X[:, 0], X[:, 1], c=Y)
58	plt.xlabel('Loudness')
59	plt.ylabel('Duration')
60	
",EDA
1296,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----xlim---->plt_61],"59	plt.ylabel('Duration')
60	
61	plt.xlim(xx.min(), xx.max())
62	plt.ylim(yy.min(), yy.max())
",EDA
1297,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----ylim---->plt_62],"60	
61	plt.xlim(xx.min(), xx.max())
62	plt.ylim(yy.min(), yy.max())
63	
",EDA
1298,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----show---->plt_64],"62	plt.ylim(yy.min(), yy.max())
63	
64	plt.show()
65	
",EDA
1299,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----figure---->plt_98],"96	# Put the result into a color plot
97	Z = Z.reshape(xx.shape)
98	plt.figure(1, figsize=(6, 4))
99	plt.set_cmap(plt.cm.Paired)
",MODEL_EVALUATION
1300,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----set cmap---->plt_99],"97	Z = Z.reshape(xx.shape)
98	plt.figure(1, figsize=(6, 4))
99	plt.set_cmap(plt.cm.Paired)
100	plt.pcolormesh(xx, yy, Z)
",EDA
1301,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----pcolormesh---->plt_100],"98	plt.figure(1, figsize=(6, 4))
99	plt.set_cmap(plt.cm.Paired)
100	plt.pcolormesh(xx, yy, Z)
101	
",MODEL_EVALUATION
1302,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----scatter---->plt_103],"101	
102	# Add the training points to the plot.
103	plt.scatter(X[:, 0], X[:, 1], c=Y)
104	plt.xlabel('Loudness')
",MODEL_EVALUATION
1303,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----xlabel---->plt_104],"102	# Add the training points to the plot.
103	plt.scatter(X[:, 0], X[:, 1], c=Y)
104	plt.xlabel('Loudness')
105	plt.ylabel('Duration')
",EDA
1304,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----ylabel---->plt_105],"103	plt.scatter(X[:, 0], X[:, 1], c=Y)
104	plt.xlabel('Loudness')
105	plt.ylabel('Duration')
106	
",EDA
1305,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----xlim---->plt_107],"105	plt.ylabel('Duration')
106	
107	plt.xlim(xx.min(), xx.max())
108	plt.ylim(yy.min(), yy.max())
",EDA
1306,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----ylim---->plt_108],"106	
107	plt.xlim(xx.min(), xx.max())
108	plt.ylim(yy.min(), yy.max())
109	
",EDA
1307,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[matplotlib.pyplot -----show---->plt_110],"108	plt.ylim(yy.min(), yy.max())
109	
110	plt.show()
",MODEL_EVALUATION
1308,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[music_68 -----reassign---->music_69],"67	from sklearn.preprocessing import StandardScaler
68	music['loudness_scaled'] = StandardScaler().fit_transform(np.array(music.loudness).reshape(-1,1))
69	music['duration_scaled'] = StandardScaler().fit_transform(np.array(music.duration).reshape(-1,1))
70	
",DATA_TRANSFORM
1309,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[sklearn.preprocessing -----standard scaler---->music_68_intermediate_1],"y_max_89_intermediate_2 -----standard scaler---->y_max_89
y_max_89_intermediate_2 -----standard scaler---->y_max_89
y_max_89_intermediate_2 -----fit transform---->y_max_89",DATA_TRANSFORM
1310,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[sklearn.preprocessing -----standard scaler---->music_69_intermediate_1],"y_max_89_intermediate_2 -----standard scaler---->y_max_89
y_max_89_intermediate_2 -----standard scaler---->y_max_89
y_max_89_intermediate_2 -----fit transform---->y_max_89",DATA_TRANSFORM
1311,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[music_69 -----head---->music_71],"69	music['duration_scaled'] = StandardScaler().fit_transform(np.array(music.duration).reshape(-1,1))
70	
71	music.head()
72	
",EDA
1312,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[music_71 -----loc---->X_73],"71	music.head()
72	
73	X = music.loc[:, ['loudness_scaled','duration_scaled']]
74	
",DATA_TRANSFORM
1313,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[music_71 -----jazz---->Y_75],"73	X = music.loc[:, ['loudness_scaled','duration_scaled']]
74	
75	Y = music.jazz
76	neighbors.fit(X, Y)
",MODEL_TRAIN
1314,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[X_73 -----x---->neighbors_76],"74	
75	Y = music.jazz
76	neighbors.fit(X, Y)
77	
",MODEL_TRAIN
1315,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[X_73 -----x---->X_79],"77	
78	# Arrays, not data frames, for the mesh.
79	X = np.array(X)
80	Y = np.array(Y)
",MODEL_TRAIN
1316,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[Y_75 -----y---->neighbors_76],"74	
75	Y = music.jazz
76	neighbors.fit(X, Y)
77	
",MODEL_TRAIN
1317,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[Y_75 -----y---->Y_80],"78	# Arrays, not data frames, for the mesh.
79	X = np.array(X)
80	Y = np.array(Y)
81	
",DATA_TRANSFORM
1318,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[neighbors_76 -----predict---->Z_94],"92	    np.arange(y_min, y_max, h)
93	)
94	Z = neighbors.predict(np.c_[xx.ravel(), yy.ravel()])
95	
",MODEL_EVALUATION
1319,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,"[X_79 -----x[:,0]---->x_min_86_intermediate_1]","numpy -----array---->X_79
X_73 -----x---->X_79
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x---->y_max_89
y_max_89_intermediate_2 -----min---->y_max_89",MODEL_EVALUATION
1320,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,"[X_79 -----x[:,0]---->x_max_87_intermediate_1]","numpy -----array---->X_79
X_73 -----x---->X_79
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x---->y_max_89
y_max_89_intermediate_2 -----max---->y_max_89",MODEL_EVALUATION
1321,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,"[X_79 -----x[:,1]---->y_min_88_intermediate_1]","numpy -----array---->X_79
X_73 -----x---->X_79
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x---->y_max_89
y_max_89_intermediate_2 -----min---->y_max_89",MODEL_EVALUATION
1322,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,"[X_79 -----x[:,1]---->y_max_89_intermediate_1]","numpy -----array---->X_79
X_73 -----x---->X_79
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,0]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x[:,1]---->y_max_89
y_max_89_intermediate_2 -----x---->y_max_89
y_max_89_intermediate_2 -----max---->y_max_89",MODEL_EVALUATION
1323,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[X_79 -----x---->plt_103],"101	
102	# Add the training points to the plot.
103	plt.scatter(X[:, 0], X[:, 1], c=Y)
104	plt.xlabel('Loudness')
",MODEL_EVALUATION
1324,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[xx_90 -----xx---->Z_97],"95	
96	# Put the result into a color plot
97	Z = Z.reshape(xx.shape)
98	plt.figure(1, figsize=(6, 4))
",MODEL_EVALUATION
1325,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[xx_90 -----xx---->plt_100],"98	plt.figure(1, figsize=(6, 4))
99	plt.set_cmap(plt.cm.Paired)
100	plt.pcolormesh(xx, yy, Z)
101	
",MODEL_EVALUATION
1326,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[yy_90 -----yy---->plt_100],"98	plt.figure(1, figsize=(6, 4))
99	plt.set_cmap(plt.cm.Paired)
100	plt.pcolormesh(xx, yy, Z)
101	
",MODEL_EVALUATION
1327,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[Z_94 -----reshape---->Z_97],"95	
96	# Put the result into a color plot
97	Z = Z.reshape(xx.shape)
98	plt.figure(1, figsize=(6, 4))
",MODEL_EVALUATION
1328,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[Z_97 -----z---->plt_100],"98	plt.figure(1, figsize=(6, 4))
99	plt.set_cmap(plt.cm.Paired)
100	plt.pcolormesh(xx, yy, Z)
101	
",MODEL_EVALUATION
1329,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[x_min_40_intermediate_1 -----min---->x_min_40_intermediate_2],"X_33 -----x[:,0]---->x_min_40_intermediate_1
y_max_89_intermediate_2 -----min---->y_max_89
y_max_89_intermediate_2 -----sub---->y_max_89",MODEL_EVALUATION
1330,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[x_min_40_intermediate_2 -----sub---->x_min_40],"x_min_40_intermediate_1 -----min---->x_min_40_intermediate_2
y_max_89_intermediate_2 -----sub---->y_max_89
y_max_89_intermediate_2 -----reassign---->y_max_89",MODEL_EVALUATION
1331,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[x_max_41_intermediate_1 -----max---->x_max_41_intermediate_2],"X_33 -----x[:,0]---->x_max_41_intermediate_1
y_max_89_intermediate_2 -----max---->y_max_89
y_max_89_intermediate_2 -----add---->y_max_89",EDA
1332,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[x_max_41_intermediate_2 -----add---->x_max_41],"x_max_41_intermediate_1 -----max---->x_max_41_intermediate_2
y_max_89_intermediate_2 -----add---->y_max_89
y_max_89_intermediate_2 -----reassign---->y_max_89",EDA
1333,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[y_min_42_intermediate_1 -----min---->y_min_42_intermediate_2],"X_33 -----x[:,1]---->y_min_42_intermediate_1
y_max_89_intermediate_2 -----min---->y_max_89
y_max_89_intermediate_2 -----sub---->y_max_89",EDA
1334,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[y_min_42_intermediate_2 -----sub---->y_min_42],"y_min_42_intermediate_1 -----min---->y_min_42_intermediate_2
y_max_89_intermediate_2 -----sub---->y_max_89
y_max_89_intermediate_2 -----reassign---->y_max_89",MODEL_EVALUATION
1335,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[y_max_43_intermediate_1 -----max---->y_max_43_intermediate_2],"X_33 -----x[:,1]---->y_max_43_intermediate_1
y_max_89_intermediate_2 -----max---->y_max_89
y_max_89_intermediate_2 -----add---->y_max_89",MODEL_EVALUATION
1336,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[y_max_43_intermediate_2 -----add---->y_max_43],"y_max_43_intermediate_1 -----max---->y_max_43_intermediate_2
y_max_89_intermediate_2 -----add---->y_max_89
y_max_89_intermediate_2 -----reassign---->y_max_89",MODEL_EVALUATION
1337,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[music_68_intermediate_1 -----fit transform---->music_68],"sklearn.preprocessing -----standard scaler---->music_68_intermediate_1
y_max_89_intermediate_2 -----fit transform---->y_max_89
y_max_89_intermediate_2 -----reassign---->y_max_89",MODEL_TRAIN
1338,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[music_69_intermediate_1 -----fit transform---->music_69],"sklearn.preprocessing -----standard scaler---->music_69_intermediate_1
y_max_89_intermediate_2 -----fit transform---->y_max_89
y_max_89_intermediate_2 -----head---->y_max_89",MODEL_TRAIN
1339,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[x_min_86_intermediate_1 -----min---->x_min_86_intermediate_2],"X_79 -----x[:,0]---->x_min_86_intermediate_1
y_max_89_intermediate_2 -----min---->y_max_89
y_max_89_intermediate_2 -----sub---->y_max_89",MODEL_EVALUATION
1340,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[x_min_86_intermediate_2 -----sub---->x_min_86],"x_min_86_intermediate_1 -----min---->x_min_86_intermediate_2
y_max_89_intermediate_2 -----sub---->y_max_89",MODEL_EVALUATION
1341,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[x_max_87_intermediate_1 -----max---->x_max_87_intermediate_2],"X_79 -----x[:,0]---->x_max_87_intermediate_1
y_max_89_intermediate_2 -----max---->y_max_89
y_max_89_intermediate_2 -----add---->y_max_89",MODEL_EVALUATION
1342,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[x_max_87_intermediate_2 -----add---->x_max_87],"x_max_87_intermediate_1 -----max---->x_max_87_intermediate_2
y_max_89_intermediate_2 -----add---->y_max_89",MODEL_EVALUATION
1343,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[y_min_88_intermediate_1 -----min---->y_min_88_intermediate_2],"X_79 -----x[:,1]---->y_min_88_intermediate_1
y_max_89_intermediate_2 -----min---->y_max_89
y_max_89_intermediate_2 -----sub---->y_max_89",MODEL_EVALUATION
1344,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[y_min_88_intermediate_2 -----sub---->y_min_88],"y_min_88_intermediate_1 -----min---->y_min_88_intermediate_2
y_max_89_intermediate_2 -----sub---->y_max_89",MODEL_EVALUATION
1345,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[y_max_89_intermediate_1 -----max---->y_max_89_intermediate_2],"X_79 -----x[:,1]---->y_max_89_intermediate_1
y_max_89_intermediate_2 -----max---->y_max_89
y_max_89_intermediate_2 -----add---->y_max_89",MODEL_EVALUATION
1346,00006d36916ab0daa7e76de269b72f50f313fe5e.execution_graph,[y_max_89_intermediate_2 -----add---->y_max_89],"y_max_89_intermediate_1 -----max---->y_max_89_intermediate_2
y_max_89_intermediate_2 -----add---->y_max_89",MODEL_EVALUATION
1347,000075bf5314ae98c374ed5d8f49256d898211a6.execution_graph,[df_4 -----select---->empresa_aDATA_5],"3	from scipy.stats import f
4	df = pd.read_csv(""quiz_2_arqPython.csv"")
5	empresa_aDATA = df['empresa_a']
6	empresa_bDATA = df['empresa_b']
",DATA_TRANSFORM
1348,000075bf5314ae98c374ed5d8f49256d898211a6.execution_graph,[df_4 -----select---->empresa_bDATA_6],"4	df = pd.read_csv(""quiz_2_arqPython.csv"")
5	empresa_aDATA = df['empresa_a']
6	empresa_bDATA = df['empresa_b']
7	
",DATA_TRANSFORM
1349,000075bf5314ae98c374ed5d8f49256d898211a6.execution_graph,[pandas -----read csv---->df_4],"2	import pandas as pd
3	from scipy.stats import f
4	df = pd.read_csv(""quiz_2_arqPython.csv"")
5	empresa_aDATA = df['empresa_a']
",DATA_IMPORT_EXTRACTION
1350,000075bf5314ae98c374ed5d8f49256d898211a6.execution_graph,[IPython.display -----image---->Image_12],"10	
11	
12	Image(filename='M1.png')
",EDA
1351,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16ta_9 -----loop---->hu16ta_22_intermediate_1],"loop_hu16ta_9_hu16ta_22 -----restart_loop---->hu16ta_9
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----float---->y_70",MODEL_TRAIN
1352,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16te_10 -----loop---->hu16te_23_intermediate_1],"loop_hu16te_10_hu16te_23 -----restart_loop---->hu16te_10
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----float---->y_70",DATA_TRANSFORM
1353,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16va_11 -----loop---->hu16va_19_intermediate_1],"loop_hu16va_11_hu16va_19 -----restart_loop---->hu16va_11
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----float---->y_70",MODEL_EVALUATION
1354,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16ve_12 -----loop---->hu16ve_20_intermediate_1],"loop_hu16ve_12_hu16ve_20 -----restart_loop---->hu16ve_12
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----float---->y_70",DATA_IMPORT_EXTRACTION
1355,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[counter_13 -----loop---->counter_24_intermediate_1],"loop_counter_13_counter_24 -----restart_loop---->counter_13
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----add---->y_70",DATA_IMPORT_EXTRACTION
1356,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16va_19 -----end_loop---->loop_hu16va_11_hu16va_19],"
",MODEL_EVALUATION
1357,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16ve_20 -----end_loop---->loop_hu16ve_12_hu16ve_20],"
",MODEL_TRAIN
1358,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16ta_22 -----end_loop---->loop_hu16ta_9_hu16ta_22],"
",MODEL_EVALUATION
1359,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16te_23 -----end_loop---->loop_hu16te_10_hu16te_23],"
",MODEL_EVALUATION
1360,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[counter_24 -----end_loop---->loop_counter_13_counter_24],"
",MODEL_TRAIN
1361,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[line_16 -----split---->tokens_17],"15	    for line in myfile:
16	        line=line.strip()
17	        tokens=line.split()
18	        if len(tokens)==2:
",DATA_TRANSFORM
1362,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[tokens_17 -----tokens---->hu16va_19],"17	        tokens=line.split()
18	        if len(tokens)==2:
19	            hu16va[counter]=float(tokens[1].split(""="")[1])
20	            hu16ve[counter]=float(tokens[0].split(""="")[1])
",MODEL_EVALUATION
1363,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[tokens_17 -----tokens---->hu16ve_20],"18	        if len(tokens)==2:
19	            hu16va[counter]=float(tokens[1].split(""="")[1])
20	            hu16ve[counter]=float(tokens[0].split(""="")[1])
21	        else:
",MODEL_EVALUATION
1364,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[tokens_17 -----tokens---->hu16ta_22],"20	            hu16ve[counter]=float(tokens[0].split(""="")[1])
21	        else:
22	            hu16ta[int(tokens[3].replace("":"",""""))]=float(tokens[5].split(""="")[1])
23	            hu16te[int(tokens[3].replace("":"",""""))]=float(tokens[4].split(""="")[1])
",MISSING
1365,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[tokens_17 -----tokens---->hu16te_23],"21	        else:
22	            hu16ta[int(tokens[3].replace("":"",""""))]=float(tokens[5].split(""="")[1])
23	            hu16te[int(tokens[3].replace("":"",""""))]=float(tokens[4].split(""="")[1])
24	            counter+=1
",MISSING
1366,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_hu16va_11_hu16va_19 -----restart_loop---->hu16va_11],"
",MISSING
1367,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_hu16va_11_hu16va_19 -----hu16va---->y_34],"32	    x.append(i)   
33	for i in x:
34	    y.append(hu16va[i])
35	ax_1.plot(x, y,label=""Validation"")
",MISSING
1368,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_hu16ve_12_hu16ve_20 -----restart_loop---->hu16ve_12],"
",MISSING
1369,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_hu16ve_12_hu16ve_20 -----hu16ve---->y_62],"60	    x.append(i)   
61	for i in x:
62	    y.append(hu16ve[i])
63	ax_1.plot(x, y,label=""Validation"")
",MISSING
1370,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_hu16ta_9_hu16ta_22 -----restart_loop---->hu16ta_9],"
",MISSING
1371,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_hu16ta_9_hu16ta_22 -----hu16ta---->y_42],"40	    x.append(i)   
41	for i in x:
42	    y.append(hu16ta[i])
43	ax_1.plot(x, y,label=""Training"")
",MISSING
1372,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_hu16te_10_hu16te_23 -----restart_loop---->hu16te_10],"
",MISSING
1373,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_hu16te_10_hu16te_23 -----hu16te---->y_70],"68	    x.append(i)   
69	for i in x:
70	    y.append(hu16te[i])
71	ax_1.plot(x, y,label=""Training"")
",MISSING
1374,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_counter_13_counter_24 -----restart_loop---->counter_13],"
",MISSING
1375,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[fig_1_27 -----add subplot---->ax_1_28],"26	
27	fig_1 = plt.figure(figsize=(8, 4))
28	ax_1 = fig_1.add_subplot(111)
29	x=[]
",MISSING
1376,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[fig_1_27 -----savefig---->fig_1_52],"50	ax_1.set_ylabel(""Accuracy"")
51	plt.title(""Validation Accuracy"")
52	fig_1.savefig(""Validation Accuracy"", dpi=200) 
53	
",MISSING
1377,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[matplotlib.pyplot -----figure---->fig_1_27],"25	        
26	
27	fig_1 = plt.figure(figsize=(8, 4))
28	ax_1 = fig_1.add_subplot(111)
",MISSING
1378,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[matplotlib.pyplot -----title---->plt_51],"49	ax_1.set_xlabel('Epoch number')
50	ax_1.set_ylabel(""Accuracy"")
51	plt.title(""Validation Accuracy"")
52	fig_1.savefig(""Validation Accuracy"", dpi=200) 
",MISSING
1379,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[matplotlib.pyplot -----figure---->fig_1_54],"52	fig_1.savefig(""Validation Accuracy"", dpi=200) 
53	
54	fig_1 = plt.figure(figsize=(8, 4))
55	ax_1 = fig_1.add_subplot(111)
",MISSING
1380,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[matplotlib.pyplot -----title---->plt_78],"76	ax_1.set_xlabel('Epoch number')
77	ax_1.set_ylabel(""Error"")
78	plt.title(""Validation Error"")
79	fig_1.savefig(""Validation Error"", dpi=200) 
",MISSING
1381,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[ax_1_28 -----plot---->ax_1_35],"33	for i in x:
34	    y.append(hu16va[i])
35	ax_1.plot(x, y,label=""Validation"")
36	
",MISSING
1382,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_29 -----loop---->x_32_intermediate_1],"loop_x_29_x_32 -----restart_loop---->x_29
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----append---->y_70",MISSING
1383,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_30 -----loop---->y_34_intermediate_1],"loop_y_30_y_34 -----restart_loop---->y_30
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----append---->y_70",MODEL_EVALUATION
1384,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_32 -----end_loop---->loop_x_29_x_32],"
",MISSING
1385,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_x_29_x_32 -----restart_loop---->x_29],"
",MISSING
1386,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_x_29_x_32 -----x---->ax_1_35],"33	for i in x:
34	    y.append(hu16va[i])
35	ax_1.plot(x, y,label=""Validation"")
36	
",MISSING
1387,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_x_29_x_32 -----reassign---->x_37],"35	ax_1.plot(x, y,label=""Validation"")
36	
37	x=[]
38	y=[]
",MISSING
1388,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_34 -----end_loop---->loop_y_30_y_34],"
",MISSING
1389,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_y_30_y_34 -----restart_loop---->y_30],"
",MISSING
1390,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_y_30_y_34 -----y---->ax_1_35],"33	for i in x:
34	    y.append(hu16va[i])
35	ax_1.plot(x, y,label=""Validation"")
36	
",MISSING
1391,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_y_30_y_34 -----reassign---->y_38],"36	
37	x=[]
38	y=[]
39	for i in sorted(hu16ta.keys()):
",MISSING
1392,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[ax_1_35 -----plot---->ax_1_43],"41	for i in x:
42	    y.append(hu16ta[i])
43	ax_1.plot(x, y,label=""Training"")
44	
",MISSING
1393,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_37 -----loop---->x_40_intermediate_1],"loop_x_29_x_32 -----reassign---->x_37
loop_x_37_x_40 -----restart_loop---->x_37
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----append---->y_70",MISSING
1394,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_38 -----loop---->y_42_intermediate_1],"loop_y_30_y_34 -----reassign---->y_38
loop_y_38_y_42 -----restart_loop---->y_38
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----append---->y_70",DATA_IMPORT_EXTRACTION
1395,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_40 -----end_loop---->loop_x_37_x_40],"
",EDA
1396,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_x_37_x_40 -----restart_loop---->x_37],"
",MISSING
1397,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_x_37_x_40 -----x---->ax_1_43],"41	for i in x:
42	    y.append(hu16ta[i])
43	ax_1.plot(x, y,label=""Training"")
44	
",MISSING
1398,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_x_37_x_40 -----reassign---->x_57],"55	ax_1 = fig_1.add_subplot(111)
56	
57	x=[]
58	y=[]
",MISSING
1399,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_42 -----end_loop---->loop_y_38_y_42],"
",MISSING
1400,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_y_38_y_42 -----restart_loop---->y_38],"
",MISSING
1401,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_y_38_y_42 -----y---->ax_1_43],"41	for i in x:
42	    y.append(hu16ta[i])
43	ax_1.plot(x, y,label=""Training"")
44	
",MISSING
1402,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_y_38_y_42 -----reassign---->y_58],"56	
57	x=[]
58	y=[]
59	for i in sorted(hu16ve.keys()):
",MISSING
1403,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[ax_1_43 -----legend---->ax_1_48],"46	
47	#ax_1.plot(temp.keys(), temp.values(), 'r',label=x2_label)
48	ax_1.legend(loc=0)
49	ax_1.set_xlabel('Epoch number')
",MISSING
1404,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[ax_1_48 -----set xlabel---->ax_1_49],"47	#ax_1.plot(temp.keys(), temp.values(), 'r',label=x2_label)
48	ax_1.legend(loc=0)
49	ax_1.set_xlabel('Epoch number')
50	ax_1.set_ylabel(""Accuracy"")
",MISSING
1405,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[ax_1_49 -----set ylabel---->ax_1_50],"48	ax_1.legend(loc=0)
49	ax_1.set_xlabel('Epoch number')
50	ax_1.set_ylabel(""Accuracy"")
51	plt.title(""Validation Accuracy"")
",MISSING
1406,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[ax_1_50 -----reassign---->ax_1_55],"53	
54	fig_1 = plt.figure(figsize=(8, 4))
55	ax_1 = fig_1.add_subplot(111)
56	
",MISSING
1407,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[fig_1_52 -----reassign---->fig_1_54],"52	fig_1.savefig(""Validation Accuracy"", dpi=200) 
53	
54	fig_1 = plt.figure(figsize=(8, 4))
55	ax_1 = fig_1.add_subplot(111)
",MISSING
1408,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[fig_1_54 -----add subplot---->ax_1_55],"53	
54	fig_1 = plt.figure(figsize=(8, 4))
55	ax_1 = fig_1.add_subplot(111)
56	
",MISSING
1409,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[fig_1_54 -----savefig---->fig_1_79],"77	ax_1.set_ylabel(""Error"")
78	plt.title(""Validation Error"")
79	fig_1.savefig(""Validation Error"", dpi=200) 
80	
",MISSING
1410,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[ax_1_55 -----plot---->ax_1_63],"61	for i in x:
62	    y.append(hu16ve[i])
63	ax_1.plot(x, y,label=""Validation"")
64	
",MISSING
1411,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_57 -----loop---->x_60_intermediate_1],"loop_x_37_x_40 -----reassign---->x_57
loop_x_57_x_60 -----restart_loop---->x_57
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----append---->y_70",MISSING
1412,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_58 -----loop---->y_62_intermediate_1],"loop_y_38_y_42 -----reassign---->y_58
loop_y_58_y_62 -----restart_loop---->y_58
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----append---->y_70",MISSING
1413,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_60 -----end_loop---->loop_x_57_x_60],"
",MISSING
1414,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_x_57_x_60 -----restart_loop---->x_57],"
",MISSING
1415,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_x_57_x_60 -----x---->ax_1_63],"61	for i in x:
62	    y.append(hu16ve[i])
63	ax_1.plot(x, y,label=""Validation"")
64	
",MISSING
1416,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_x_57_x_60 -----reassign---->x_65],"63	ax_1.plot(x, y,label=""Validation"")
64	
65	x=[]
66	y=[]
",MISSING
1417,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_62 -----end_loop---->loop_y_58_y_62],"
",MISSING
1418,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_y_58_y_62 -----restart_loop---->y_58],"
",MISSING
1419,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_y_58_y_62 -----y---->ax_1_63],"61	for i in x:
62	    y.append(hu16ve[i])
63	ax_1.plot(x, y,label=""Validation"")
64	
",MISSING
1420,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_y_58_y_62 -----reassign---->y_66],"64	
65	x=[]
66	y=[]
67	for i in sorted(hu16te.keys()):
",MISSING
1421,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[ax_1_63 -----plot---->ax_1_71],"69	for i in x:
70	    y.append(hu16te[i])
71	ax_1.plot(x, y,label=""Training"")
72	
",MISSING
1422,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_65 -----loop---->x_68_intermediate_1],"loop_x_57_x_60 -----reassign---->x_65
loop_x_65_x_68 -----restart_loop---->x_65
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----append---->y_70",MISSING
1423,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_66 -----loop---->y_70_intermediate_1],"loop_y_58_y_62 -----reassign---->y_66
loop_y_66_y_70 -----restart_loop---->y_66
y_70_intermediate_1 -----loop---->y_70
y_70_intermediate_1 -----append---->y_70",MISSING
1424,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_68 -----end_loop---->loop_x_65_x_68],"
",MISSING
1425,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_x_65_x_68 -----restart_loop---->x_65],"
",MISSING
1426,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_x_65_x_68 -----x---->ax_1_71],"69	for i in x:
70	    y.append(hu16te[i])
71	ax_1.plot(x, y,label=""Training"")
72	
",MISSING
1427,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_70 -----end_loop---->loop_y_66_y_70],"
",MISSING
1428,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_y_66_y_70 -----restart_loop---->y_66],"
",MISSING
1429,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[loop_y_66_y_70 -----y---->ax_1_71],"69	for i in x:
70	    y.append(hu16te[i])
71	ax_1.plot(x, y,label=""Training"")
72	
",MISSING
1430,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[ax_1_71 -----legend---->ax_1_75],"73	
74	#ax_1.plot(temp.keys(), temp.values(), 'r',label=x2_label)
75	ax_1.legend(loc=0)
76	ax_1.set_xlabel('Epoch number')
",MISSING
1431,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[ax_1_75 -----set xlabel---->ax_1_76],"74	#ax_1.plot(temp.keys(), temp.values(), 'r',label=x2_label)
75	ax_1.legend(loc=0)
76	ax_1.set_xlabel('Epoch number')
77	ax_1.set_ylabel(""Error"")
",MISSING
1432,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[ax_1_76 -----set ylabel---->ax_1_77],"75	ax_1.legend(loc=0)
76	ax_1.set_xlabel('Epoch number')
77	ax_1.set_ylabel(""Error"")
78	plt.title(""Validation Error"")
",MISSING
1433,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16ta_22_intermediate_1 -----float---->hu16ta_22],"hu16ta_9 -----loop---->hu16ta_22_intermediate_1
y_70_intermediate_1 -----float---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1434,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16te_23_intermediate_1 -----float---->hu16te_23],"hu16te_10 -----loop---->hu16te_23_intermediate_1
y_70_intermediate_1 -----float---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1435,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16va_19_intermediate_1 -----float---->hu16va_19],"hu16va_11 -----loop---->hu16va_19_intermediate_1
y_70_intermediate_1 -----float---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1436,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[hu16ve_20_intermediate_1 -----float---->hu16ve_20],"hu16ve_12 -----loop---->hu16ve_20_intermediate_1
y_70_intermediate_1 -----float---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1437,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[counter_24_intermediate_1 -----add---->counter_24],"counter_13 -----loop---->counter_24_intermediate_1
y_70_intermediate_1 -----add---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1438,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_32_intermediate_1 -----append---->x_32],"x_29 -----loop---->x_32_intermediate_1
y_70_intermediate_1 -----append---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1439,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_34_intermediate_1 -----append---->y_34],"y_30 -----loop---->y_34_intermediate_1
y_70_intermediate_1 -----append---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1440,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_40_intermediate_1 -----append---->x_40],"x_37 -----loop---->x_40_intermediate_1
y_70_intermediate_1 -----append---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1441,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_42_intermediate_1 -----append---->y_42],"y_38 -----loop---->y_42_intermediate_1
y_70_intermediate_1 -----append---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1442,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_60_intermediate_1 -----append---->x_60],"x_57 -----loop---->x_60_intermediate_1
y_70_intermediate_1 -----append---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1443,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_62_intermediate_1 -----append---->y_62],"y_58 -----loop---->y_62_intermediate_1
y_70_intermediate_1 -----append---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1444,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[x_68_intermediate_1 -----append---->x_68],"x_65 -----loop---->x_68_intermediate_1
y_70_intermediate_1 -----append---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1445,00008d3938b0b21cfa127f6d5e976dcd48368093.execution_graph,[y_70_intermediate_1 -----append---->y_70],"y_66 -----loop---->y_70_intermediate_1
y_70_intermediate_1 -----append---->y_70
y_70_intermediate_1 -----end_loop---->y_70",MISSING
1446,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_13 -----auto---->features_16],"14	
15	target = 'mpg'
16	features = list(auto.columns)
17	features.remove('mpg')
",DATA_TRANSFORM
1447,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_13 -----auto[features]---->x_20],"18	
19	# Separación de la variable objetivo y las explicativas
20	x = auto[features]
21	y = auto[target]
",MISSING
1448,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_13 -----auto[target]---->y_21],"19	# Separación de la variable objetivo y las explicativas
20	x = auto[features]
21	y = auto[target]
22	
",MISSING
1449,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_13 -----auto---->scatter_matrix_29],"27	from pandas.plotting import scatter_matrix
28	
29	scatter_matrix(auto, figsize = (12, 12), diagonal = 'kde');
30	
",MISSING
1450,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_13 -----auto---->plt_32],"30	
31	for var in features:
32	    plt.hist(auto[var])
33	    plt.title(var)
",MISSING
1451,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_13 -----auto[features]---->auto_36_intermediate_1],"pandas -----read csv---->auto_13
auto_36_intermediate_1 -----auto---->auto_36
auto_36_intermediate_1 -----auto[features]---->auto_36
auto_36_intermediate_1 -----auto[target]---->auto_36
auto_36_intermediate_1 -----auto---->auto_36
auto_36_intermediate_1 -----auto---->auto_36
auto_36_intermediate_1 -----auto[features]---->auto_36
auto_36_intermediate_1 -----head---->auto_36",MISSING
1452,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[pandas -----read csv---->auto_13],"11	#os.chdir(pwd)
12	
13	auto = pd.read_csv('auto.csv', sep = ',')
14	
",MISSING
1453,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[pandas -----get dummies---->dummie_50],"48	
49	for column in ['cylinders', 'origin']:
50	    dummie = pd.get_dummies(auto[column], prefix = column)
51	    names = list(dummie.columns)
",MISSING
1454,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[pandas -----concat---->auto_53],"51	    names = list(dummie.columns)
52	    names.remove(names[0])
53	    auto = pd.concat([auto, dummie[names]], axis = 1)
54	    names = list(auto.columns)
",MISSING
1455,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[target_15 -----auto[target]---->y_21],"19	# Separación de la variable objetivo y las explicativas
20	x = auto[features]
21	y = auto[target]
22	
",MISSING
1456,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[target_15 -----reassign---->target_101],"99	
100	#calculateVIF(data_model)
101	target = 'mpg'
102	features = list(auto.columns)
",MISSING
1457,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[features_16 -----remove---->features_17],"15	target = 'mpg'
16	features = list(auto.columns)
17	features.remove('mpg')
18	
",MISSING
1458,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[features_17 -----auto[features]---->x_20],"18	
19	# Separación de la variable objetivo y las explicativas
20	x = auto[features]
21	y = auto[target]
",MISSING
1459,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[features_17 -----auto[features]---->auto_36],"34	    plt.show()
35	
36	auto[features].head()
37	
",MISSING
1460,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[features_17 -----list---->features_102],"100	#calculateVIF(data_model)
101	target = 'mpg'
102	features = list(auto.columns)
103	features.remove(target)
",MISSING
1461,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[pandas.plotting -----scatter matrix---->scatter_matrix_29],"27	from pandas.plotting import scatter_matrix
28	
29	scatter_matrix(auto, figsize = (12, 12), diagonal = 'kde');
30	
",MISSING
1462,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[plt_32 -----title---->plt_33],"31	for var in features:
32	    plt.hist(auto[var])
33	    plt.title(var)
34	    plt.show()
",MISSING
1463,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[plt_33 -----show---->plt_34],"32	    plt.hist(auto[var])
33	    plt.title(var)
34	    plt.show()
35	
",MISSING
1464,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_36 -----loop---->auto_53],"
",DATA_TRANSFORM
1465,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_36 -----auto---->dummie_50],"48	
49	for column in ['cylinders', 'origin']:
50	    dummie = pd.get_dummies(auto[column], prefix = column)
51	    names = list(dummie.columns)
",MISSING
1466,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_53 -----auto---->names_54],"52	    names.remove(names[0])
53	    auto = pd.concat([auto, dummie[names]], axis = 1)
54	    names = list(auto.columns)
55	    names.remove(column)
",MISSING
1467,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_53 -----auto[names]---->auto_56],"54	    names = list(auto.columns)
55	    names.remove(column)
56	    auto = auto[names]
57	
",MISSING
1468,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[dummie_50 -----dummie---->names_51],"49	for column in ['cylinders', 'origin']:
50	    dummie = pd.get_dummies(auto[column], prefix = column)
51	    names = list(dummie.columns)
52	    names.remove(names[0])
",MISSING
1469,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[names_51 -----remove---->names_52],"50	    dummie = pd.get_dummies(auto[column], prefix = column)
51	    names = list(dummie.columns)
52	    names.remove(names[0])
53	    auto = pd.concat([auto, dummie[names]], axis = 1)
",MISSING
1470,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[names_52 -----list---->names_54],"52	    names.remove(names[0])
53	    auto = pd.concat([auto, dummie[names]], axis = 1)
54	    names = list(auto.columns)
55	    names.remove(column)
",MISSING
1471,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[names_54 -----remove---->names_55],"53	    auto = pd.concat([auto, dummie[names]], axis = 1)
54	    names = list(auto.columns)
55	    names.remove(column)
56	    auto = auto[names]
",MISSING
1472,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[names_55 -----auto[names]---->auto_56],"54	    names = list(auto.columns)
55	    names.remove(column)
56	    auto = auto[names]
57	
",MISSING
1473,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_56 -----end_loop---->loop_auto_36_auto_56],"
",MISSING
1474,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[loop_auto_36_auto_56 -----restart_loop---->auto_36],"
",MISSING
1475,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[loop_auto_36_auto_56 -----describe---->auto_58],"56	    auto = auto[names]
57	
58	auto.describe()
59	
",MISSING
1476,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_58 -----auto---->features_102],"100	#calculateVIF(data_model)
101	target = 'mpg'
102	features = list(auto.columns)
103	features.remove(target)
",MISSING
1477,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_58 -----auto---->calculateVIF_105],"103	features.remove(target)
104	
105	calculateVIF(auto[features])
106	
",MISSING
1478,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_58 -----auto---->model_vars_107],"105	calculateVIF(auto[features])
106	
107	model_vars = selectDataUsingVIF(auto[features])
108	calculateVIF(model_vars)
",MISSING
1479,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_58 -----auto---->x_train_114],"112	features = list(model_vars.columns)
113	
114	x_train, x_test, y_train, y_test = train_test_split(auto[features], auto[target])
115	
",MISSING
1480,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_58 -----auto---->x_test_114],"112	features = list(model_vars.columns)
113	
114	x_train, x_test, y_train, y_test = train_test_split(auto[features], auto[target])
115	
",MISSING
1481,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_58 -----auto---->y_train_114],"112	features = list(model_vars.columns)
113	
114	x_train, x_test, y_train, y_test = train_test_split(auto[features], auto[target])
115	
",MISSING
1482,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_58 -----auto---->y_test_114],"112	features = list(model_vars.columns)
113	
114	x_train, x_test, y_train, y_test = train_test_split(auto[features], auto[target])
115	
",MODEL_EVALUATION
1483,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[target_101 -----target---->features_103],"101	target = 'mpg'
102	features = list(auto.columns)
103	features.remove(target)
104	
",MISSING
1484,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[features_102 -----remove---->features_103],"101	target = 'mpg'
102	features = list(auto.columns)
103	features.remove(target)
104	
",MISSING
1485,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[features_103 -----list---->features_112],"110	from sklearn.model_selection import train_test_split
111	
112	features = list(model_vars.columns)
113	
",MISSING
1486,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[calculateVIF_105 -----calculate vif---->calculateVIF_108],"106	
107	model_vars = selectDataUsingVIF(auto[features])
108	calculateVIF(model_vars)
109	
",MISSING
1487,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[model_vars_107 -----model vars---->calculateVIF_108],"106	
107	model_vars = selectDataUsingVIF(auto[features])
108	calculateVIF(model_vars)
109	
",MISSING
1488,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[model_vars_107 -----model vars---->features_112],"110	from sklearn.model_selection import train_test_split
111	
112	features = list(model_vars.columns)
113	
",MISSING
1489,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[x_train_114 -----x train---->model_ridge_153],"151	
152	model_ridge = Ridge(alpha = 0.1)
153	model_ridge.fit(x_train, y_train)
154	
",MISSING
1490,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[x_train_114 -----x train---->model_ridge_155],"153	model_ridge.fit(x_train, y_train)
154	
155	model_ridge.score(x_train, y_train)
156	
",MISSING
1491,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[sklearn.model_selection -----train test split---->x_train_114],"112	features = list(model_vars.columns)
113	
114	x_train, x_test, y_train, y_test = train_test_split(auto[features], auto[target])
115	
",MISSING
1492,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[sklearn.model_selection -----train test split---->x_test_114],"112	features = list(model_vars.columns)
113	
114	x_train, x_test, y_train, y_test = train_test_split(auto[features], auto[target])
115	
",MISSING
1493,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[sklearn.model_selection -----train test split---->y_train_114],"112	features = list(model_vars.columns)
113	
114	x_train, x_test, y_train, y_test = train_test_split(auto[features], auto[target])
115	
",MISSING
1494,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[sklearn.model_selection -----train test split---->y_test_114],"112	features = list(model_vars.columns)
113	
114	x_train, x_test, y_train, y_test = train_test_split(auto[features], auto[target])
115	
",MISSING
1495,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[y_train_114 -----y train---->model_ridge_153],"151	
152	model_ridge = Ridge(alpha = 0.1)
153	model_ridge.fit(x_train, y_train)
154	
",MISSING
1496,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[y_train_114 -----y train---->model_ridge_155],"153	model_ridge.fit(x_train, y_train)
154	
155	model_ridge.score(x_train, y_train)
156	
",MISSING
1497,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[y_test_114 -----y test---->metricas_modelos_157],"155	model_ridge.score(x_train, y_train)
156	
157	metricas_modelos(y_test, y_pred_test)
",MISSING
1498,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[model_ridge_152 -----fit---->model_ridge_153],"151	
152	model_ridge = Ridge(alpha = 0.1)
153	model_ridge.fit(x_train, y_train)
154	
",MISSING
1499,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[sklearn.linear_model -----ridge---->model_ridge_152],"150	from sklearn.linear_model import Ridge
151	
152	model_ridge = Ridge(alpha = 0.1)
153	model_ridge.fit(x_train, y_train)
",MISSING
1500,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[model_ridge_153 -----score---->model_ridge_155],"153	model_ridge.fit(x_train, y_train)
154	
155	model_ridge.score(x_train, y_train)
156	
",MISSING
1501,00009170d2416ef257cc9e6b3bd6bd03f4ce9dbd.execution_graph,[auto_36_intermediate_1 -----head---->auto_36],"auto_13 -----auto[features]---->auto_36_intermediate_1
auto_36_intermediate_1 -----head---->auto_36
auto_36_intermediate_1 -----loop---->auto_36
auto_36_intermediate_1 -----auto---->auto_36",MISSING
1502,000091ebac6953ae56345a8c0e5f303c1c591317.execution_graph,[dictionarTags_5 -----loop---->dictionarTags_40],"
",MISSING
1503,000091ebac6953ae56345a8c0e5f303c1c591317.execution_graph,[fileNames_29 -----list---->fileNames_89],"87	
88	
89	fileNames = list(input(""please enter comma seperated file name: eg; file1.txt,file2.txt \n"").split(','))
90	#print(fileNames)
",MISSING
1504,000091ebac6953ae56345a8c0e5f303c1c591317.execution_graph,[dictionarTags_40 -----end_loop---->loop_dictionarTags_5_dictionarTags_40],"
",DATA_TRANSFORM
1505,000091ebac6953ae56345a8c0e5f303c1c591317.execution_graph,[parser_33 -----feed---->parser_38],"36	        #print(type(data))
37	        print(""Tags Parsing of file {} :"".format(fileName))
38	        parser.feed(data)
39	        parser.display() 
",MISSING
1506,000091ebac6953ae56345a8c0e5f303c1c591317.execution_graph,[MyHTMLParser -----my htmlparser---->parser_33],"31	for fileName in fileNames:
32	    if os.path.isfile(fileName) is True:
33	        parser = MyHTMLParser()
34	        f = open(fileName, 'r')
",MISSING
1507,000091ebac6953ae56345a8c0e5f303c1c591317.execution_graph,[f_34 -----read---->data_35],"33	        parser = MyHTMLParser()
34	        f = open(fileName, 'r')
35	        data = f.read()
36	        #print(type(data))
",MISSING
1508,000091ebac6953ae56345a8c0e5f303c1c591317.execution_graph,[data_35 -----data---->parser_38],"36	        #print(type(data))
37	        print(""Tags Parsing of file {} :"".format(fileName))
38	        parser.feed(data)
39	        parser.display() 
",MISSING
1509,000091ebac6953ae56345a8c0e5f303c1c591317.execution_graph,[parser_38 -----display---->parser_39],"37	        print(""Tags Parsing of file {} :"".format(fileName))
38	        parser.feed(data)
39	        parser.display() 
40	        dictionarTags ={}
",MISSING
1510,000091ebac6953ae56345a8c0e5f303c1c591317.execution_graph,[loop_dictionarTags_5_dictionarTags_40 -----restart_loop---->dictionarTags_5],"
",MISSING
1511,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_3 -----info---->df3_5],"3	df3 = pd.read_csv('df3')
4	
5	df3.info()
6	
",MISSING
1512,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[pandas -----read csv---->df3_3],"1	import pandas as pd
2	import matplotlib.pyplot as plt
3	df3 = pd.read_csv('df3')
4	
",MISSING
1513,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_5 -----head---->df3_7],"5	df3.info()
6	
7	df3.head()
8	
",MISSING
1514,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_7 -----plot---->df3_9_intermediate_1],"df3_5 -----head---->df3_7
df3_26_intermediate_2 -----plot---->df3_26
df3_26_intermediate_2 -----scatter---->df3_26",MISSING
1515,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_9 -----select---->df3_11_intermediate_1],"df3_9_intermediate_1 -----scatter---->df3_9
df3_26_intermediate_2 -----select---->df3_26
df3_26_intermediate_2 -----plot---->df3_26",MISSING
1516,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_11 -----select---->df3_15_intermediate_1],"df3_11_intermediate_2 -----hist---->df3_11
df3_26_intermediate_2 -----select---->df3_26
df3_26_intermediate_2 -----plot---->df3_26",MISSING
1517,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[matplotlib.pyplot -----style---->plt_13_intermediate_1],"df3_26_intermediate_2 -----style---->df3_26
df3_26_intermediate_2 -----figure---->df3_26
df3_26_intermediate_2 -----legend---->df3_26
df3_26_intermediate_2 -----show---->df3_26
df3_26_intermediate_2 -----use---->df3_26",MISSING
1518,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[matplotlib.pyplot -----figure---->f_25],"23	df3.ix[0:30].plot.area(alpha=0.4)
24	
25	f = plt.figure()
26	df3.ix[0:30].plot.area(alpha=0.4,ax=f.gca())
",MISSING
1519,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[matplotlib.pyplot -----legend---->plt_27],"25	f = plt.figure()
26	df3.ix[0:30].plot.area(alpha=0.4,ax=f.gca())
27	plt.legend(loc='center left', bbox_to_anchor=(1.0, 0.5))
28	plt.show()
",MISSING
1520,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[matplotlib.pyplot -----show---->plt_28],"26	df3.ix[0:30].plot.area(alpha=0.4,ax=f.gca())
27	plt.legend(loc='center left', bbox_to_anchor=(1.0, 0.5))
28	plt.show()
",MISSING
1521,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_15 -----select---->df3_17_intermediate_1],"df3_15_intermediate_2 -----hist---->df3_15
df3_26_intermediate_2 -----select---->df3_26
df3_26_intermediate_2 -----plot---->df3_26",MISSING
1522,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_17 -----select---->df3_19_intermediate_1],"df3_17_intermediate_2 -----box---->df3_17
df3_26_intermediate_2 -----select---->df3_26
df3_26_intermediate_2 -----plot---->df3_26",MISSING
1523,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_19 -----select---->df3_21_intermediate_1],"df3_19_intermediate_2 -----kde---->df3_19
df3_26_intermediate_2 -----select---->df3_26
df3_26_intermediate_2 -----plot---->df3_26",MISSING
1524,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_21 -----ix---->df3_23_intermediate_1],"df3_21_intermediate_2 -----density---->df3_21
df3_26_intermediate_2 -----ix---->df3_26
df3_26_intermediate_2 -----plot---->df3_26",MISSING
1525,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_23 -----ix---->df3_26_intermediate_1],"df3_23_intermediate_2 -----area---->df3_23
df3_26_intermediate_2 -----ix---->df3_26
df3_26_intermediate_2 -----plot---->df3_26",MISSING
1526,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_9_intermediate_1 -----scatter---->df3_9],"df3_7 -----plot---->df3_9_intermediate_1
df3_26_intermediate_2 -----scatter---->df3_26
df3_26_intermediate_2 -----select---->df3_26",EDA
1527,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_11_intermediate_1 -----plot---->df3_11_intermediate_2],"df3_9 -----select---->df3_11_intermediate_1
df3_26_intermediate_2 -----plot---->df3_26
df3_26_intermediate_2 -----hist---->df3_26",MISSING
1528,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_11_intermediate_2 -----hist---->df3_11],"df3_11_intermediate_1 -----plot---->df3_11_intermediate_2
df3_26_intermediate_2 -----hist---->df3_26
df3_26_intermediate_2 -----select---->df3_26",MISSING
1529,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_15_intermediate_1 -----plot---->df3_15_intermediate_2],"df3_11 -----select---->df3_15_intermediate_1
df3_26_intermediate_2 -----plot---->df3_26
df3_26_intermediate_2 -----hist---->df3_26",MISSING
1530,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_15_intermediate_2 -----hist---->df3_15],"df3_15_intermediate_1 -----plot---->df3_15_intermediate_2
df3_26_intermediate_2 -----hist---->df3_26
df3_26_intermediate_2 -----select---->df3_26",MISSING
1531,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[plt_13_intermediate_1 -----use---->plt_13],"matplotlib.pyplot -----style---->plt_13_intermediate_1
df3_26_intermediate_2 -----use---->df3_26",MISSING
1532,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_17_intermediate_1 -----plot---->df3_17_intermediate_2],"df3_15 -----select---->df3_17_intermediate_1
df3_26_intermediate_2 -----plot---->df3_26
df3_26_intermediate_2 -----box---->df3_26",MISSING
1533,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_17_intermediate_2 -----box---->df3_17],"df3_17_intermediate_1 -----plot---->df3_17_intermediate_2
df3_26_intermediate_2 -----box---->df3_26
df3_26_intermediate_2 -----select---->df3_26",MISSING
1534,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_19_intermediate_1 -----plot---->df3_19_intermediate_2],"df3_17 -----select---->df3_19_intermediate_1
df3_26_intermediate_2 -----plot---->df3_26
df3_26_intermediate_2 -----kde---->df3_26",MISSING
1535,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_19_intermediate_2 -----kde---->df3_19],"df3_19_intermediate_1 -----plot---->df3_19_intermediate_2
df3_26_intermediate_2 -----kde---->df3_26
df3_26_intermediate_2 -----select---->df3_26",MISSING
1536,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_21_intermediate_1 -----plot---->df3_21_intermediate_2],"df3_19 -----select---->df3_21_intermediate_1
df3_26_intermediate_2 -----plot---->df3_26
df3_26_intermediate_2 -----density---->df3_26",MISSING
1537,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_21_intermediate_2 -----density---->df3_21],"df3_21_intermediate_1 -----plot---->df3_21_intermediate_2
df3_26_intermediate_2 -----density---->df3_26
df3_26_intermediate_2 -----ix---->df3_26",MISSING
1538,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_23_intermediate_1 -----plot---->df3_23_intermediate_2],"df3_21 -----ix---->df3_23_intermediate_1
df3_26_intermediate_2 -----plot---->df3_26
df3_26_intermediate_2 -----area---->df3_26",MISSING
1539,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_23_intermediate_2 -----area---->df3_23],"df3_23_intermediate_1 -----plot---->df3_23_intermediate_2
df3_26_intermediate_2 -----area---->df3_26
df3_26_intermediate_2 -----ix---->df3_26",MISSING
1540,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_26_intermediate_1 -----plot---->df3_26_intermediate_2],"df3_23 -----ix---->df3_26_intermediate_1
df3_26_intermediate_2 -----plot---->df3_26
df3_26_intermediate_2 -----area---->df3_26",MISSING
1541,000098fb84855f9858fd9d7258f9789fae8228cf.execution_graph,[df3_26_intermediate_2 -----area---->df3_26],"df3_26_intermediate_1 -----plot---->df3_26_intermediate_2
df3_26_intermediate_2 -----area---->df3_26",MISSING
1542,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[rows_7 -----loop---->rows_17_intermediate_1],"loop_rows_7_rows_17 -----restart_loop---->rows_7
rows_17_intermediate_1 -----loop---->rows_17
rows_17_intermediate_1 -----append---->rows_17",DATA_TRANSFORM
1543,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[rows_17 -----end_loop---->loop_rows_7_rows_17],"
",MISSING
1544,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[g_10 -----number of nodes---->n_11],"9	    print(graph_name)
10	    g = nx.read_gpickle('graphs/{}.pkl'.format(graph_name))
11	    n = g.number_of_nodes()
12	    m = g.number_of_edges()
",MISSING
1545,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[g_10 -----number of edges---->m_12],"10	    g = nx.read_gpickle('graphs/{}.pkl'.format(graph_name))
11	    n = g.number_of_nodes()
12	    m = g.number_of_edges()
13	    num_neg_edges = sum((g[u][v]['sign'] < 0) for u, v in g.edges())
",EDA
1546,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[g_10 -----graph---->lambda1_15],"13	    num_neg_edges = sum((g[u][v]['sign'] < 0) for u, v in g.edges())
14	    neg_frac = num_neg_edges / m
15	    lambda1 = g.graph['lambda1']
16	    row = (graph_name, n, m, neg_frac, lambda1)
",HYPERPARAMETER_TUNING
1547,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[networkx -----read gpickle---->g_10],"8	for graph_name in graph_names:
9	    print(graph_name)
10	    g = nx.read_gpickle('graphs/{}.pkl'.format(graph_name))
11	    n = g.number_of_nodes()
",DATA_IMPORT_EXTRACTION
1548,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[n_11 -----n---->row_16],"14	    neg_frac = num_neg_edges / m
15	    lambda1 = g.graph['lambda1']
16	    row = (graph_name, n, m, neg_frac, lambda1)
17	    rows.append(row)
",EDA
1549,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[m_12 -----div---->neg_frac_14],"12	    m = g.number_of_edges()
13	    num_neg_edges = sum((g[u][v]['sign'] < 0) for u, v in g.edges())
14	    neg_frac = num_neg_edges / m
15	    lambda1 = g.graph['lambda1']
",DATA_TRANSFORM
1550,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[m_12 -----m---->row_16],"14	    neg_frac = num_neg_edges / m
15	    lambda1 = g.graph['lambda1']
16	    row = (graph_name, n, m, neg_frac, lambda1)
17	    rows.append(row)
",DATA_TRANSFORM
1551,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[num_neg_edges_13 -----div---->neg_frac_14],"12	    m = g.number_of_edges()
13	    num_neg_edges = sum((g[u][v]['sign'] < 0) for u, v in g.edges())
14	    neg_frac = num_neg_edges / m
15	    lambda1 = g.graph['lambda1']
",DATA_TRANSFORM
1552,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[neg_frac_14 -----neg frac---->row_16],"14	    neg_frac = num_neg_edges / m
15	    lambda1 = g.graph['lambda1']
16	    row = (graph_name, n, m, neg_frac, lambda1)
17	    rows.append(row)
",EDA
1553,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[lambda1_15 -----lambda1---->row_16],"14	    neg_frac = num_neg_edges / m
15	    lambda1 = g.graph['lambda1']
16	    row = (graph_name, n, m, neg_frac, lambda1)
17	    rows.append(row)
",EDA
1554,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[row_16 -----row---->rows_17],"15	    lambda1 = g.graph['lambda1']
16	    row = (graph_name, n, m, neg_frac, lambda1)
17	    rows.append(row)
18	
",DATA_TRANSFORM
1555,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[loop_rows_7_rows_17 -----restart_loop---->rows_7],"
",DATA_TRANSFORM
1556,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[loop_rows_7_rows_17 -----rows---->df_19],"17	    rows.append(row)
18	
19	df = pd.DataFrame(rows, columns=['name', 'n', 'm', 'neg_frac', 'lambda_1'])
20	
",DATA_TRANSFORM
1557,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[pandas -----data frame---->df_19],"17	    rows.append(row)
18	
19	df = pd.DataFrame(rows, columns=['name', 'n', 'm', 'neg_frac', 'lambda_1'])
20	
",DATA_TRANSFORM
1558,00009e8ad3f3b19a2b9740d51081635572828f8a.execution_graph,[rows_17_intermediate_1 -----append---->rows_17],"rows_7 -----loop---->rows_17_intermediate_1
rows_17_intermediate_1 -----append---->rows_17
rows_17_intermediate_1 -----end_loop---->rows_17",DATA_TRANSFORM
1559,0000a270780075ffda176930250c743cbd9e822e.execution_graph,[dir_data_6 -----dir data---->f_app_train_7],"5	# 設定 data_path, 並讀取 app_train
6	dir_data = './data/'
7	f_app_train = os.path.join(dir_data, 'application_train.csv')
8	app_train = pd.read_csv(f_app_train)
",DATA_IMPORT_EXTRACTION
1560,0000a270780075ffda176930250c743cbd9e822e.execution_graph,[f_app_train_7 -----f app train---->app_train_8],"6	dir_data = './data/'
7	f_app_train = os.path.join(dir_data, 'application_train.csv')
8	app_train = pd.read_csv(f_app_train)
9	
",MISSING
1561,0000a270780075ffda176930250c743cbd9e822e.execution_graph,[os -----path---->f_app_train_7_intermediate_1],"f_app_train_7_intermediate_1 -----path---->f_app_train_7
f_app_train_7_intermediate_1 -----join---->f_app_train_7",MISSING
1562,0000a270780075ffda176930250c743cbd9e822e.execution_graph,[app_train_8 -----app train---->sub_train_10],"8	app_train = pd.read_csv(f_app_train)
9	
10	sub_train = pd.DataFrame(app_train['WEEKDAY_APPR_PROCESS_START'])
11	print(sub_train.shape)
",MISSING
1563,0000a270780075ffda176930250c743cbd9e822e.execution_graph,[pandas -----read csv---->app_train_8],"6	dir_data = './data/'
7	f_app_train = os.path.join(dir_data, 'application_train.csv')
8	app_train = pd.read_csv(f_app_train)
9	
",MISSING
1564,0000a270780075ffda176930250c743cbd9e822e.execution_graph,[pandas -----data frame---->sub_train_10],"8	app_train = pd.read_csv(f_app_train)
9	
10	sub_train = pd.DataFrame(app_train['WEEKDAY_APPR_PROCESS_START'])
11	print(sub_train.shape)
",MISSING
1565,0000a270780075ffda176930250c743cbd9e822e.execution_graph,[pandas -----get dummies---->sub_train_17],"15	Your Code Here
16	""""""
17	sub_train = pd.get_dummies(sub_train)
18	sub_train.head()
",MISSING
1566,0000a270780075ffda176930250c743cbd9e822e.execution_graph,[sub_train_10 -----head---->sub_train_12],"10	sub_train = pd.DataFrame(app_train['WEEKDAY_APPR_PROCESS_START'])
11	print(sub_train.shape)
12	sub_train.head()
13	
",MISSING
1567,0000a270780075ffda176930250c743cbd9e822e.execution_graph,[sub_train_12 -----sub train---->sub_train_17],"15	Your Code Here
16	""""""
17	sub_train = pd.get_dummies(sub_train)
18	sub_train.head()
",MISSING
1568,0000a270780075ffda176930250c743cbd9e822e.execution_graph,[sub_train_17 -----head---->sub_train_18],"16	""""""
17	sub_train = pd.get_dummies(sub_train)
18	sub_train.head()
",MISSING
1569,0000a270780075ffda176930250c743cbd9e822e.execution_graph,[f_app_train_7_intermediate_1 -----join---->f_app_train_7],"os -----path---->f_app_train_7_intermediate_1
f_app_train_7_intermediate_1 -----join---->f_app_train_7
f_app_train_7_intermediate_1 -----f app train---->f_app_train_7",MISSING
1570,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[SAVE_PATH_23 -----replace---->CHECKS_PATH_37],"35	    
36	
37	CHECKS_PATH = SAVE_PATH.replace('cs231n/datasets/squeezenet.ckpt', 'style-transfer-checks-tf.npz')
38	STYLES_FOLDER = CHECKS_PATH.replace('style-transfer-checks-tf.npz', 'styles')
",MISSING
1571,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[SAVE_PATH_23 -----save path---->model_41],"39	
40	model=SqueezeNet()
41	model.load_weights(SAVE_PATH)
42	model.trainable=False
",MISSING
1572,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[CHECKS_PATH_37 -----replace---->STYLES_FOLDER_38],"36	
37	CHECKS_PATH = SAVE_PATH.replace('cs231n/datasets/squeezenet.ckpt', 'style-transfer-checks-tf.npz')
38	STYLES_FOLDER = CHECKS_PATH.replace('style-transfer-checks-tf.npz', 'styles')
39	
",MISSING
1573,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[CHECKS_PATH_37 -----checks path---->answers_47],"45	content_img_test = preprocess_image(load_image('%s/tubingen.jpg' % (STYLES_FOLDER), size=192))[None]
46	style_img_test = preprocess_image(load_image('%s/starry_night.jpg' % (STYLES_FOLDER), size=192))[None]
47	answers = np.load(CHECKS_PATH)
48	
",MISSING
1574,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[STYLES_FOLDER_38 -----mod---->params1_199],"198	# Composition VII + Tubingen
199	params1 = {
200	    'content_image' : '%s/tubingen.jpg' % (STYLES_FOLDER),
201	    'style_image' : '%s/composition_vii.jpg' % (STYLES_FOLDER),
",MISSING
1575,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[STYLES_FOLDER_38 -----mod---->params2_214],"213	# Scream + Tubingen
214	params2 = {
215	    'content_image':'%s/tubingen.jpg' % (STYLES_FOLDER),
216	    'style_image':'%s/the_scream.jpg' % (STYLES_FOLDER),
",MISSING
1576,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[STYLES_FOLDER_38 -----mod---->params3_229],"228	# Starry Night + Tubingen
229	params3 = {
230	    'content_image' : '%s/tubingen.jpg' % (STYLES_FOLDER),
231	    'style_image' : '%s/starry_night.jpg' % (STYLES_FOLDER),
",MISSING
1577,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[STYLES_FOLDER_38 -----mod---->params_inv_244],"243	# Feature Inversion -- Starry Night + Tubingen
244	params_inv = {
245	    'content_image' : '%s/tubingen.jpg' % (STYLES_FOLDER),
246	    'style_image' : '%s/starry_night.jpg' % (STYLES_FOLDER),
",DATA_IMPORT_EXTRACTION
1578,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[model_40 -----load weights---->model_41],"39	
40	model=SqueezeNet()
41	model.load_weights(SAVE_PATH)
42	model.trainable=False
",MISSING
1579,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[cs231n.classifiers.squeezenet -----squeeze net---->model_40],"38	STYLES_FOLDER = CHECKS_PATH.replace('style-transfer-checks-tf.npz', 'styles')
39	
40	model=SqueezeNet()
41	model.load_weights(SAVE_PATH)
",MISSING
1580,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[model_41 -----reassign---->model_42],"40	model=SqueezeNet()
41	model.load_weights(SAVE_PATH)
42	model.trainable=False
43	
",MISSING
1581,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[cs231n.image_utils -----preprocess image---->content_img_test_45],"43	
44	# Load data for testing
45	content_img_test = preprocess_image(load_image('%s/tubingen.jpg' % (STYLES_FOLDER), size=192))[None]
46	style_img_test = preprocess_image(load_image('%s/starry_night.jpg' % (STYLES_FOLDER), size=192))[None]
",MISSING
1582,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[cs231n.image_utils -----preprocess image---->style_img_test_46],"44	# Load data for testing
45	content_img_test = preprocess_image(load_image('%s/tubingen.jpg' % (STYLES_FOLDER), size=192))[None]
46	style_img_test = preprocess_image(load_image('%s/starry_night.jpg' % (STYLES_FOLDER), size=192))[None]
47	answers = np.load(CHECKS_PATH)
",MISSING
1583,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[answers_47 -----answers---->content_loss_test_61],"59	    print('Maximum error is {:.3f}'.format(error))
60	
61	content_loss_test(answers['cl_out'])
62	
",MISSING
1584,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[answers_47 -----answers---->gram_matrix_test_70],"68	    print('Maximum error is {:.3f}'.format(error))
69	
70	gram_matrix_test(answers['gm_out'])
71	
",MISSING
1585,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[answers_47 -----answers---->style_loss_test_88],"86	    print('Error is {:.3f}'.format(error))
87	
88	style_loss_test(answers['sl_out'])
89	
",MISSING
1586,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[answers_47 -----answers---->tv_loss_test_104],"102	        print(""WARNING!!!! - Your implementation of tv_loss contains a loop! To receive full credit, your implementation should not have any loops"")
103	
104	tv_loss_test(answers['tv_out'])
105	
",MISSING
1587,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[numpy -----load---->answers_47],"45	content_img_test = preprocess_image(load_image('%s/tubingen.jpg' % (STYLES_FOLDER), size=192))[None]
46	style_img_test = preprocess_image(load_image('%s/starry_night.jpg' % (STYLES_FOLDER), size=192))[None]
47	answers = np.load(CHECKS_PATH)
48	
",MISSING
1588,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[style_transfer_211 -----style transfer---->style_transfer_226],"224	}
225	
226	style_transfer(**params2)
227	
",MISSING
1589,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[style_transfer_226 -----style transfer---->style_transfer_241],"239	}
240	
241	style_transfer(**params3)
242	
",MISSING
1590,0000a3c91a10a6ec47ae1eebd0105f2c99f3fc5b.execution_graph,[style_transfer_241 -----style transfer---->style_transfer_257],"255	}
256	
257	style_transfer(**params_inv)
258	
",MISSING
1591,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[tensorflow -----version---->tf_14],"12	from keras.layers import *
13	
14	tf.__version__
15	
",ENVIRONMENT
1592,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[keras -----version---->keras_16],"14	tf.__version__
15	
16	keras.__version__
17	
",MISSING
1593,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[numpy -----seed---->np_18],"16	keras.__version__
17	
18	np.random.seed(1337)  # for reproducibility
19	DATA_PATH = ""bi-lstm-data/""
",MISSING
1594,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[DATA_PATH_19 -----add---->EMBEDDINGS_PATH_20],"18	np.random.seed(1337)  # for reproducibility
19	DATA_PATH = ""bi-lstm-data/""
20	EMBEDDINGS_PATH = DATA_PATH+'embeddings.pkl.gz'
21	TRAIN_SET_PATH = DATA_PATH+'train_set.pkl.gz'
",MISSING
1595,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[DATA_PATH_19 -----add---->TRAIN_SET_PATH_21],"19	DATA_PATH = ""bi-lstm-data/""
20	EMBEDDINGS_PATH = DATA_PATH+'embeddings.pkl.gz'
21	TRAIN_SET_PATH = DATA_PATH+'train_set.pkl.gz'
22	TEST_SET_PATH = DATA_PATH+'test_set.csv'
",MISSING
1596,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[DATA_PATH_19 -----add---->TEST_SET_PATH_22],"20	EMBEDDINGS_PATH = DATA_PATH+'embeddings.pkl.gz'
21	TRAIN_SET_PATH = DATA_PATH+'train_set.pkl.gz'
22	TEST_SET_PATH = DATA_PATH+'test_set.csv'
23	MODEL_PATH = DATA_PATH+'bi-lstm-model.h5'
",MISSING
1597,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[DATA_PATH_19 -----add---->MODEL_PATH_23],"21	TRAIN_SET_PATH = DATA_PATH+'train_set.pkl.gz'
22	TEST_SET_PATH = DATA_PATH+'test_set.csv'
23	MODEL_PATH = DATA_PATH+'bi-lstm-model.h5'
24	
",MISSING
1598,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[EMBEDDINGS_PATH_20 -----embeddings path---->f_26],"24	
25	# Load train set embeddings
26	f = gzip.open(EMBEDDINGS_PATH, 'rb')
27	embeddings = pkl.load(f)
",MISSING
1599,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[TRAIN_SET_PATH_21 -----train set path---->f_40],"38	
39	# Load all train set
40	f = gzip.open(TRAIN_SET_PATH, 'rb')
41	data = pkl.load(f)
",MISSING
1600,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[MODEL_PATH_23 -----model path---->model_210],"208	
209	# Save model in a HDF5 file 
210	model.save(MODEL_PATH)  
",MISSING
1601,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[f_26 -----f---->embeddings_27],"25	# Load train set embeddings
26	f = gzip.open(EMBEDDINGS_PATH, 'rb')
27	embeddings = pkl.load(f)
28	f.close()
",MISSING
1602,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[f_26 -----close---->f_28],"26	f = gzip.open(EMBEDDINGS_PATH, 'rb')
27	embeddings = pkl.load(f)
28	f.close()
29	
",MISSING
1603,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[gzip -----open---->f_26],"24	
25	# Load train set embeddings
26	f = gzip.open(EMBEDDINGS_PATH, 'rb')
27	embeddings = pkl.load(f)
",MISSING
1604,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[gzip -----open---->f_40],"38	
39	# Load all train set
40	f = gzip.open(TRAIN_SET_PATH, 'rb')
41	data = pkl.load(f)
",MISSING
1605,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[embeddings_27 -----select---->label2Idx_30],"28	f.close()
29	
30	label2Idx = embeddings['label2Idx']
31	wordEmbeddings = embeddings['wordEmbeddings']
",MISSING
1606,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[embeddings_27 -----select---->wordEmbeddings_31],"29	
30	label2Idx = embeddings['label2Idx']
31	wordEmbeddings = embeddings['wordEmbeddings']
32	caseEmbeddings = embeddings['caseEmbeddings']
",MISSING
1607,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[embeddings_27 -----select---->caseEmbeddings_32],"30	label2Idx = embeddings['label2Idx']
31	wordEmbeddings = embeddings['wordEmbeddings']
32	caseEmbeddings = embeddings['caseEmbeddings']
33	
",MISSING
1608,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[pickle -----load---->embeddings_27],"25	# Load train set embeddings
26	f = gzip.open(EMBEDDINGS_PATH, 'rb')
27	embeddings = pkl.load(f)
28	f.close()
",MISSING
1609,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[pickle -----load---->data_41],"39	# Load all train set
40	f = gzip.open(TRAIN_SET_PATH, 'rb')
41	data = pkl.load(f)
42	f.close()
",MISSING
1610,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[f_28 -----reassign---->f_40],"38	
39	# Load all train set
40	f = gzip.open(TRAIN_SET_PATH, 'rb')
41	data = pkl.load(f)
",DATA_IMPORT_EXTRACTION
1611,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[label2Idx_30 -----items---->idx2Label_35],"33	
34	# Inverse label mapping
35	idx2Label = {v: k for k, v in label2Idx.items()}
36	
",DATA_TRANSFORM
1612,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[label2Idx_30 -----label2idx---->n_out_48],"46	wordEmbeddings.shape, caseEmbeddings.shape
47	
48	n_out = len(label2Idx)
49	
",DATA_TRANSFORM
1613,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[f_40 -----f---->data_41],"39	# Load all train set
40	f = gzip.open(TRAIN_SET_PATH, 'rb')
41	data = pkl.load(f)
42	f.close()
",DATA_IMPORT_EXTRACTION
1614,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[f_40 -----close---->f_42],"40	f = gzip.open(TRAIN_SET_PATH, 'rb')
41	data = pkl.load(f)
42	f.close()
43	
",DATA_IMPORT_EXTRACTION
1615,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[data_41 -----select---->data_44],"42	f.close()
43	
44	data[0] # word2Idx, case2Idx, label2Idx
45	
",DATA_TRANSFORM
1616,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[data_44 -----data---->data_len_194],"192	
193	
194	data_len = len(data)
195	train_pcnt = round(data_len / 100 * 70)
",ENVIRONMENT
1617,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[data_44 -----data---->random_204],"202	for i in range(folds):
203	    print(""*** Fold: "", i)
204	    random.shuffle(data)
205	    train_data = data[:train_pcnt]
",DATA_TRANSFORM
1618,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[data_44 -----slice---->train_data_205],"203	    print(""*** Fold: "", i)
204	    random.shuffle(data)
205	    train_data = data[:train_pcnt]
206	    test_data = data[train_pcnt:]
",DATA_TRANSFORM
1619,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[data_44 -----slice---->test_data_206],"204	    random.shuffle(data)
205	    train_data = data[:train_pcnt]
206	    test_data = data[train_pcnt:]
207	    train_test(train_data, test_data, number_of_epochs)
",DATA_TRANSFORM
1620,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[words_input_50 -----words input---->words_51],"49	
50	words_input = Input(shape=(None,), dtype='int32', name='words_input')
51	words = Embedding(input_dim=wordEmbeddings.shape[0], output_dim=wordEmbeddings.shape[1],  
52	                  weights=[wordEmbeddings], trainable=False)(words_input)
",DATA_TRANSFORM
1621,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[casing_input_54 -----casing input---->casing_55],"53	
54	casing_input = Input(shape=(None,), dtype='int32', name='casing_input')
55	casing = Embedding(output_dim=caseEmbeddings.shape[1], input_dim=caseEmbeddings.shape[0], 
56	                   weights=[caseEmbeddings], trainable=False)(casing_input)
",MODEL_TRAIN
1622,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[output_58 -----call---->output_59],"57	
58	output = concatenate([words, casing])
59	output = Bidirectional(LSTM(50, return_sequences=True, dropout=0.25, 
60	                            recurrent_dropout=0.25))(output)
",MODEL_TRAIN
1623,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[output_59 -----call---->output_61],"59	output = Bidirectional(LSTM(50, return_sequences=True, dropout=0.25, 
60	                            recurrent_dropout=0.25))(output)
61	output = TimeDistributed(Dense(n_out, activation='softmax'))(output)
62	
",MODEL_TRAIN
1624,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[model_64 -----compile---->model_65],"63	#Create our model and compile it using Nadam optimizer with categorical cross-entropy for sparse y-labels
64	model = Model(inputs=[words_input, casing_input], outputs=[output])
65	model.compile(loss='sparse_categorical_crossentropy', optimizer='nadam')
66	model.summary()
",MODEL_TRAIN
1625,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[keras.models -----model---->model_64],"62	
63	#Create our model and compile it using Nadam optimizer with categorical cross-entropy for sparse y-labels
64	model = Model(inputs=[words_input, casing_input], outputs=[output])
65	model.compile(loss='sparse_categorical_crossentropy', optimizer='nadam')
",MODEL_TRAIN
1626,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[model_65 -----summary---->model_66],"64	model = Model(inputs=[words_input, casing_input], outputs=[output])
65	model.compile(loss='sparse_categorical_crossentropy', optimizer='nadam')
66	model.summary()
67	
",NOT_INTERESTING
1627,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[model_66 -----save---->model_210],"208	
209	# Save model in a HDF5 file 
210	model.save(MODEL_PATH)  
",DATA_EXPORT
1628,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[train_pcnt_195 -----train pcnt---->train_data_205],"203	    print(""*** Fold: "", i)
204	    random.shuffle(data)
205	    train_data = data[:train_pcnt]
206	    test_data = data[train_pcnt:]
",MISSING
1629,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[train_pcnt_195 -----train pcnt---->test_data_206],"204	    random.shuffle(data)
205	    train_data = data[:train_pcnt]
206	    test_data = data[train_pcnt:]
207	    train_test(train_data, test_data, number_of_epochs)
",MISSING
1630,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[number_of_epochs_201 -----number of epochs---->train_test_207],"205	    train_data = data[:train_pcnt]
206	    test_data = data[train_pcnt:]
207	    train_test(train_data, test_data, number_of_epochs)
208	
",MISSING
1631,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[random -----shuffle---->random_204],"202	for i in range(folds):
203	    print(""*** Fold: "", i)
204	    random.shuffle(data)
205	    train_data = data[:train_pcnt]
",MISSING
1632,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[train_data_205 -----train data---->train_test_207],"205	    train_data = data[:train_pcnt]
206	    test_data = data[train_pcnt:]
207	    train_test(train_data, test_data, number_of_epochs)
208	
",MISSING
1633,0000b922f6fd0eb4cf055b9c530a7bfd26423dee.execution_graph,[test_data_206 -----test data---->train_test_207],"205	    train_data = data[:train_pcnt]
206	    test_data = data[train_pcnt:]
207	    train_test(train_data, test_data, number_of_epochs)
208	
",MISSING
1634,0000bb0b613c0674d479ac5c1ff934108783ebc7.execution_graph,[DATA_PATTERN_7 -----data pattern---->df_11],"9	EPOCHS = 5
10	
11	df = pd.read_csv(DATA_PATTERN)
12	
",DATA_IMPORT_EXTRACTION
1635,0000bb0b613c0674d479ac5c1ff934108783ebc7.execution_graph,[pandas -----read csv---->df_11],"9	EPOCHS = 5
10	
11	df = pd.read_csv(DATA_PATTERN)
12	
",MISSING
1636,0000bb0b613c0674d479ac5c1ff934108783ebc7.execution_graph,[model_13 -----add---->model_14],"12	
13	model = tf.keras.Sequential()
14	model.add(layers.Dense(64, activation='relu'))
15	model.add(layers.Dense(64, activation='relu'))
",MISSING
1637,0000bb0b613c0674d479ac5c1ff934108783ebc7.execution_graph,[tensorflow -----keras---->model_13_intermediate_1],"model_13_intermediate_1 -----keras---->model_13
model_13_intermediate_1 -----sequential---->model_13",MISSING
1638,0000bb0b613c0674d479ac5c1ff934108783ebc7.execution_graph,[model_14 -----add---->model_15],"13	model = tf.keras.Sequential()
14	model.add(layers.Dense(64, activation='relu'))
15	model.add(layers.Dense(64, activation='relu'))
16	model.add(layers.Dense(1))
",MISSING
1639,0000bb0b613c0674d479ac5c1ff934108783ebc7.execution_graph,[model_15 -----add---->model_16],"14	model.add(layers.Dense(64, activation='relu'))
15	model.add(layers.Dense(64, activation='relu'))
16	model.add(layers.Dense(1))
17	
",MISSING
1640,0000bb0b613c0674d479ac5c1ff934108783ebc7.execution_graph,[model_16 -----compile---->model_18],"16	model.add(layers.Dense(1))
17	
18	model.compile(optimizer=tf.keras.optimizers.Adam(),
19	              loss=tf.keras.losses.BinaryCrossentropy(from_logits=True),
",MISSING
1641,0000bb0b613c0674d479ac5c1ff934108783ebc7.execution_graph,[model_18 -----fit---->hist_22],"20	              metrics=['accuracy'])
21	
22	hist = model.fit(
23	    df[FEATURES].to_numpy(),
",MISSING
1642,0000bb0b613c0674d479ac5c1ff934108783ebc7.execution_graph,[model_18 -----summary---->model_28],"26	)
27	
28	model.summary()
",MISSING
1643,0000bb0b613c0674d479ac5c1ff934108783ebc7.execution_graph,[model_13_intermediate_1 -----sequential---->model_13],"tensorflow -----keras---->model_13_intermediate_1
model_13_intermediate_1 -----sequential---->model_13
model_13_intermediate_1 -----add---->model_13",MISSING
1644,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_4 -----loop---->v_29_intermediate_1],"visdom -----visdom---->v_4
loop_v_4_v_35 -----restart_loop---->v_4
new_y_106_intermediate_1 -----loop---->new_y_106
new_y_106_intermediate_1 -----bar---->new_y_106",ENVIRONMENT
1645,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[visdom -----visdom---->v_4],"2	import numpy as np
3	
4	v = visdom.Visdom()
5	
",ENVIRONMENT
1646,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[windows_11 -----windows[win name]---->win_27],"25	
26	for win_name in windows:
27	    win = windows[win_name]
28	    if win['type'] is 'bar':
",DATA_IMPORT_EXTRACTION
1647,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_29 -----if---->v_32_intermediate_1],"win_27 -----win---->v_29
v_29_intermediate_1 -----bar---->v_29
new_y_106_intermediate_1 -----if---->new_y_106
new_y_106_intermediate_1 -----line---->new_y_106",ENVIRONMENT
1648,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[win_27 -----win---->v_29],"27	    win = windows[win_name]
28	    if win['type'] is 'bar':
29	        v.bar(win['data'], win=win_name)
30	    
",ENVIRONMENT
1649,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[win_27 -----win---->v_35],"33	    
34	    if win['type'] is 'pie':
35	        v.pie(win['data'], win=win_name)
36	    
",ENVIRONMENT
1650,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[win_27 -----reassign---->win_89],"87	                                             line_y.shape,
88	                                             line_y))
89	win = v.line(X=line_x, 
90	             Y=line_y, 
",DATA_TRANSFORM
1651,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_32 -----if---->v_35_intermediate_1],"v_32_intermediate_1 -----line---->v_32
new_y_106_intermediate_1 -----if---->new_y_106
new_y_106_intermediate_1 -----pie---->new_y_106",ENVIRONMENT
1652,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_35 -----end_loop---->loop_v_4_v_35],"
",MODEL_TRAIN
1653,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[loop_v_4_v_35 -----restart_loop---->v_4],"
",MODEL_TRAIN
1654,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[loop_v_4_v_35 -----bar---->v_42],"40	
41	# draw 3 stacked bars in stat1 window
42	v.bar([(1,2),(3,2),(1,5)], win=windows['stat1'])
43	
",ENVIRONMENT
1655,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_42 -----bar---->v_45],"43	
44	# draw 2 stacked bars in new window
45	v.bar([(1,2),(3,2)])
46	
",DATA_EXPORT
1656,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_45 -----pie---->v_48],"46	
47	# draw pie chart in stat3 window
48	v.pie(X=[10,10,32,10,10,32], win=windows['stat3'])
49	         
",EDA
1657,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_48 -----line---->v_58],"56	line_y = np.random.rand(10)
57	print('line_y dimension: {}. type: {}'.format(line_y.ndim, type(line_y)))
58	v.line(Y=line_y, opts=dict(showlegend=True))
59	
",EDA
1658,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[line_y_56 -----reassign---->line_y_62],"60	# this will not work because built-in array has no `ndim` attribuet
61	try:
62	    line_y = [1,2,3]
63	    print('line_y dimension: {}. type: {}'.format(line_y.ndim, type(line_y)))
",DATA_TRANSFORM
1659,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[numpy -----random---->line_y_56_intermediate_1],"new_y_106_intermediate_1 -----random---->new_y_106
new_y_106_intermediate_1 -----array---->new_y_106
new_y_106_intermediate_1 -----array---->new_y_106
new_y_106_intermediate_1 -----array---->new_y_106
new_y_106_intermediate_1 -----tile---->new_y_106
new_y_106_intermediate_1 -----exp---->new_y_106
new_y_106_intermediate_1 -----arange---->new_y_106
new_y_106_intermediate_1 -----tile---->new_y_106
new_y_106_intermediate_1 -----exp---->new_y_106
new_y_106_intermediate_1 -----rand---->new_y_106",ENVIRONMENT
1660,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[numpy -----array---->line_y_69],"67	
68	# wrap the array inside numpy array to make above scenario works
69	line_y = np.array(line_y)
70	print('line_y dimension: {}. type: {}'.format(line_y.ndim, type(line_y)))
",DATA_TRANSFORM
1661,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[numpy -----array---->line_x_78],"76	
77	# start with x at [0, 1], and y at [0, 2]
78	line_x = np.array([0, 1])
79	line_y = np.array([0, 2])
",DATA_TRANSFORM
1662,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[numpy -----array---->line_y_79],"77	# start with x at [0, 1], and y at [0, 2]
78	line_x = np.array([0, 1])
79	line_y = np.array([0, 2])
80	
",DATA_TRANSFORM
1663,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[numpy -----tile---->x_130],"128	
129	# contour
130	x = np.tile(np.arange(1, 101), (100, 1))
131	y = x.transpose()
",DATA_TRANSFORM
1664,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[numpy -----exp---->X_132],"130	x = np.tile(np.arange(1, 101), (100, 1))
131	y = x.transpose()
132	X = np.exp((((x - 50) ** 2) + ((y - 50) ** 2)) / -(20.0 ** 2))
133	v.contour(X=X, opts=dict(colormap='Viridis'))
",DATA_TRANSFORM
1665,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[numpy -----arange---->a_range_138],"136	
137	# create range
138	a_range = np.arange(1, 6)
139	print('create array from int range 1 to 5: {}\n{}'.format(type(a_range), a_range))
",DATA_TRANSFORM
1666,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[numpy -----tile---->x_142],"140	
141	# create 5 rows of a_range, repeated 1 time each row
142	x = np.tile(a_range, (5, 1))
143	print('create 2d array `x` by spreading the range 5 times: {}, dimension: {}\n{}'.format(type(tile), tile.ndim, tile))
",DATA_TRANSFORM
1667,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[numpy -----exp---->surface_x_157],"155	
156	# draw the surface
157	surface_x = np.exp(xy_scaled)
158	print('surface x: {}, dimension: {}\n{}'.format(type(surface_x), surface_x.ndim, surface_x))
",DATA_TRANSFORM
1668,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_58 -----line---->v_64],"62	    line_y = [1,2,3]
63	    print('line_y dimension: {}. type: {}'.format(line_y.ndim, type(line_y)))
64	    v.line(Y=line_y, opts=dict(showlegend=True))
65	except AttributeError as e:
",EDA
1669,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[line_y_62 -----line y---->line_y_69],"67	
68	# wrap the array inside numpy array to make above scenario works
69	line_y = np.array(line_y)
70	print('line_y dimension: {}. type: {}'.format(line_y.ndim, type(line_y)))
",DATA_TRANSFORM
1670,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_64 -----line---->v_71],"69	line_y = np.array(line_y)
70	print('line_y dimension: {}. type: {}'.format(line_y.ndim, type(line_y)))
71	v.line(Y=line_y, opts=dict(showlegend=True))
72	
",MODEL_EVALUATION
1671,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[line_y_69 -----reassign---->line_y_79],"77	# start with x at [0, 1], and y at [0, 2]
78	line_x = np.array([0, 1])
79	line_y = np.array([0, 2])
80	
",DATA_TRANSFORM
1672,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_71 -----line---->win_89],"87	                                             line_y.shape,
88	                                             line_y))
89	win = v.line(X=line_x, 
90	             Y=line_y, 
",MODEL_TRAIN
1673,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_71 -----loop---->v_109_intermediate_1],"v_64 -----line---->v_71
loop_v_71_v_109 -----restart_loop---->v_71
new_y_106_intermediate_1 -----line---->new_y_106
new_y_106_intermediate_1 -----loop---->new_y_106
new_y_106_intermediate_1 -----line---->new_y_106",MODEL_TRAIN
1674,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[line_x_78 -----line x[-1]---->latest_x_95],"93	epoch = 15
94	new_y = line_y[-1]
95	latest_x = line_x[-1]
96	name = 'line updates'
",DATA_TRANSFORM
1675,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[line_y_79 -----line y[-1]---->new_y_94],"92	
93	epoch = 15
94	new_y = line_y[-1]
95	latest_x = line_x[-1]
",DATA_TRANSFORM
1676,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[new_y_94 -----loop---->new_y_106_intermediate_1],"line_y_79 -----line y[-1]---->new_y_94
loop_new_y_94_branch_new_y_102_new_y_104_new_y_106 -----restart_loop---->new_y_94
new_y_106_intermediate_1 -----loop---->new_y_106
new_y_106_intermediate_1 -----sub---->new_y_106
new_y_106_intermediate_1 -----add---->new_y_106
new_y_106_intermediate_1 -----add---->new_y_106",MODEL_TRAIN
1677,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[new_y_94 -----sub---->new_y_102],"100	    
101	    if i % 2 == 0:
102	        new_y -= 1
103	    elif i % 3 == 0:
",MODEL_TRAIN
1678,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[new_y_94 -----add---->new_y_104],"102	        new_y -= 1
103	    elif i % 3 == 0:
104	        new_y += 1
105	    elif i % 5 == 0:
",MODEL_TRAIN
1679,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[latest_x_95 -----loop---->latest_x_99],"
",DATA_TRANSFORM
1680,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[latest_x_99 -----end_loop---->loop_latest_x_95_latest_x_99],"
",ENVIRONMENT
1681,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[new_y_106 -----end_if---->branch_new_y_102_new_y_104_new_y_106],"
",MODEL_TRAIN
1682,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_109 -----end_loop---->loop_v_71_v_109],"
",NOT_INTERESTING
1683,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[time -----sleep---->time_98],"96	name = 'line updates'
97	for i in range(latest_x, latest_x + epoch):
98	    time.sleep(0.5)
99	    latest_x = i
",NOT_INTERESTING
1684,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[time -----sleep---->time_118],"116	
117	print('stabilizing y to 0 for x at', latest_x+1)
118	time.sleep(0.5)
119	v.line(
",NOT_INTERESTING
1685,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[new_y_102 -----end_if---->branch_new_y_102_new_y_104_new_y_106],"
",MODEL_TRAIN
1686,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[new_y_104 -----end_if---->branch_new_y_102_new_y_104_new_y_106],"
",MODEL_TRAIN
1687,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[branch_new_y_102_new_y_104_new_y_106 -----end_loop---->loop_new_y_94_branch_new_y_102_new_y_104_new_y_106],"
",MODEL_TRAIN
1688,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[loop_latest_x_95_latest_x_99 -----restart_loop---->latest_x_95],"
",DATA_TRANSFORM
1689,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[loop_new_y_94_branch_new_y_102_new_y_104_new_y_106 -----restart_loop---->new_y_94],"
",MODEL_TRAIN
1690,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[loop_v_71_v_109 -----restart_loop---->v_71],"
",MODEL_TRAIN
1691,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[loop_v_71_v_109 -----line---->v_119],"117	print('stabilizing y to 0 for x at', latest_x+1)
118	time.sleep(0.5)
119	v.line(
120	    X=np.array([latest_x, latest_x+1]),
",MODEL_TRAIN
1692,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_119 -----contour---->v_133],"131	y = x.transpose()
132	X = np.exp((((x - 50) ** 2) + ((y - 50) ** 2)) / -(20.0 ** 2))
133	v.contour(X=X, opts=dict(colormap='Viridis'))
134	
",EDA
1693,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[x_130 -----transpose---->y_131],"129	# contour
130	x = np.tile(np.arange(1, 101), (100, 1))
131	y = x.transpose()
132	X = np.exp((((x - 50) ** 2) + ((y - 50) ** 2)) / -(20.0 ** 2))
",DATA_TRANSFORM
1694,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[x_130 -----reassign---->x_142],"140	
141	# create 5 rows of a_range, repeated 1 time each row
142	x = np.tile(a_range, (5, 1))
143	print('create 2d array `x` by spreading the range 5 times: {}, dimension: {}\n{}'.format(type(tile), tile.ndim, tile))
",DATA_TRANSFORM
1695,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[y_131 -----reassign---->y_146],"144	
145	# transpose the tile
146	y = x.transpose()
147	print('transpose `x` and assign to y:\n', y)
",DATA_TRANSFORM
1696,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_133 -----surf---->v_159],"157	surface_x = np.exp(xy_scaled)
158	print('surface x: {}, dimension: {}\n{}'.format(type(surface_x), surface_x.ndim, surface_x))
159	v.surf(X=surface_x, opts=dict(colormap='Viridis'))
160	
",EDA
1697,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[a_range_138 -----a range---->x_142],"140	
141	# create 5 rows of a_range, repeated 1 time each row
142	x = np.tile(a_range, (5, 1))
143	print('create 2d array `x` by spreading the range 5 times: {}, dimension: {}\n{}'.format(type(tile), tile.ndim, tile))
",DATA_TRANSFORM
1698,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[x_142 -----transpose---->y_146],"144	
145	# transpose the tile
146	y = x.transpose()
147	print('transpose `x` and assign to y:\n', y)
",DATA_TRANSFORM
1699,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[x_142 -----sub---->xy_150],"148	
149	# process x and y
150	xy = (((x-5)**2) + ((y-5) ** 2)) / 2
151	print('xy:\n', xy)
",DATA_TRANSFORM
1700,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[y_146 -----sub---->xy_150],"148	
149	# process x and y
150	xy = (((x-5)**2) + ((y-5) ** 2)) / 2
151	print('xy:\n', xy)
",DATA_TRANSFORM
1701,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[xy_150 -----div---->xy_scaled_153],"151	print('xy:\n', xy)
152	
153	xy_scaled = xy/-(2 ** 2)
154	print('xy scaled:\n', xy_scaled)
",DATA_TRANSFORM
1702,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[xy_scaled_153 -----xy scaled---->surface_x_157],"155	
156	# draw the surface
157	surface_x = np.exp(xy_scaled)
158	print('surface x: {}, dimension: {}\n{}'.format(type(surface_x), surface_x.ndim, surface_x))
",DATA_TRANSFORM
1703,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_29_intermediate_1 -----bar---->v_29],"v_4 -----loop---->v_29_intermediate_1
new_y_106_intermediate_1 -----bar---->new_y_106
new_y_106_intermediate_1 -----if---->new_y_106",ENVIRONMENT
1704,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_32_intermediate_1 -----line---->v_32],"v_29 -----if---->v_32_intermediate_1
new_y_106_intermediate_1 -----line---->new_y_106
new_y_106_intermediate_1 -----if---->new_y_106",ENVIRONMENT
1705,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_35_intermediate_1 -----pie---->v_35],"v_32 -----if---->v_35_intermediate_1
new_y_106_intermediate_1 -----pie---->new_y_106
new_y_106_intermediate_1 -----end_loop---->new_y_106",EDA
1706,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[line_y_56_intermediate_1 -----rand---->line_y_56],"numpy -----random---->line_y_56_intermediate_1
new_y_106_intermediate_1 -----rand---->new_y_106
new_y_106_intermediate_1 -----reassign---->new_y_106",MODEL_TRAIN
1707,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[v_109_intermediate_1 -----line---->v_109],"v_71 -----loop---->v_109_intermediate_1
new_y_106_intermediate_1 -----line---->new_y_106
new_y_106_intermediate_1 -----end_loop---->new_y_106",MODEL_TRAIN
1708,0000dfd542cb69ec0d5aa8fb1e325a9ea837929c.execution_graph,[new_y_106_intermediate_1 -----add---->new_y_106],"new_y_94 -----loop---->new_y_106_intermediate_1
new_y_106_intermediate_1 -----add---->new_y_106
new_y_106_intermediate_1 -----end_if---->new_y_106",MODEL_TRAIN
1709,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[IPython.display -----image---->Image_4],"2	
3	# Figure 1
4	Image(url= ""http://3.bp.blogspot.com/_UpN7DfJA0j4/TJtUBWPk0SI/AAAAAAAAABY/oWPMtmqJn3k/s1600/mnist_originals.png"", width=200, height=200)
5	
",DATA_EXPORT
1710,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[IPython.display -----image---->Image_61],"59	print(""Data directory is {0}"".format(data_dir))
60	
61	Image(url=""https://www.cntk.ai/jup/cntk103d_conv2d_final.gif"", width= 300)
62	
",DATA_EXPORT
1711,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[IPython.display -----display---->display_69],"67	for im in images:
68	    print(im[1])
69	    display(Image(url=im[0], width=200, height=200))
70	
",DATA_EXPORT
1712,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[IPython.display -----display---->display_243],"241	for im in images:
242	    print(im[1])
243	    display(Image(url=im[0], width=300, height=300))
244	
",DATA_EXPORT
1713,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[cntk -----device---->C_20_intermediate_1],"img_pred_234_intermediate_1 -----device---->img_pred_234
img_pred_234_intermediate_1 -----device---->img_pred_234
img_pred_234_intermediate_1 -----input variable---->img_pred_234
img_pred_234_intermediate_1 -----input variable---->img_pred_234
img_pred_234_intermediate_1 -----logging---->img_pred_234
img_pred_234_intermediate_1 -----softmax---->img_pred_234
img_pred_234_intermediate_1 -----try set default device---->img_pred_234",ENVIRONMENT
1714,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[cntk -----device---->C_22_intermediate_1],"img_pred_234_intermediate_1 -----device---->img_pred_234
img_pred_234_intermediate_1 -----device---->img_pred_234
img_pred_234_intermediate_1 -----input variable---->img_pred_234
img_pred_234_intermediate_1 -----input variable---->img_pred_234
img_pred_234_intermediate_1 -----logging---->img_pred_234
img_pred_234_intermediate_1 -----softmax---->img_pred_234
img_pred_234_intermediate_1 -----try set default device---->img_pred_234",ENVIRONMENT
1715,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[cntk -----input variable---->x_71],"69	    display(Image(url=im[0], width=200, height=200))
70	
71	x = C.input_variable(input_dim_model)
72	y = C.input_variable(num_output_classes)
",MODEL_TRAIN
1716,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[cntk -----input variable---->y_72],"70	
71	x = C.input_variable(input_dim_model)
72	y = C.input_variable(num_output_classes)
73	
",MODEL_TRAIN
1717,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[cntk -----logging---->C_98_intermediate_1],"img_pred_234_intermediate_1 -----device---->img_pred_234
img_pred_234_intermediate_1 -----device---->img_pred_234
img_pred_234_intermediate_1 -----input variable---->img_pred_234
img_pred_234_intermediate_1 -----input variable---->img_pred_234
img_pred_234_intermediate_1 -----logging---->img_pred_234
img_pred_234_intermediate_1 -----softmax---->img_pred_234
img_pred_234_intermediate_1 -----log number of parameters---->img_pred_234",MODEL_TRAIN
1718,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[cntk -----softmax---->out_204],"202	print(""Bias value of the last dense layer:"", z.classify.b.value)
203	
204	out = C.softmax(z)
205	
",MODEL_EVALUATION
1719,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[numpy -----random---->np_25_intermediate_1],"img_pred_234_intermediate_1 -----random---->img_pred_234
img_pred_234_intermediate_1 -----reshape---->img_pred_234
img_pred_234_intermediate_1 -----argmax---->img_pred_234
img_pred_234_intermediate_1 -----argmax---->img_pred_234
img_pred_234_intermediate_1 -----seed---->img_pred_234",ENVIRONMENT
1720,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[numpy -----reshape---->img_data_218],"216	
217	# reshape img_data to: M x 1 x 28 x 28 to be compatible with model
218	img_data = np.reshape(img_data, (eval_minibatch_size, 1, 28, 28))
219	
",DATA_TRANSFORM
1721,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[numpy -----argmax---->pred_223_intermediate_1],"img_pred_234_intermediate_1 -----random---->img_pred_234
img_pred_234_intermediate_1 -----reshape---->img_pred_234
img_pred_234_intermediate_1 -----argmax---->img_pred_234
img_pred_234_intermediate_1 -----argmax---->img_pred_234
img_pred_234_intermediate_1 -----range---->img_pred_234",MODEL_EVALUATION
1722,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[numpy -----argmax---->gtlabel_224_intermediate_1],"img_pred_234_intermediate_1 -----random---->img_pred_234
img_pred_234_intermediate_1 -----reshape---->img_pred_234
img_pred_234_intermediate_1 -----argmax---->img_pred_234
img_pred_234_intermediate_1 -----argmax---->img_pred_234
img_pred_234_intermediate_1 -----range---->img_pred_234",MODEL_EVALUATION
1723,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[input_dim_model_28 -----input dim model---->x_71],"69	    display(Image(url=im[0], width=200, height=200))
70	
71	x = C.input_variable(input_dim_model)
72	y = C.input_variable(num_output_classes)
",MODEL_TRAIN
1724,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[input_dim_29 -----input dim---->reader_eval_207],"205	
206	# Read the data for evaluation
207	reader_eval=create_reader(test_file, False, input_dim, num_output_classes)
208	
",DATA_IMPORT_EXTRACTION
1725,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[num_output_classes_30 -----num output classes---->y_72],"70	
71	x = C.input_variable(input_dim_model)
72	y = C.input_variable(num_output_classes)
73	
",MODEL_TRAIN
1726,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[num_output_classes_30 -----num output classes---->reader_eval_207],"205	
206	# Read the data for evaluation
207	reader_eval=create_reader(test_file, False, input_dim, num_output_classes)
208	
",MODEL_EVALUATION
1727,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[data_found_45 -----loop---->data_found_53],"
",DATA_IMPORT_EXTRACTION
1728,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[data_found_53 -----end_loop---->loop_data_found_45_data_found_53],"
",DATA_IMPORT_EXTRACTION
1729,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[os -----path---->train_file_49_intermediate_1],"img_pred_234_intermediate_1 -----path---->img_pred_234
img_pred_234_intermediate_1 -----path---->img_pred_234
img_pred_234_intermediate_1 -----join---->img_pred_234",DATA_IMPORT_EXTRACTION
1730,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[os -----path---->test_file_50_intermediate_1],"img_pred_234_intermediate_1 -----path---->img_pred_234
img_pred_234_intermediate_1 -----path---->img_pred_234
img_pred_234_intermediate_1 -----join---->img_pred_234",DATA_IMPORT_EXTRACTION
1731,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[test_file_50 -----test file---->reader_eval_207],"205	
206	# Read the data for evaluation
207	reader_eval=create_reader(test_file, False, input_dim, num_output_classes)
208	
",MODEL_EVALUATION
1732,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[loop_data_found_45_data_found_53 -----restart_loop---->data_found_45],"
",DATA_IMPORT_EXTRACTION
1733,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[images_64 -----reassign---->images_238],"236	
237	# Plot images with strides of 2 and 1 with padding turned on
238	images = [(""https://www.cntk.ai/jup/c103d_max_pooling.gif"" , 'Max pooling'),
239	          (""https://www.cntk.ai/jup/c103d_average_pooling.gif"", 'Average pooling')]
",EDA
1734,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[display_69 -----loop---->display_243],"
",EDA
1735,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[x_71 -----x---->z_91],"89	
90	# Create the model
91	z = create_model(x)
92	
",MODEL_TRAIN
1736,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[x_71 -----x---->eval_input_map_210],"208	
209	eval_minibatch_size = 25
210	eval_input_map = {x: reader_eval.streams.features, y:reader_eval.streams.labels} 
211	
",MODEL_EVALUATION
1737,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[x_71 -----data[x]---->img_data_215],"213	
214	img_label = data[y].asarray()
215	img_data = data[x].asarray()
216	
",DATA_IMPORT_EXTRACTION
1738,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[y_72 -----y---->eval_input_map_210],"208	
209	eval_minibatch_size = 25
210	eval_input_map = {x: reader_eval.streams.features, y:reader_eval.streams.labels} 
211	
",MODEL_EVALUATION
1739,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[y_72 -----data[y]---->img_label_214],"212	data = reader_eval.next_minibatch(eval_minibatch_size, input_map=eval_input_map)
213	
214	img_label = data[y].asarray()
215	img_data = data[x].asarray()
",MODEL_EVALUATION
1740,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[z_91 -----z---->C_98],"96	
97	# Number of parameters in the network
98	C.logging.log_number_of_parameters(z)
99	
",MODEL_EVALUATION
1741,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[z_91 -----z---->out_204],"202	print(""Bias value of the last dense layer:"", z.classify.b.value)
203	
204	out = C.softmax(z)
205	
",MODEL_EVALUATION
1742,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[do_train_test_200 -----do train test---->do_train_test_283],"281	            return r
282	        
283	do_train_test()
284	
",MODEL_TRAIN
1743,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[out_204 -----eval---->predicted_label_prob_220_intermediate_1],"cntk -----softmax---->out_204
z_91 -----z---->out_204
img_pred_234_intermediate_1 -----eval---->img_pred_234
img_pred_234_intermediate_1 -----range---->img_pred_234",MODEL_EVALUATION
1744,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[reader_eval_207 -----streams---->eval_input_map_210_intermediate_1],"input_dim_29 -----input dim---->reader_eval_207
num_output_classes_30 -----num output classes---->reader_eval_207
test_file_50 -----test file---->reader_eval_207
img_pred_234_intermediate_1 -----streams---->img_pred_234
img_pred_234_intermediate_1 -----next minibatch---->img_pred_234
img_pred_234_intermediate_1 -----features---->img_pred_234",MODEL_EVALUATION
1745,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[reader_eval_207 -----next minibatch---->data_212],"210	eval_input_map = {x: reader_eval.streams.features, y:reader_eval.streams.labels} 
211	
212	data = reader_eval.next_minibatch(eval_minibatch_size, input_map=eval_input_map)
213	
",MODEL_EVALUATION
1746,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[eval_minibatch_size_209 -----eval minibatch size---->data_212],"210	eval_input_map = {x: reader_eval.streams.features, y:reader_eval.streams.labels} 
211	
212	data = reader_eval.next_minibatch(eval_minibatch_size, input_map=eval_input_map)
213	
",MODEL_EVALUATION
1747,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[data_212 -----data[y]---->img_label_214_intermediate_1],"reader_eval_207 -----next minibatch---->data_212
eval_minibatch_size_209 -----eval minibatch size---->data_212
img_pred_234_intermediate_1 -----data[y]---->img_pred_234
img_pred_234_intermediate_1 -----data[x]---->img_pred_234
img_pred_234_intermediate_1 -----asarray---->img_pred_234",MODEL_EVALUATION
1748,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[data_212 -----data[x]---->img_data_215_intermediate_1],"reader_eval_207 -----next minibatch---->data_212
eval_minibatch_size_209 -----eval minibatch size---->data_212
img_pred_234_intermediate_1 -----data[y]---->img_pred_234
img_pred_234_intermediate_1 -----data[x]---->img_pred_234
img_pred_234_intermediate_1 -----asarray---->img_pred_234",MODEL_EVALUATION
1749,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[img_label_214 -----img label---->gtlabel_224],"222	# Find the index with the maximum value for both predicted as well as the ground truth
223	pred = [np.argmax(predicted_label_prob[i]) for i in range(len(predicted_label_prob))]
224	gtlabel = [np.argmax(img_label[i]) for i in range(len(img_label))]
225	
",MODEL_EVALUATION
1750,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[img_data_215 -----img data---->img_data_218],"216	
217	# reshape img_data to: M x 1 x 28 x 28 to be compatible with model
218	img_data = np.reshape(img_data, (eval_minibatch_size, 1, 28, 28))
219	
",DATA_TRANSFORM
1751,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[img_data_218 -----img data---->predicted_label_prob_220],"218	img_data = np.reshape(img_data, (eval_minibatch_size, 1, 28, 28))
219	
220	predicted_label_prob = [out.eval(img_data[i]) for i in range(len(img_data))]
221	
",MODEL_EVALUATION
1752,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[predicted_label_prob_220 -----predicted label prob---->pred_223],"221	
222	# Find the index with the maximum value for both predicted as well as the ground truth
223	pred = [np.argmax(predicted_label_prob[i]) for i in range(len(predicted_label_prob))]
224	gtlabel = [np.argmax(img_label[i]) for i in range(len(img_label))]
",MODEL_EVALUATION
1753,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[pred_223 -----pred[sample number]---->img_gt_234],"232	plt.axis('off')
233	
234	img_gt, img_pred = gtlabel[sample_number], pred[sample_number]
235	print(""Image Label: "", img_pred)
",MODEL_EVALUATION
1754,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[pred_223 -----pred[sample number]---->img_pred_234],"232	plt.axis('off')
233	
234	img_gt, img_pred = gtlabel[sample_number], pred[sample_number]
235	print(""Image Label: "", img_pred)
",MODEL_EVALUATION
1755,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[gtlabel_224 -----gtlabel[sample number]---->img_gt_234],"232	plt.axis('off')
233	
234	img_gt, img_pred = gtlabel[sample_number], pred[sample_number]
235	print(""Image Label: "", img_pred)
",MODEL_EVALUATION
1756,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[gtlabel_224 -----gtlabel[sample number]---->img_pred_234],"232	plt.axis('off')
233	
234	img_gt, img_pred = gtlabel[sample_number], pred[sample_number]
235	print(""Image Label: "", img_pred)
",MODEL_EVALUATION
1757,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[sample_number_230 -----gtlabel[sample number]---->img_gt_234_intermediate_1],"img_pred_234_intermediate_1 -----gtlabel[sample number]---->img_pred_234
img_pred_234_intermediate_1 -----gtlabel[sample number]---->img_pred_234
img_pred_234_intermediate_1 -----pred[sample number]---->img_pred_234",MODEL_TRAIN
1758,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[sample_number_230 -----gtlabel[sample number]---->img_pred_234_intermediate_1],"img_pred_234_intermediate_1 -----gtlabel[sample number]---->img_pred_234
img_pred_234_intermediate_1 -----gtlabel[sample number]---->img_pred_234
img_pred_234_intermediate_1 -----pred[sample number]---->img_pred_234",MODEL_EVALUATION
1759,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[matplotlib.pyplot -----imshow---->plt_231],"229	# Plot a random image
230	sample_number = 5
231	plt.imshow(img_data[sample_number].reshape(28,28), cmap=""gray_r"")
232	plt.axis('off')
",EDA
1760,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[matplotlib.pyplot -----axis---->plt_232],"230	sample_number = 5
231	plt.imshow(img_data[sample_number].reshape(28,28), cmap=""gray_r"")
232	plt.axis('off')
233	
",EDA
1761,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[display_243 -----end_loop---->loop_display_69_display_243],"
",NOT_INTERESTING
1762,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[loop_display_69_display_243 -----restart_loop---->display_69],"
",MODEL_TRAIN
1763,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[C_20_intermediate_1 -----try set default device---->C_20],"cntk -----device---->C_20_intermediate_1
img_pred_234_intermediate_1 -----try set default device---->img_pred_234",ENVIRONMENT
1764,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[C_22_intermediate_1 -----try set default device---->C_22],"cntk -----device---->C_22_intermediate_1
img_pred_234_intermediate_1 -----try set default device---->img_pred_234",ENVIRONMENT
1765,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[C_98_intermediate_1 -----log number of parameters---->C_98],"cntk -----logging---->C_98_intermediate_1
img_pred_234_intermediate_1 -----log number of parameters---->img_pred_234",MODEL_TRAIN
1766,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[np_25_intermediate_1 -----seed---->np_25],"numpy -----random---->np_25_intermediate_1
img_pred_234_intermediate_1 -----seed---->img_pred_234",ENVIRONMENT
1767,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[pred_223_intermediate_1 -----range---->pred_223],"numpy -----argmax---->pred_223_intermediate_1
img_pred_234_intermediate_1 -----range---->img_pred_234
img_pred_234_intermediate_1 -----pred[sample number]---->img_pred_234
img_pred_234_intermediate_1 -----pred[sample number]---->img_pred_234",MODEL_EVALUATION
1768,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[gtlabel_224_intermediate_1 -----range---->gtlabel_224],"numpy -----argmax---->gtlabel_224_intermediate_1
img_pred_234_intermediate_1 -----range---->img_pred_234
img_pred_234_intermediate_1 -----gtlabel[sample number]---->img_pred_234
img_pred_234_intermediate_1 -----gtlabel[sample number]---->img_pred_234",MODEL_EVALUATION
1769,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[train_file_49_intermediate_1 -----join---->train_file_49],"os -----path---->train_file_49_intermediate_1
img_pred_234_intermediate_1 -----join---->img_pred_234",DATA_IMPORT_EXTRACTION
1770,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[test_file_50_intermediate_1 -----join---->test_file_50],"os -----path---->test_file_50_intermediate_1
img_pred_234_intermediate_1 -----join---->img_pred_234
img_pred_234_intermediate_1 -----test file---->img_pred_234",DATA_IMPORT_EXTRACTION
1771,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[predicted_label_prob_220_intermediate_1 -----range---->predicted_label_prob_220],"out_204 -----eval---->predicted_label_prob_220_intermediate_1
img_pred_234_intermediate_1 -----range---->img_pred_234
img_pred_234_intermediate_1 -----predicted label prob---->img_pred_234",MODEL_EVALUATION
1772,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[eval_input_map_210_intermediate_1 -----features---->eval_input_map_210_intermediate_2],"reader_eval_207 -----streams---->eval_input_map_210_intermediate_1
img_pred_234_intermediate_1 -----features---->img_pred_234
img_pred_234_intermediate_1 -----labels---->img_pred_234",MODEL_EVALUATION
1773,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[eval_input_map_210_intermediate_2 -----labels---->eval_input_map_210],"eval_input_map_210_intermediate_1 -----features---->eval_input_map_210_intermediate_2
img_pred_234_intermediate_1 -----labels---->img_pred_234",MODEL_EVALUATION
1774,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[img_label_214_intermediate_1 -----asarray---->img_label_214],"data_212 -----data[y]---->img_label_214_intermediate_1
img_pred_234_intermediate_1 -----asarray---->img_pred_234
img_pred_234_intermediate_1 -----img label---->img_pred_234",MODEL_EVALUATION
1775,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[img_data_215_intermediate_1 -----asarray---->img_data_215],"data_212 -----data[x]---->img_data_215_intermediate_1
img_pred_234_intermediate_1 -----asarray---->img_pred_234
img_pred_234_intermediate_1 -----img data---->img_pred_234",DATA_TRANSFORM
1776,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[img_gt_234_intermediate_1 -----pred[sample number]---->img_gt_234],"sample_number_230 -----gtlabel[sample number]---->img_gt_234_intermediate_1
img_pred_234_intermediate_1 -----pred[sample number]---->img_pred_234",MODEL_EVALUATION
1777,0000e8a3132856cbd1e92324582f25861676e701.execution_graph,[img_pred_234_intermediate_1 -----pred[sample number]---->img_pred_234],"sample_number_230 -----gtlabel[sample number]---->img_pred_234_intermediate_1
img_pred_234_intermediate_1 -----pred[sample number]---->img_pred_234",MODEL_EVALUATION
1778,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[sys -----path---->sys_2_intermediate_1],"features_70_intermediate_1 -----path---->features_70
features_70_intermediate_1 -----append---->features_70",ENVIRONMENT
1779,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[torchvision -----transforms---->transform_test_8_intermediate_1],"features_70_intermediate_1 -----transforms---->features_70
features_70_intermediate_1 -----compose---->features_70",DATA_TRANSFORM
1780,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[data_loader_17 -----data loader---->vocab_size_50],"48	
49	# The size of the vocabulary.
50	vocab_size = len(data_loader.dataset.vocab)
51	
",DATA_TRANSFORM
1781,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[data_loader -----get loader---->data_loader_17],"15	
16	# Create the data loader.
17	data_loader = get_loader(transform=transform_test,    
18	                         mode='test')
",DATA_TRANSFORM
1782,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[image_24 -----to---->image_67],"65	
66	# Move image Pytorch Tensor to GPU if CUDA is available.
67	image = image.to(device)
68	
",DATA_TRANSFORM
1783,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[matplotlib.pyplot -----imshow---->plt_27],"25	
26	# Visualize sample image, before pre-processing.
27	plt.imshow(np.squeeze(orig_image))
28	plt.title('example image')
",EDA
1784,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[matplotlib.pyplot -----title---->plt_28],"26	# Visualize sample image, before pre-processing.
27	plt.imshow(np.squeeze(orig_image))
28	plt.title('example image')
29	plt.show()
",EDA
1785,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[matplotlib.pyplot -----show---->plt_29],"27	plt.imshow(np.squeeze(orig_image))
28	plt.title('example image')
29	plt.show()
30	
",EDA
1786,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[device_33 -----device---->encoder_63],"61	
62	# Move models to GPU if CUDA is available.
63	encoder.to(device)
64	decoder.to(device)
",ENVIRONMENT
1787,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[device_33 -----device---->decoder_64],"62	# Move models to GPU if CUDA is available.
63	encoder.to(device)
64	decoder.to(device)
65	
",ENVIRONMENT
1788,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[device_33 -----device---->image_67],"65	
66	# Move image Pytorch Tensor to GPU if CUDA is available.
67	image = image.to(device)
68	
",ENVIRONMENT
1789,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[torch -----device---->device_33],"31	import torch
32	
33	device = torch.device(""cuda"" if torch.cuda.is_available() else ""cpu"")
34	
",ENVIRONMENT
1790,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[embed_size_46 -----embed size---->encoder_53],"51	
52	# Initialize the encoder and decoder, and set each to inference mode.
53	encoder = EncoderCNN(embed_size)
54	encoder.eval()
",HYPERPARAMETER_TUNING
1791,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[embed_size_46 -----embed size---->decoder_55],"53	encoder = EncoderCNN(embed_size)
54	encoder.eval()
55	decoder = DecoderRNN(embed_size, hidden_size, vocab_size)
56	decoder.eval()
",HYPERPARAMETER_TUNING
1792,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[hidden_size_47 -----hidden size---->decoder_55],"53	encoder = EncoderCNN(embed_size)
54	encoder.eval()
55	decoder = DecoderRNN(embed_size, hidden_size, vocab_size)
56	decoder.eval()
",HYPERPARAMETER_TUNING
1793,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[vocab_size_50 -----vocab size---->decoder_55],"53	encoder = EncoderCNN(embed_size)
54	encoder.eval()
55	decoder = DecoderRNN(embed_size, hidden_size, vocab_size)
56	decoder.eval()
",HYPERPARAMETER_TUNING
1794,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[encoder_53 -----eval---->encoder_54],"52	# Initialize the encoder and decoder, and set each to inference mode.
53	encoder = EncoderCNN(embed_size)
54	encoder.eval()
55	decoder = DecoderRNN(embed_size, hidden_size, vocab_size)
",MISSING
1795,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[model -----encoder cnn---->encoder_53],"51	
52	# Initialize the encoder and decoder, and set each to inference mode.
53	encoder = EncoderCNN(embed_size)
54	encoder.eval()
",MODEL_TRAIN
1796,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[model -----decoder rnn---->decoder_55],"53	encoder = EncoderCNN(embed_size)
54	encoder.eval()
55	decoder = DecoderRNN(embed_size, hidden_size, vocab_size)
56	decoder.eval()
",MODEL_EVALUATION
1797,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[encoder_54 -----load state dict---->encoder_59],"57	
58	# Load the trained weights.
59	encoder.load_state_dict(torch.load(os.path.join('./models', encoder_file)))
60	decoder.load_state_dict(torch.load(os.path.join('./models', decoder_file)))
",ENVIRONMENT
1798,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[decoder_55 -----eval---->decoder_56],"54	encoder.eval()
55	decoder = DecoderRNN(embed_size, hidden_size, vocab_size)
56	decoder.eval()
57	
",MODEL_EVALUATION
1799,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[decoder_56 -----load state dict---->decoder_60],"58	# Load the trained weights.
59	encoder.load_state_dict(torch.load(os.path.join('./models', encoder_file)))
60	decoder.load_state_dict(torch.load(os.path.join('./models', decoder_file)))
61	
",MODEL_EVALUATION
1800,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[encoder_59 -----to---->encoder_63],"61	
62	# Move models to GPU if CUDA is available.
63	encoder.to(device)
64	decoder.to(device)
",ENVIRONMENT
1801,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[decoder_60 -----to---->decoder_64],"62	# Move models to GPU if CUDA is available.
63	encoder.to(device)
64	decoder.to(device)
65	
",ENVIRONMENT
1802,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[encoder_63 -----encoder---->features_70_intermediate_1],"device_33 -----device---->encoder_63
encoder_59 -----to---->encoder_63
features_70_intermediate_1 -----encoder---->features_70
features_70_intermediate_1 -----unsqueeze---->features_70",MODEL_EVALUATION
1803,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[decoder_64 -----sample---->output_73],"71	
72	# Pass the embedded image features through the model to get a predicted caption.
73	output = decoder.sample(features)
74	print('example output:', output)
",MODEL_EVALUATION
1804,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[image_67 -----image---->features_70],"68	
69	# Obtain the embedded image features.
70	features = encoder(image).unsqueeze(1) # (1, 1, embed_size)
71	
",DATA_TRANSFORM
1805,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[features_70 -----features---->output_73],"71	
72	# Pass the embedded image features through the model to get a predicted caption.
73	output = decoder.sample(features)
74	print('example output:', output)
",MODEL_EVALUATION
1806,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[output_73 -----output---->sentence_97],"95	    return sentence # we can use sentence.strip() method to remove the <start> and <end> tags
96	
97	sentence = clean_sentence(output)
98	print('example sentence:', sentence)
",MODEL_EVALUATION
1807,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[get_prediction_113 -----get prediction---->get_prediction_115],"113	get_prediction()
114	
115	get_prediction()
116	
",MODEL_EVALUATION
1808,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[get_prediction_115 -----get prediction---->get_prediction_117],"115	get_prediction()
116	
117	get_prediction()
118	
",MODEL_EVALUATION
1809,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[get_prediction_117 -----get prediction---->get_prediction_119],"117	get_prediction()
118	
119	get_prediction()
120	
",MODEL_EVALUATION
1810,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[get_prediction_119 -----get prediction---->get_prediction_121],"119	get_prediction()
120	
121	get_prediction()
",MODEL_EVALUATION
1811,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[sys_2_intermediate_1 -----append---->sys_2],"sys -----path---->sys_2_intermediate_1
features_70_intermediate_1 -----append---->features_70",ENVIRONMENT
1812,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[transform_test_8_intermediate_1 -----compose---->transform_test_8],"torchvision -----transforms---->transform_test_8_intermediate_1
features_70_intermediate_1 -----compose---->features_70",DATA_TRANSFORM
1813,0000e937c7229d4f155703fa4670d173695fd911.execution_graph,[features_70_intermediate_1 -----unsqueeze---->features_70],"encoder_63 -----encoder---->features_70_intermediate_1
features_70_intermediate_1 -----unsqueeze---->features_70
features_70_intermediate_1 -----features---->features_70",MODEL_EVALUATION
1814,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[plotly.offline -----init notebook mode---->init_notebook_mode_17],"15	from plotly import tools
16	from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot
17	init_notebook_mode(connected=True)
18	
",ENVIRONMENT
1815,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[PATH_20 -----add---->train_file_21],"19	#Importing testing and training data
20	PATH=""./data/""
21	train_file = PATH+""fashion-mnist_train.csv""
22	test_file = PATH+""fashion-mnist_test.csv""
",DATA_IMPORT_EXTRACTION
1816,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[PATH_20 -----add---->test_file_22],"20	PATH=""./data/""
21	train_file = PATH+""fashion-mnist_train.csv""
22	test_file = PATH+""fashion-mnist_test.csv""
23	train_data = pd.read_csv(train_file)
",DATA_IMPORT_EXTRACTION
1817,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[train_file_21 -----train file---->train_data_23],"21	train_file = PATH+""fashion-mnist_train.csv""
22	test_file = PATH+""fashion-mnist_test.csv""
23	train_data = pd.read_csv(train_file)
24	test_data = pd.read_csv(test_file)
",DATA_IMPORT_EXTRACTION
1818,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[test_file_22 -----test file---->test_data_24],"22	test_file = PATH+""fashion-mnist_test.csv""
23	train_data = pd.read_csv(train_file)
24	test_data = pd.read_csv(test_file)
25	print(""FASHION TRAIN - ROWS:"", train_data.shape[0], "" COLUMNS:"", train_data.shape[1])
",DATA_IMPORT_EXTRACTION
1819,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[train_data_23 -----train data---->get_label_distribution_51],"49	        print(""{:<20s}:   {} or {}%"".format(label, count, percent))
50	
51	get_label_distribution(train_data)
52	
",EDA
1820,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[train_data_23 -----train data---->train_sample_images_80],"78	
79	#getting a sample of the raw data
80	train_sample_images, train_sample_labels = sample_images(train_data)
81	
",EDA
1821,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[train_data_23 -----train data---->train_sample_labels_80],"78	
79	#getting a sample of the raw data
80	train_sample_images, train_sample_labels = sample_images(train_data)
81	
",DATA_TRANSFORM
1822,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[train_data_23 -----train data---->x_109],"107	
108	# prepare the data
109	x, y = data_preprocessing(train_data)
110	x_test, y_test = data_preprocessing(test_data)
",DATA_TRANSFORM
1823,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[train_data_23 -----train data---->y_109],"107	
108	# prepare the data
109	x, y = data_preprocessing(train_data)
110	x_test, y_test = data_preprocessing(test_data)
",DATA_TRANSFORM
1824,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[pandas -----read csv---->train_data_23],"21	train_file = PATH+""fashion-mnist_train.csv""
22	test_file = PATH+""fashion-mnist_test.csv""
23	train_data = pd.read_csv(train_file)
24	test_data = pd.read_csv(test_file)
",DATA_IMPORT_EXTRACTION
1825,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[pandas -----read csv---->test_data_24],"22	test_file = PATH+""fashion-mnist_test.csv""
23	train_data = pd.read_csv(train_file)
24	test_data = pd.read_csv(test_file)
25	print(""FASHION TRAIN - ROWS:"", train_data.shape[0], "" COLUMNS:"", train_data.shape[1])
",DATA_IMPORT_EXTRACTION
1826,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[test_data_24 -----test data---->get_label_distribution_53],"51	get_label_distribution(train_data)
52	
53	get_label_distribution(test_data)
54	
",EDA
1827,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[test_data_24 -----test data---->test_sample_images_96],"94	
95	#plotting test data
96	test_sample_images, test_sample_labels = sample_images(test_data)
97	plot_sample_images(test_sample_images, test_sample_labels)
",EDA
1828,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[test_data_24 -----test data---->test_sample_labels_96],"94	
95	#plotting test data
96	test_sample_images, test_sample_labels = sample_images(test_data)
97	plot_sample_images(test_sample_images, test_sample_labels)
",DATA_TRANSFORM
1829,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[test_data_24 -----test data---->x_test_110],"108	# prepare the data
109	x, y = data_preprocessing(train_data)
110	x_test, y_test = data_preprocessing(test_data)
111	
",DATA_TRANSFORM
1830,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[test_data_24 -----test data---->y_test_110],"108	# prepare the data
109	x, y = data_preprocessing(train_data)
110	x_test, y_test = data_preprocessing(test_data)
111	
",DATA_TRANSFORM
1831,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[test_data_24 -----iloc---->y_true_255],"253	predicted_classes = model.predict_classes(x_test)
254	#get the indices to be plotted
255	y_true = test_data.iloc[:, 0]
256	
",DATA_TRANSFORM
1832,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[get_label_distribution_51 -----get label distribution---->get_label_distribution_53],"51	get_label_distribution(train_data)
52	
53	get_label_distribution(test_data)
54	
",EDA
1833,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[train_sample_images_80 -----train sample images---->plot_sample_images_93],"91	
92	#plotting raw data
93	plot_sample_images(train_sample_images, train_sample_labels)
94	
",EDA
1834,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[train_sample_labels_80 -----train sample labels---->plot_sample_images_93],"91	
92	#plotting raw data
93	plot_sample_images(train_sample_images, train_sample_labels)
94	
",EDA
1835,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[plot_sample_images_93 -----plot sample images---->plot_sample_images_97],"95	#plotting test data
96	test_sample_images, test_sample_labels = sample_images(test_data)
97	plot_sample_images(test_sample_images, test_sample_labels)
98	
",EDA
1836,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[test_sample_images_96 -----test sample images---->plot_sample_images_97],"95	#plotting test data
96	test_sample_images, test_sample_labels = sample_images(test_data)
97	plot_sample_images(test_sample_images, test_sample_labels)
98	
",EDA
1837,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[test_sample_labels_96 -----test sample labels---->plot_sample_images_97],"95	#plotting test data
96	test_sample_images, test_sample_labels = sample_images(test_data)
97	plot_sample_images(test_sample_images, test_sample_labels)
98	
",EDA
1838,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_109 -----x---->x_train_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",DATA_TRANSFORM
1839,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_109 -----x---->x_val_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",MODEL_TRAIN
1840,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_109 -----x---->y_train_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",MODEL_TRAIN
1841,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_109 -----x---->y_val_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",MODEL_TRAIN
1842,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[y_109 -----y---->x_train_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",DATA_TRANSFORM
1843,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[y_109 -----y---->x_val_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",DATA_TRANSFORM
1844,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[y_109 -----y---->y_train_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",DATA_TRANSFORM
1845,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[y_109 -----y---->y_val_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",DATA_TRANSFORM
1846,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[y_109 -----reassign---->y_258],"256	
257	p = predicted_classes[:10000]
258	y = y_true[:10000]
259	correct = np.nonzero(p==y)[0]
",DATA_TRANSFORM
1847,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_test_110 -----shape---->test_size_138],"136	y_train = np.concatenate((y_train, y_augmented))
137	train_size = x_train.shape[0]
138	test_size = x_test.shape[0]
139	
",DATA_TRANSFORM
1848,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_test_110 -----x test---->score_206],"204	
205	# Returns the loss value & metrics values for the model in test mode.
206	score = model.evaluate(x_test, y_test, verbose=0)
207	print('Test loss:', score[0])
",MODEL_EVALUATION
1849,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_test_110 -----x test---->predicted_classes_253],"251	
252	#get the predictions for the test data
253	predicted_classes = model.predict_classes(x_test)
254	#get the indices to be plotted
",MODEL_EVALUATION
1850,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[y_test_110 -----y test---->score_206],"204	
205	# Returns the loss value & metrics values for the model in test mode.
206	score = model.evaluate(x_test, y_test, verbose=0)
207	print('Test loss:', score[0])
",MODEL_EVALUATION
1851,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_train_113 -----x train---->image_generator_130],"128	    zca_whitening = True
129	)
130	image_generator.fit(x_train, augment=True)
131	randidx = np.random.randint(x_train.shape[0], size=5000)
",DATA_TRANSFORM
1852,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_train_113 -----x train---->randidx_131],"129	)
130	image_generator.fit(x_train, augment=True)
131	randidx = np.random.randint(x_train.shape[0], size=5000)
132	x_augmented = x_train[randidx].copy()
",MODEL_TRAIN
1853,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_train_113 -----x train[randidx]---->x_augmented_132_intermediate_1],"x_109 -----x---->x_train_113
y_109 -----y---->x_train_113
sklearn.model_selection -----train test split---->x_train_113
randidx_131_intermediate_1 -----x train---->randidx_131
randidx_131_intermediate_1 -----x train---->randidx_131
randidx_131_intermediate_1 -----x train[randidx]---->randidx_131
randidx_131_intermediate_1 -----reassign---->randidx_131
randidx_131_intermediate_1 -----copy---->randidx_131",DATA_TRANSFORM
1854,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_train_113 -----reassign---->x_train_135],"133	y_augmented = y_train[randidx].copy()
134	x_augmented = image_generator.flow(x_augmented, np.zeros(5000), batch_size=5000, shuffle=False).next()[0]
135	x_train = np.concatenate((x_train, x_augmented))
136	y_train = np.concatenate((y_train, y_augmented))
",MODEL_TRAIN
1855,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[sklearn.model_selection -----train test split---->x_train_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",DATA_TRANSFORM
1856,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[sklearn.model_selection -----train test split---->x_val_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",DATA_TRANSFORM
1857,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[sklearn.model_selection -----train test split---->y_train_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",DATA_TRANSFORM
1858,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[sklearn.model_selection -----train test split---->y_val_113],"111	
112	#Splitting my training data into a training set and a validation set
113	x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=TEST_SIZE)
114	print(""Training Data rows:"",x_train.shape[0],"" columns:"", x_train.shape[1:4])
",DATA_TRANSFORM
1859,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[y_train_113 -----y train[randidx]---->y_augmented_133_intermediate_1],"x_109 -----x---->y_train_113
y_109 -----y---->y_train_113
sklearn.model_selection -----train test split---->y_train_113
randidx_131_intermediate_1 -----y train[randidx]---->randidx_131
randidx_131_intermediate_1 -----reassign---->randidx_131
randidx_131_intermediate_1 -----copy---->randidx_131",DATA_TRANSFORM
1860,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[y_train_113 -----reassign---->y_train_136],"134	x_augmented = image_generator.flow(x_augmented, np.zeros(5000), batch_size=5000, shuffle=False).next()[0]
135	x_train = np.concatenate((x_train, x_augmented))
136	y_train = np.concatenate((y_train, y_augmented))
137	train_size = x_train.shape[0]
",MODEL_TRAIN
1861,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[image_generator_123 -----fit---->image_generator_130],"128	    zca_whitening = True
129	)
130	image_generator.fit(x_train, augment=True)
131	randidx = np.random.randint(x_train.shape[0], size=5000)
",DATA_TRANSFORM
1862,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[keras.preprocessing.image -----image data generator---->image_generator_123],"121	from keras.preprocessing.image import ImageDataGenerator
122	
123	image_generator = ImageDataGenerator(
124	    rotation_range=10,
",DATA_TRANSFORM
1863,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[image_generator_130 -----flow---->x_augmented_134_intermediate_1],"x_train_113 -----x train---->image_generator_130
image_generator_123 -----fit---->image_generator_130
randidx_131_intermediate_1 -----flow---->randidx_131
randidx_131_intermediate_1 -----next---->randidx_131",DATA_TRANSFORM
1864,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[randidx_131 -----x train[randidx]---->x_augmented_132],"130	image_generator.fit(x_train, augment=True)
131	randidx = np.random.randint(x_train.shape[0], size=5000)
132	x_augmented = x_train[randidx].copy()
133	y_augmented = y_train[randidx].copy()
",DATA_TRANSFORM
1865,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[randidx_131 -----y train[randidx]---->y_augmented_133],"131	randidx = np.random.randint(x_train.shape[0], size=5000)
132	x_augmented = x_train[randidx].copy()
133	y_augmented = y_train[randidx].copy()
134	x_augmented = image_generator.flow(x_augmented, np.zeros(5000), batch_size=5000, shuffle=False).next()[0]
",MODEL_TRAIN
1866,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[numpy -----random---->randidx_131_intermediate_1],"randidx_131_intermediate_1 -----random---->randidx_131
randidx_131_intermediate_1 -----concatenate---->randidx_131
randidx_131_intermediate_1 -----concatenate---->randidx_131
randidx_131_intermediate_1 -----nonzero---->randidx_131
randidx_131_intermediate_1 -----nonzero---->randidx_131
randidx_131_intermediate_1 -----randint---->randidx_131",DATA_TRANSFORM
1867,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[numpy -----concatenate---->x_train_135],"133	y_augmented = y_train[randidx].copy()
134	x_augmented = image_generator.flow(x_augmented, np.zeros(5000), batch_size=5000, shuffle=False).next()[0]
135	x_train = np.concatenate((x_train, x_augmented))
136	y_train = np.concatenate((y_train, y_augmented))
",DATA_TRANSFORM
1868,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[numpy -----concatenate---->y_train_136],"134	x_augmented = image_generator.flow(x_augmented, np.zeros(5000), batch_size=5000, shuffle=False).next()[0]
135	x_train = np.concatenate((x_train, x_augmented))
136	y_train = np.concatenate((y_train, y_augmented))
137	train_size = x_train.shape[0]
",MODEL_TRAIN
1869,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[numpy -----nonzero---->correct_259],"257	p = predicted_classes[:10000]
258	y = y_true[:10000]
259	correct = np.nonzero(p==y)[0]
260	incorrect = np.nonzero(p!=y)[0]
",MODEL_EVALUATION
1870,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[numpy -----nonzero---->incorrect_260],"258	y = y_true[:10000]
259	correct = np.nonzero(p==y)[0]
260	incorrect = np.nonzero(p!=y)[0]
261	
",MODEL_EVALUATION
1871,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_augmented_132 -----x augmented---->x_augmented_134],"132	x_augmented = x_train[randidx].copy()
133	y_augmented = y_train[randidx].copy()
134	x_augmented = image_generator.flow(x_augmented, np.zeros(5000), batch_size=5000, shuffle=False).next()[0]
135	x_train = np.concatenate((x_train, x_augmented))
",DATA_TRANSFORM
1872,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_train_135 -----shape---->train_size_137],"135	x_train = np.concatenate((x_train, x_augmented))
136	y_train = np.concatenate((y_train, y_augmented))
137	train_size = x_train.shape[0]
138	test_size = x_test.shape[0]
",DATA_TRANSFORM
1873,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_train_135 -----x train---->train_model_199],"197	    #epochs: Integer. Number of epochs to train the model. 
198	                #An epoch is an iteration over the entire x and y data provided. 
199	train_model = model.fit(x_train, y_train,
200	                  batch_size=BATCH_SIZE,
",MODEL_TRAIN
1874,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[y_train_136 -----y train---->train_model_199],"197	    #epochs: Integer. Number of epochs to train the model. 
198	                #An epoch is an iteration over the entire x and y data provided. 
199	train_model = model.fit(x_train, y_train,
200	                  batch_size=BATCH_SIZE,
",MODEL_TRAIN
1875,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[matplotlib.pyplot -----subplot---->plt_145],"143	images_and_labels = list(zip(x_train, y_train))
144	for index, (image, label) in enumerate(images_and_labels[:12]):
145	    plt.subplot(5, 4, index+1)
146	    plt.axis('off')
",EDA
1876,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[matplotlib.pyplot -----axis---->plt_146],"144	for index, (image, label) in enumerate(images_and_labels[:12]):
145	    plt.subplot(5, 4, index+1)
146	    plt.axis('off')
147	    plt.imshow(image.squeeze(), cmap=""Blues"", interpolation='nearest')
",EDA
1877,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[matplotlib.pyplot -----imshow---->plt_147],"145	    plt.subplot(5, 4, index+1)
146	    plt.axis('off')
147	    plt.imshow(image.squeeze(), cmap=""Blues"", interpolation='nearest')
148	    plt.title('label: ' + labelDict[np.argmax(label)])
",EDA
1878,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[matplotlib.pyplot -----title---->plt_148],"146	    plt.axis('off')
147	    plt.imshow(image.squeeze(), cmap=""Blues"", interpolation='nearest')
148	    plt.title('label: ' + labelDict[np.argmax(label)])
149	
",EDA
1879,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_151 -----add---->model_169],"167	    #activation : relu;
168	    
169	model.add(Conv2D(32, kernel_size=(3, 3),
170	                 activation='relu',
",MODEL_TRAIN
1880,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[tensorflow.python.keras.models -----sequential---->model_151],"149	
150	# Model
151	model = Sequential()
152	#2D convolution layer creates a convolution kernel 
",ENVIRONMENT
1881,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_169 -----add---->model_173],"171	                 kernel_initializer='he_normal',
172	                 input_shape=(IMG_ROWS, IMG_COLS, 1)))
173	model.add(MaxPooling2D((2, 2)))
174	model.add(Conv2D(64, 
",MODEL_TRAIN
1882,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_173 -----add---->model_174],"172	                 input_shape=(IMG_ROWS, IMG_COLS, 1)))
173	model.add(MaxPooling2D((2, 2)))
174	model.add(Conv2D(64, 
175	                 kernel_size=(3, 3), 
",MODEL_TRAIN
1883,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_174 -----add---->model_177],"175	                 kernel_size=(3, 3), 
176	                 activation='relu'))
177	model.add(MaxPooling2D(pool_size=(2, 2)))
178	model.add(Conv2D(128, (3, 3), activation='relu'))
",MODEL_TRAIN
1884,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_177 -----add---->model_178],"176	                 activation='relu'))
177	model.add(MaxPooling2D(pool_size=(2, 2)))
178	model.add(Conv2D(128, (3, 3), activation='relu'))
179	
",MODEL_TRAIN
1885,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_178 -----add---->model_181],"179	
180	#Adding Flatten layer to flatten pooled feature map into column data 
181	model.add(Flatten())
182	
",MODEL_TRAIN
1886,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_181 -----add---->model_184],"182	
183	#Adding Dense layer to perform classification. This layer is a regular fully-connected NN layer.
184	model.add(Dense(128, activation='relu'))
185	model.add(Dense(NUM_CLASSES, activation='softmax'))
",MODEL_TRAIN
1887,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_184 -----add---->model_185],"183	#Adding Dense layer to perform classification. This layer is a regular fully-connected NN layer.
184	model.add(Dense(128, activation='relu'))
185	model.add(Dense(NUM_CLASSES, activation='softmax'))
186	
",MODEL_TRAIN
1888,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_185 -----compile---->model_188],"186	
187	
188	model.compile(loss=keras.losses.categorical_crossentropy,
189	              optimizer='adam',
",MODEL_TRAIN
1889,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_188 -----fit---->train_model_199],"197	    #epochs: Integer. Number of epochs to train the model. 
198	                #An epoch is an iteration over the entire x and y data provided. 
199	train_model = model.fit(x_train, y_train,
200	                  batch_size=BATCH_SIZE,
",MODEL_TRAIN
1890,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_188 -----evaluate---->score_206],"204	
205	# Returns the loss value & metrics values for the model in test mode.
206	score = model.evaluate(x_test, y_test, verbose=0)
207	print('Test loss:', score[0])
",MODEL_EVALUATION
1891,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[model_188 -----predict classes---->predicted_classes_253],"251	
252	#get the predictions for the test data
253	predicted_classes = model.predict_classes(x_test)
254	#get the indices to be plotted
",MODEL_EVALUATION
1892,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[train_model_199 -----train model---->plot_accuracy_and_loss_250],"248	    iplot(fig, filename='accuracy-loss')
249	
250	plot_accuracy_and_loss(train_model)
251	
",MODEL_EVALUATION
1893,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[predicted_classes_253 -----slice---->p_257],"255	y_true = test_data.iloc[:, 0]
256	
257	p = predicted_classes[:10000]
258	y = y_true[:10000]
",MODEL_EVALUATION
1894,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[y_true_255 -----slice---->y_258],"256	
257	p = predicted_classes[:10000]
258	y = y_true[:10000]
259	correct = np.nonzero(p==y)[0]
",DATA_TRANSFORM
1895,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_augmented_132_intermediate_1 -----copy---->x_augmented_132],"x_train_113 -----x train[randidx]---->x_augmented_132_intermediate_1
randidx_131_intermediate_1 -----copy---->randidx_131
randidx_131_intermediate_1 -----x augmented---->randidx_131",DATA_TRANSFORM
1896,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[y_augmented_133_intermediate_1 -----copy---->y_augmented_133],"y_train_113 -----y train[randidx]---->y_augmented_133_intermediate_1
randidx_131_intermediate_1 -----copy---->randidx_131",DATA_TRANSFORM
1897,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[x_augmented_134_intermediate_1 -----next---->x_augmented_134],"image_generator_130 -----flow---->x_augmented_134_intermediate_1
randidx_131_intermediate_1 -----next---->randidx_131",DATA_TRANSFORM
1898,0000eec397b9862e7c488d3625f0d187e05197f3.execution_graph,[randidx_131_intermediate_1 -----randint---->randidx_131],"numpy -----random---->randidx_131_intermediate_1
randidx_131_intermediate_1 -----randint---->randidx_131
randidx_131_intermediate_1 -----x train[randidx]---->randidx_131
randidx_131_intermediate_1 -----y train[randidx]---->randidx_131",DATA_TRANSFORM
1899,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[tensorflow -----compat---->tf_11_intermediate_1],"y_std_25_intermediate_1 -----compat---->y_std_25
y_std_25_intermediate_1 -----v1---->y_std_25",ENVIRONMENT
1900,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_15 -----head---->df_16],"14	
15	df = pd.read_csv('data.csv', names = column_names) 
16	df.head()
17	
",EDA
1901,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[pandas -----read csv---->df_15],"13	print('Libraries imported.')
14	
15	df = pd.read_csv('data.csv', names = column_names) 
16	df.head()
",DATA_IMPORT_EXTRACTION
1902,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_16 -----isna---->df_18_intermediate_1],"df_15 -----head---->df_16
y_std_25_intermediate_1 -----isna---->y_std_25
y_std_25_intermediate_1 -----sum---->y_std_25",EDA
1903,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_18 -----iloc---->df_20],"18	df.isna().sum()
19	
20	df = df.iloc[:,1:]
21	df_norm = (df - df.mean()) / df.std()
",DATA_TRANSFORM
1904,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_20 -----mean---->df_norm_21_intermediate_1],"df_18 -----iloc---->df_20
y_std_25_intermediate_1 -----mean---->y_std_25
y_std_25_intermediate_1 -----select---->y_std_25
y_std_25_intermediate_1 -----select---->y_std_25
y_std_25_intermediate_1 -----sub---->y_std_25",DATA_TRANSFORM
1905,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_20 -----select---->y_mean_24_intermediate_1],"df_18 -----iloc---->df_20
y_std_25_intermediate_1 -----mean---->y_std_25
y_std_25_intermediate_1 -----select---->y_std_25
y_std_25_intermediate_1 -----select---->y_std_25
y_std_25_intermediate_1 -----mean---->y_std_25",DATA_TRANSFORM
1906,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_20 -----select---->y_std_25_intermediate_1],"df_18 -----iloc---->df_20
y_std_25_intermediate_1 -----mean---->y_std_25
y_std_25_intermediate_1 -----select---->y_std_25
y_std_25_intermediate_1 -----select---->y_std_25
y_std_25_intermediate_1 -----std---->y_std_25",DATA_TRANSFORM
1907,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_norm_21 -----head---->df_norm_22],"20	df = df.iloc[:,1:]
21	df_norm = (df - df.mean()) / df.std()
22	df_norm.head()
23	
",DATA_TRANSFORM
1908,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_norm_22 -----iloc---->X_32],"30	print(convert_label_value(0.350088))
31	
32	X = df_norm.iloc[:, :6]
33	X.head()
",DATA_TRANSFORM
1909,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_norm_22 -----iloc---->Y_35],"33	X.head()
34	
35	Y = df_norm.iloc[:, -1]
36	Y.head()
",DATA_TRANSFORM
1910,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[X_32 -----head---->X_33],"31	
32	X = df_norm.iloc[:, :6]
33	X.head()
34	
",EDA
1911,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[X_33 -----values---->X_arr_38],"36	Y.head()
37	
38	X_arr = X.values
39	Y_arr = Y.values
",DATA_TRANSFORM
1912,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[Y_35 -----head---->Y_36],"34	
35	Y = df_norm.iloc[:, -1]
36	Y.head()
37	
",EDA
1913,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[Y_36 -----values---->Y_arr_39],"37	
38	X_arr = X.values
39	Y_arr = Y.values
40	
",DATA_TRANSFORM
1914,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[X_arr_38 -----x arr---->X_train_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",DATA_TRANSFORM
1915,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[X_arr_38 -----x arr---->X_test_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",DATA_TRANSFORM
1916,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[X_arr_38 -----x arr---->y_train_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",MODEL_TRAIN
1917,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[X_arr_38 -----x arr---->y_test_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",MODEL_EVALUATION
1918,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[Y_arr_39 -----y arr---->X_train_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",DATA_TRANSFORM
1919,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[Y_arr_39 -----y arr---->X_test_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",MODEL_EVALUATION
1920,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[Y_arr_39 -----y arr---->y_train_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",MODEL_TRAIN
1921,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[Y_arr_39 -----y arr---->y_test_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",MODEL_EVALUATION
1922,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[X_train_44 -----x train---->history_76],"74	preds_on_untrained = model.predict(X_test)
75	
76	history = model.fit(
77	    X_train, y_train,
",MODEL_TRAIN
1923,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[sklearn.model_selection -----train test split---->X_train_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",MODEL_TRAIN
1924,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[sklearn.model_selection -----train test split---->X_test_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",MODEL_EVALUATION
1925,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[sklearn.model_selection -----train test split---->y_train_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",MODEL_TRAIN
1926,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[sklearn.model_selection -----train test split---->y_test_44],"42	print('Y_arr shape: ', Y_arr.shape)
43	
44	X_train, X_test, y_train, y_test = train_test_split(X_arr, Y_arr, test_size = 0.05, shuffle = True, random_state=0)
45	
",MODEL_EVALUATION
1927,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[X_test_44 -----x test---->preds_on_untrained_74],"72	model = get_model()
73	
74	preds_on_untrained = model.predict(X_test)
75	
",MODEL_EVALUATION
1928,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[X_test_44 -----x test---->preds_on_trained_85],"83	plot_loss(history)
84	
85	preds_on_trained = model.predict(X_test)
86	
",MODEL_EVALUATION
1929,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[y_train_44 -----y train---->history_76],"74	preds_on_untrained = model.predict(X_test)
75	
76	history = model.fit(
77	    X_train, y_train,
",MODEL_TRAIN
1930,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[y_test_44 -----y test---->price_y_test_91],"89	price_on_untrained = [convert_label_value(y) for y in preds_on_untrained]
90	price_on_trained = [convert_label_value(y) for y in preds_on_trained]
91	price_y_test = [convert_label_value(y) for y in y_test]
92	
",MODEL_EVALUATION
1931,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[model_67 -----summary---->model_68],"66	
67	model = get_model()
68	model.summary()
69	
",ENVIRONMENT
1932,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[model_68 -----reassign---->model_72],"70	early_stopping = EarlyStopping(monitor='val_loss', patience = 5)
71	
72	model = get_model()
73	
",ENVIRONMENT
1933,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[tensorflow.keras.callbacks -----early stopping---->early_stopping_70],"68	model.summary()
69	
70	early_stopping = EarlyStopping(monitor='val_loss', patience = 5)
71	
",MODEL_TRAIN
1934,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[model_72 -----predict---->preds_on_untrained_74],"72	model = get_model()
73	
74	preds_on_untrained = model.predict(X_test)
75	
",MODEL_EVALUATION
1935,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[model_72 -----fit---->history_76],"74	preds_on_untrained = model.predict(X_test)
75	
76	history = model.fit(
77	    X_train, y_train,
",MODEL_TRAIN
1936,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[model_72 -----predict---->preds_on_trained_85],"83	plot_loss(history)
84	
85	preds_on_trained = model.predict(X_test)
86	
",MODEL_EVALUATION
1937,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[preds_on_untrained_74 -----preds on untrained---->price_on_untrained_89],"87	compare_predictions(preds_on_untrained, preds_on_trained, y_test)
88	
89	price_on_untrained = [convert_label_value(y) for y in preds_on_untrained]
90	price_on_trained = [convert_label_value(y) for y in preds_on_trained]
",MODEL_EVALUATION
1938,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[preds_on_trained_85 -----preds on trained---->price_on_trained_90],"88	
89	price_on_untrained = [convert_label_value(y) for y in preds_on_untrained]
90	price_on_trained = [convert_label_value(y) for y in preds_on_trained]
91	price_y_test = [convert_label_value(y) for y in y_test]
",MODEL_EVALUATION
1939,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[tf_11_intermediate_1 -----v1---->tf_11_intermediate_2],"tensorflow -----compat---->tf_11_intermediate_1
y_std_25_intermediate_1 -----v1---->y_std_25
y_std_25_intermediate_1 -----logging---->y_std_25",MODEL_TRAIN
1940,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[tf_11_intermediate_2 -----logging---->tf_11_intermediate_3],"tf_11_intermediate_1 -----v1---->tf_11_intermediate_2
y_std_25_intermediate_1 -----logging---->y_std_25
y_std_25_intermediate_1 -----set verbosity---->y_std_25",ENVIRONMENT
1941,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[tf_11_intermediate_3 -----set verbosity---->tf_11],"tf_11_intermediate_2 -----logging---->tf_11_intermediate_3
y_std_25_intermediate_1 -----set verbosity---->y_std_25",ENVIRONMENT
1942,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_18_intermediate_1 -----sum---->df_18],"df_16 -----isna---->df_18_intermediate_1
y_std_25_intermediate_1 -----sum---->y_std_25
y_std_25_intermediate_1 -----iloc---->y_std_25",EDA
1943,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_norm_21_intermediate_1 -----sub---->df_norm_21_intermediate_2],"df_20 -----mean---->df_norm_21_intermediate_1
y_std_25_intermediate_1 -----sub---->y_std_25
y_std_25_intermediate_1 -----std---->y_std_25",DATA_TRANSFORM
1944,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_norm_21_intermediate_2 -----std---->df_norm_21_intermediate_3],"df_norm_21_intermediate_1 -----sub---->df_norm_21_intermediate_2
y_std_25_intermediate_1 -----std---->y_std_25
y_std_25_intermediate_1 -----div---->y_std_25",DATA_TRANSFORM
1945,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[df_norm_21_intermediate_3 -----div---->df_norm_21],"df_norm_21_intermediate_2 -----std---->df_norm_21_intermediate_3
y_std_25_intermediate_1 -----div---->y_std_25
y_std_25_intermediate_1 -----head---->y_std_25",DATA_TRANSFORM
1946,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[y_mean_24_intermediate_1 -----mean---->y_mean_24],"df_20 -----select---->y_mean_24_intermediate_1
y_std_25_intermediate_1 -----mean---->y_std_25",DATA_TRANSFORM
1947,0000ef8ab4e8e013dc50b6104d4cb435b18e87a2.execution_graph,[y_std_25_intermediate_1 -----std---->y_std_25],"df_20 -----select---->y_std_25_intermediate_1
y_std_25_intermediate_1 -----std---->y_std_25",DATA_TRANSFORM
1948,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[warnings -----filterwarnings---->warnings_2],"
1	import warnings
2	warnings.filterwarnings('ignore')
3	
",ENVIRONMENT
1949,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_11 -----select---->df_13_intermediate_1],"pandas -----read csv---->df_11
lambda_prophet_159_intermediate_1 -----select---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----dropna---->lambda_prophet_159",DATA_TRANSFORM
1950,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[pandas -----read csv---->df_11],"9	
10	
11	df = pd.read_csv('./medium_posts.csv.zip', sep='\t')
12	
",DATA_IMPORT_EXTRACTION
1951,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[pandas -----to datetime---->df_15],"13	df = df[['published', 'url']].dropna().drop_duplicates()
14	
15	df['published'] = pd.to_datetime(df['published'])
16	
",DATA_TRANSFORM
1952,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_13 -----df---->df_15],"13	df = df[['published', 'url']].dropna().drop_duplicates()
14	
15	df['published'] = pd.to_datetime(df['published'])
16	
",DATA_TRANSFORM
1953,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_15 -----sort values---->df_17_intermediate_1],"pandas -----to datetime---->df_15
df_13 -----df---->df_15
lambda_prophet_159_intermediate_1 -----sort values---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----head---->lambda_prophet_159",DATA_TRANSFORM
1954,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_17 -----df[(df['published'] > '2012-08-15') & (df['published'] < '2017-06-26')]---->df_19_intermediate_1],"df_17_intermediate_1 -----head---->df_17
lambda_prophet_159_intermediate_1 -----df[(df['published'] > '2012-08-15') & (df['published'] < '2017-06-26')]---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----select---->lambda_prophet_159",DATA_TRANSFORM
1955,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_19 -----head---->df_20],"18	
19	df = df[(df['published'] > '2012-08-15') & (df['published'] < '2017-06-26')].sort_values(by=['published'])
20	df.head(n=3)
21	
",DATA_TRANSFORM
1956,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_20 -----tail---->df_22],"20	df.head(n=3)
21	
22	df.tail(n=3)
23	
",DATA_TRANSFORM
1957,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_22 -----groupby---->aggr_df_24_intermediate_1],"df_20 -----tail---->df_22
lambda_prophet_159_intermediate_1 -----groupby---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----reassign---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----count---->lambda_prophet_159",DATA_TRANSFORM
1958,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_22 -----reassign---->df_60],"58	logging.getLogger().setLevel(logging.ERROR)
59	
60	df = daily_df.reset_index()
61	df.columns = ['ds', 'y']
",MODEL_TRAIN
1959,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[aggr_df_24 -----reassign---->aggr_df_25],"23	
24	aggr_df = df.groupby('published')[['url']].count()
25	aggr_df.columns = ['posts']
26	
",DATA_TRANSFORM
1960,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[aggr_df_25 -----head---->aggr_df_27],"25	aggr_df.columns = ['posts']
26	
27	aggr_df.head(n=3)
28	
",EDA
1961,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[columns_25 -----reassign---->columns_61],"59	
60	df = daily_df.reset_index()
61	df.columns = ['ds', 'y']
62	df.tail(n=3)
",DATA_TRANSFORM
1962,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[aggr_df_27 -----resample---->daily_df_29_intermediate_1],"aggr_df_25 -----head---->aggr_df_27
lambda_prophet_159_intermediate_1 -----resample---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----apply---->lambda_prophet_159",DATA_TRANSFORM
1963,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[daily_df_29 -----head---->daily_df_30],"28	
29	daily_df = aggr_df.resample('D').apply(sum)
30	daily_df.head(n=3)
31	
",EDA
1964,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[daily_df_30 -----daily df---->plotly_df_46],"44	    iplot(fig, show_link=False)
45	
46	plotly_df(daily_df, title='Posts on Medium (daily)')
47	
",EDA
1965,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[daily_df_30 -----resample---->weekly_df_48_intermediate_1],"daily_df_29 -----head---->daily_df_30
lambda_prophet_159_intermediate_1 -----daily df---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----resample---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----loc---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----apply---->lambda_prophet_159",DATA_TRANSFORM
1966,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[daily_df_30 -----loc---->daily_df_52_intermediate_1],"daily_df_29 -----head---->daily_df_30
lambda_prophet_159_intermediate_1 -----daily df---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----resample---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----loc---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----index---->lambda_prophet_159",DATA_TRANSFORM
1967,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[plotly.offline -----init notebook mode---->init_notebook_mode_36],"34	
35	# Initialize plotly
36	init_notebook_mode(connected=True)
37	
",ENVIRONMENT
1968,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[plotly_df_46 -----plotly df---->plotly_df_50],"48	weekly_df = daily_df.resample('W').apply(sum)
49	
50	plotly_df(weekly_df, title='Posts on Medium (weekly)')
51	
",EDA
1969,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[weekly_df_48 -----weekly df---->plotly_df_50],"48	weekly_df = daily_df.resample('W').apply(sum)
49	
50	plotly_df(weekly_df, title='Posts on Medium (weekly)')
51	
",DATA_TRANSFORM
1970,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[daily_df_52 -----head---->daily_df_53],"51	
52	daily_df = daily_df.loc[daily_df.index >= '2015-01-01']
53	daily_df.head(n=3)
54	
",DATA_TRANSFORM
1971,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[daily_df_53 -----reset index---->df_60],"58	logging.getLogger().setLevel(logging.ERROR)
59	
60	df = daily_df.reset_index()
61	df.columns = ['ds', 'y']
",DATA_TRANSFORM
1972,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[logging -----get logger---->logging_58_intermediate_1],"lambda_prophet_159_intermediate_1 -----get logger---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----set level---->lambda_prophet_159",ENVIRONMENT
1973,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_60 -----reassign---->df_61],"59	
60	df = daily_df.reset_index()
61	df.columns = ['ds', 'y']
62	df.tail(n=3)
",MODEL_TRAIN
1974,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_61 -----tail---->df_62],"60	df = daily_df.reset_index()
61	df.columns = ['ds', 'y']
62	df.tail(n=3)
63	
",EDA
1975,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_62 -----slice---->train_df_65],"63	
64	prediction_size = 30
65	train_df = df[:-prediction_size]
66	train_df.tail(n=3)
",DATA_TRANSFORM
1976,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_62 -----df---->cmp_df_90],"88	    return forecast.set_index('ds')[['yhat', 'yhat_lower', 'yhat_upper']].join(historical.set_index('ds'))
89	
90	cmp_df = make_comparison_dataframe(df, forecast)
91	cmp_df.tail(n=3)
",MODEL_EVALUATION
1977,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_62 -----df---->cmp_df2_170],"168	    forecast2[column] = inverse_boxcox(forecast2[column], lambda_prophet)
169	
170	cmp_df2 = make_comparison_dataframe(df, forecast2)
171	for err_name, err_value in calculate_forecast_errors(cmp_df2, prediction_size).items():
",MODEL_EVALUATION
1978,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[prediction_size_64 -----prediction size---->train_df_65],"63	
64	prediction_size = 30
65	train_df = df[:-prediction_size]
66	train_df.tail(n=3)
",DATA_TRANSFORM
1979,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[prediction_size_64 -----prediction size---->show_forecast_152],"150	    iplot(fig, show_link=False)
151	
152	show_forecast(cmp_df, prediction_size, 100, 'New posts on Medium')
153	
",MODEL_EVALUATION
1980,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[prediction_size_64 -----prediction size---->show_forecast_174],"172	    print(err_name, err_value)
173	
174	show_forecast(cmp_df, prediction_size, 100, 'No transformations')
175	show_forecast(cmp_df2, prediction_size, 100, 'Box–Cox transformation')
",MODEL_EVALUATION
1981,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[prediction_size_64 -----prediction size---->show_forecast_175],"173	
174	show_forecast(cmp_df, prediction_size, 100, 'No transformations')
175	show_forecast(cmp_df2, prediction_size, 100, 'Box–Cox transformation')
176	
",MODEL_EVALUATION
1982,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[train_df_65 -----tail---->train_df_66],"64	prediction_size = 30
65	train_df = df[:-prediction_size]
66	train_df.tail(n=3)
67	
",DATA_TRANSFORM
1983,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[train_df_66 -----train df---->m_69],"67	
68	m = Prophet()
69	m.fit(train_df);
70	
",MODEL_TRAIN
1984,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[train_df_66 -----copy---->train_df2_157_intermediate_1],"train_df_65 -----tail---->train_df_66
lambda_prophet_159_intermediate_1 -----train df---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----copy---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----set index---->lambda_prophet_159",DATA_TRANSFORM
1985,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[m_68 -----fit---->m_69],"67	
68	m = Prophet()
69	m.fit(train_df);
70	
",MODEL_TRAIN
1986,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[fbprophet -----prophet---->m_68],"66	train_df.tail(n=3)
67	
68	m = Prophet()
69	m.fit(train_df);
",ENVIRONMENT
1987,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[fbprophet -----prophet---->m2_162],"160	train_df2.reset_index(inplace=True)
161	
162	m2 = Prophet()
163	m2.fit(train_df2)
",ENVIRONMENT
1988,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[m_69 -----make future dataframe---->future_71],"69	m.fit(train_df);
70	
71	future = m.make_future_dataframe(periods=prediction_size)
72	future.tail(n=3)
",MODEL_TRAIN
1989,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[m_69 -----predict---->forecast_74],"72	future.tail(n=3)
73	
74	forecast = m.predict(future)
75	forecast.tail(n=3)
",MODEL_EVALUATION
1990,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[m_69 -----plot---->m_77],"75	forecast.tail(n=3)
76	
77	m.plot(forecast);
78	
",MODEL_EVALUATION
1991,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[future_71 -----tail---->future_72],"70	
71	future = m.make_future_dataframe(periods=prediction_size)
72	future.tail(n=3)
73	
",DATA_TRANSFORM
1992,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[future_72 -----future---->forecast_74],"72	future.tail(n=3)
73	
74	forecast = m.predict(future)
75	forecast.tail(n=3)
",MODEL_EVALUATION
1993,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[forecast_74 -----tail---->forecast_75],"73	
74	forecast = m.predict(future)
75	forecast.tail(n=3)
76	
",EDA
1994,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[forecast_75 -----forecast---->m_77],"75	forecast.tail(n=3)
76	
77	m.plot(forecast);
78	
",MODEL_EVALUATION
1995,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[forecast_75 -----forecast---->m_79],"77	m.plot(forecast);
78	
79	m.plot_components(forecast);
80	
",MODEL_EVALUATION
1996,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[forecast_75 -----forecast---->cmp_df_90],"88	    return forecast.set_index('ds')[['yhat', 'yhat_lower', 'yhat_upper']].join(historical.set_index('ds'))
89	
90	cmp_df = make_comparison_dataframe(df, forecast)
91	cmp_df.tail(n=3)
",MODEL_EVALUATION
1997,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[m_77 -----plot components---->m_79],"77	m.plot(forecast);
78	
79	m.plot_components(forecast);
80	
",MODEL_EVALUATION
1998,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[cmp_df_90 -----tail---->cmp_df_91],"89	
90	cmp_df = make_comparison_dataframe(df, forecast)
91	cmp_df.tail(n=3)
92	
",EDA
1999,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[cmp_df_91 -----cmp df---->show_forecast_152],"150	    iplot(fig, show_link=False)
151	
152	show_forecast(cmp_df, prediction_size, 100, 'New posts on Medium')
153	
",EDA
2000,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[cmp_df_91 -----cmp df---->show_forecast_174],"172	    print(err_name, err_value)
173	
174	show_forecast(cmp_df, prediction_size, 100, 'No transformations')
175	show_forecast(cmp_df2, prediction_size, 100, 'Box–Cox transformation')
",EDA
2001,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[show_forecast_152 -----show forecast---->show_forecast_174],"172	    print(err_name, err_value)
173	
174	show_forecast(cmp_df, prediction_size, 100, 'No transformations')
175	show_forecast(cmp_df2, prediction_size, 100, 'Box–Cox transformation')
",MODEL_EVALUATION
2002,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[train_df2_157 -----train df2---->train_df2_159],"157	train_df2 = train_df.copy().set_index('ds')
158	
159	train_df2['y'], lambda_prophet = stats.boxcox(train_df2['y'])
160	train_df2.reset_index(inplace=True)
",DATA_TRANSFORM
2003,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[train_df2_159 -----train df2---->lambda_prophet_159],"157	train_df2 = train_df.copy().set_index('ds')
158	
159	train_df2['y'], lambda_prophet = stats.boxcox(train_df2['y'])
160	train_df2.reset_index(inplace=True)
",DATA_TRANSFORM
2004,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[train_df2_159 -----reset index---->train_df2_160],"158	
159	train_df2['y'], lambda_prophet = stats.boxcox(train_df2['y'])
160	train_df2.reset_index(inplace=True)
161	
",DATA_TRANSFORM
2005,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[scipy -----stats---->train_df2_159_intermediate_1],"lambda_prophet_159_intermediate_1 -----stats---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----stats---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----boxcox---->lambda_prophet_159",DATA_TRANSFORM
2006,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[scipy -----stats---->lambda_prophet_159_intermediate_1],"lambda_prophet_159_intermediate_1 -----stats---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----stats---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----boxcox---->lambda_prophet_159",DATA_TRANSFORM
2007,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[lambda_prophet_159 -----lambda prophet---->forecast2_168],"166	
167	for column in ['yhat', 'yhat_lower', 'yhat_upper']:
168	    forecast2[column] = inverse_boxcox(forecast2[column], lambda_prophet)
169	
",DATA_TRANSFORM
2008,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[train_df2_160 -----train df2---->m2_163],"161	
162	m2 = Prophet()
163	m2.fit(train_df2)
164	future2 = m2.make_future_dataframe(periods=prediction_size)
",MODEL_TRAIN
2009,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[m2_162 -----fit---->m2_163],"161	
162	m2 = Prophet()
163	m2.fit(train_df2)
164	future2 = m2.make_future_dataframe(periods=prediction_size)
",MODEL_TRAIN
2010,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[m2_163 -----make future dataframe---->future2_164],"162	m2 = Prophet()
163	m2.fit(train_df2)
164	future2 = m2.make_future_dataframe(periods=prediction_size)
165	forecast2 = m2.predict(future2)
",DATA_TRANSFORM
2011,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[m2_163 -----predict---->forecast2_165],"163	m2.fit(train_df2)
164	future2 = m2.make_future_dataframe(periods=prediction_size)
165	forecast2 = m2.predict(future2)
166	
",MODEL_EVALUATION
2012,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[future2_164 -----future2---->forecast2_165],"163	m2.fit(train_df2)
164	future2 = m2.make_future_dataframe(periods=prediction_size)
165	forecast2 = m2.predict(future2)
166	
",MODEL_EVALUATION
2013,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[forecast2_165 -----loop---->forecast2_168],"
",DATA_TRANSFORM
2014,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[forecast2_168 -----end_loop---->loop_forecast2_165_forecast2_168],"
",MODEL_TRAIN
2015,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[loop_forecast2_165_forecast2_168 -----restart_loop---->forecast2_165],"
",DATA_TRANSFORM
2016,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[loop_forecast2_165_forecast2_168 -----forecast2---->cmp_df2_170],"168	    forecast2[column] = inverse_boxcox(forecast2[column], lambda_prophet)
169	
170	cmp_df2 = make_comparison_dataframe(df, forecast2)
171	for err_name, err_value in calculate_forecast_errors(cmp_df2, prediction_size).items():
",MODEL_EVALUATION
2017,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[cmp_df2_170 -----cmp df2---->show_forecast_175],"173	
174	show_forecast(cmp_df, prediction_size, 100, 'No transformations')
175	show_forecast(cmp_df2, prediction_size, 100, 'Box–Cox transformation')
176	
",MODEL_EVALUATION
2018,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[show_forecast_174 -----show forecast---->show_forecast_175],"173	
174	show_forecast(cmp_df, prediction_size, 100, 'No transformations')
175	show_forecast(cmp_df2, prediction_size, 100, 'Box–Cox transformation')
176	
",MODEL_EVALUATION
2019,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_13_intermediate_1 -----dropna---->df_13_intermediate_2],"df_11 -----select---->df_13_intermediate_1
lambda_prophet_159_intermediate_1 -----dropna---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----drop duplicates---->lambda_prophet_159",DATA_TRANSFORM
2020,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_13_intermediate_2 -----drop duplicates---->df_13],"df_13_intermediate_1 -----dropna---->df_13_intermediate_2
lambda_prophet_159_intermediate_1 -----drop duplicates---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----df---->lambda_prophet_159",DATA_TRANSFORM
2021,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_17_intermediate_1 -----head---->df_17],"df_15 -----sort values---->df_17_intermediate_1
lambda_prophet_159_intermediate_1 -----head---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----df[(df['published'] > '2012-08-15') & (df['published'] < '2017-06-26')]---->lambda_prophet_159",DATA_TRANSFORM
2022,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_19_intermediate_1 -----select---->df_19_intermediate_2],"df_17 -----df[(df['published'] > '2012-08-15') & (df['published'] < '2017-06-26')]---->df_19_intermediate_1
lambda_prophet_159_intermediate_1 -----select---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----greater than---->lambda_prophet_159",DATA_TRANSFORM
2023,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_19_intermediate_2 -----greater than---->df_19_intermediate_3],"df_19_intermediate_1 -----select---->df_19_intermediate_2
lambda_prophet_159_intermediate_1 -----greater than---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----less than---->lambda_prophet_159",DATA_TRANSFORM
2024,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_19_intermediate_3 -----less than---->df_19_intermediate_4],"df_19_intermediate_2 -----greater than---->df_19_intermediate_3
lambda_prophet_159_intermediate_1 -----less than---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----sort values---->lambda_prophet_159",DATA_TRANSFORM
2025,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[df_19_intermediate_4 -----sort values---->df_19],"df_19_intermediate_3 -----less than---->df_19_intermediate_4
lambda_prophet_159_intermediate_1 -----sort values---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----head---->lambda_prophet_159",DATA_TRANSFORM
2026,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[aggr_df_24_intermediate_1 -----count---->aggr_df_24],"df_22 -----groupby---->aggr_df_24_intermediate_1
lambda_prophet_159_intermediate_1 -----count---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----reassign---->lambda_prophet_159",DATA_TRANSFORM
2027,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[daily_df_29_intermediate_1 -----apply---->daily_df_29],"aggr_df_27 -----resample---->daily_df_29_intermediate_1
lambda_prophet_159_intermediate_1 -----apply---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----head---->lambda_prophet_159",DATA_TRANSFORM
2028,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[weekly_df_48_intermediate_1 -----apply---->weekly_df_48],"daily_df_30 -----resample---->weekly_df_48_intermediate_1
lambda_prophet_159_intermediate_1 -----apply---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----weekly df---->lambda_prophet_159",DATA_TRANSFORM
2029,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[daily_df_52_intermediate_1 -----index---->daily_df_52_intermediate_2],"daily_df_30 -----loc---->daily_df_52_intermediate_1
lambda_prophet_159_intermediate_1 -----index---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----greater than or equal---->lambda_prophet_159",DATA_TRANSFORM
2030,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[daily_df_52_intermediate_2 -----greater than or equal---->daily_df_52],"daily_df_52_intermediate_1 -----index---->daily_df_52_intermediate_2
lambda_prophet_159_intermediate_1 -----greater than or equal---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----head---->lambda_prophet_159",DATA_TRANSFORM
2031,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[logging_58_intermediate_1 -----set level---->logging_58],"logging -----get logger---->logging_58_intermediate_1
lambda_prophet_159_intermediate_1 -----set level---->lambda_prophet_159",ENVIRONMENT
2032,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[train_df2_157_intermediate_1 -----set index---->train_df2_157],"train_df_66 -----copy---->train_df2_157_intermediate_1
lambda_prophet_159_intermediate_1 -----set index---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----train df2---->lambda_prophet_159",DATA_TRANSFORM
2033,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[train_df2_159_intermediate_1 -----boxcox---->train_df2_159],"scipy -----stats---->train_df2_159_intermediate_1
lambda_prophet_159_intermediate_1 -----boxcox---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----train df2---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----reset index---->lambda_prophet_159",DATA_TRANSFORM
2034,0000f1ad9cf621e91609cedefc59c16a244bdb1d.execution_graph,[lambda_prophet_159_intermediate_1 -----boxcox---->lambda_prophet_159],"scipy -----stats---->lambda_prophet_159_intermediate_1
lambda_prophet_159_intermediate_1 -----boxcox---->lambda_prophet_159
lambda_prophet_159_intermediate_1 -----lambda prophet---->lambda_prophet_159",DATA_TRANSFORM
2035,0000f50438ba509c2636906411c131d90707e118.execution_graph,[seaborn -----set---->sns_13],"11	from IPython.display import HTML
12	import seaborn as sns
13	sns.set()
14	
",ENVIRONMENT
2036,0000f50438ba509c2636906411c131d90707e118.execution_graph,[df_15 -----head---->df_16],"14	
15	df = pd.read_csv('Iris.csv')
16	df.head()
17	
",EDA
2037,0000f50438ba509c2636906411c131d90707e118.execution_graph,[pandas -----read csv---->df_15],"13	sns.set()
14	
15	df = pd.read_csv('Iris.csv')
16	df.head()
",DATA_IMPORT_EXTRACTION
2038,0000f50438ba509c2636906411c131d90707e118.execution_graph,[df_16 -----df---->Y_19],"17	
18	X = PCA(n_components=2).fit_transform(MinMaxScaler().fit_transform(df.iloc[:, 1:-1]))
19	Y = LabelEncoder().fit_transform(df.iloc[:, -1])
20	
",DATA_TRANSFORM
2039,0000f50438ba509c2636906411c131d90707e118.execution_graph,[X_18 -----x---->W1_25],"23	momentum = 0.8
24	
25	W1 = np.random.randn(X.shape[1]) / np.sqrt(X.shape[1])
26	b1 = np.zeros((1, X.shape[1]))
",MODEL_TRAIN
2040,0000f50438ba509c2636906411c131d90707e118.execution_graph,[X_18 -----x---->W2_30],"28	beta_W1 = np.zeros(W1.shape[0])
29	
30	W2 = np.random.randn(X.shape[1], hidden_size) / np.sqrt(X.shape[1])
31	b2 = np.zeros((1, hidden_size))
",MODEL_TRAIN
2041,0000f50438ba509c2636906411c131d90707e118.execution_graph,"[X_18 -----x[:, 0]---->x_min_117_intermediate_1]","X_18_intermediate_1 -----fit transform---->X_18
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----x[:, 0]---->anim_128
anim_128_intermediate_1 -----x[:, 0]---->anim_128
anim_128_intermediate_1 -----x[:, 1]---->anim_128
anim_128_intermediate_1 -----x[:, 1]---->anim_128
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----min---->anim_128",EDA
2042,0000f50438ba509c2636906411c131d90707e118.execution_graph,"[X_18 -----x[:, 0]---->x_max_117_intermediate_1]","X_18_intermediate_1 -----fit transform---->X_18
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----x[:, 0]---->anim_128
anim_128_intermediate_1 -----x[:, 0]---->anim_128
anim_128_intermediate_1 -----x[:, 1]---->anim_128
anim_128_intermediate_1 -----x[:, 1]---->anim_128
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----min---->anim_128",MODEL_TRAIN
2043,0000f50438ba509c2636906411c131d90707e118.execution_graph,"[X_18 -----x[:, 1]---->y_min_118_intermediate_1]","X_18_intermediate_1 -----fit transform---->X_18
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----x[:, 0]---->anim_128
anim_128_intermediate_1 -----x[:, 0]---->anim_128
anim_128_intermediate_1 -----x[:, 1]---->anim_128
anim_128_intermediate_1 -----x[:, 1]---->anim_128
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----min---->anim_128",EDA
2044,0000f50438ba509c2636906411c131d90707e118.execution_graph,"[X_18 -----x[:, 1]---->y_max_118_intermediate_1]","X_18_intermediate_1 -----fit transform---->X_18
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----x[:, 0]---->anim_128
anim_128_intermediate_1 -----x[:, 0]---->anim_128
anim_128_intermediate_1 -----x[:, 1]---->anim_128
anim_128_intermediate_1 -----x[:, 1]---->anim_128
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----min---->anim_128",EDA
2045,0000f50438ba509c2636906411c131d90707e118.execution_graph,[X_18 -----x---->plt_124],"122	Z = Z.reshape(xx.shape)
123	plt.contourf(xx, yy, Z, cmap=plt.cm.Spectral)
124	plt.scatter(X[:, 0], X[:, 1], c=Y, cmap=plt.cm.Spectral)
125	predicted= np.argmax(predict(X),axis=1)
",EDA
2046,0000f50438ba509c2636906411c131d90707e118.execution_graph,[sklearn.decomposition -----pca---->X_18_intermediate_1],"anim_128_intermediate_1 -----pca---->anim_128
anim_128_intermediate_1 -----fit transform---->anim_128",MODEL_TRAIN
2047,0000f50438ba509c2636906411c131d90707e118.execution_graph,[sklearn.preprocessing -----label encoder---->Y_19_intermediate_1],"anim_128_intermediate_1 -----label encoder---->anim_128
anim_128_intermediate_1 -----fit transform---->anim_128",DATA_TRANSFORM
2048,0000f50438ba509c2636906411c131d90707e118.execution_graph,[hidden_size_21 -----hidden size---->W2_30],"28	beta_W1 = np.zeros(W1.shape[0])
29	
30	W2 = np.random.randn(X.shape[1], hidden_size) / np.sqrt(X.shape[1])
31	b2 = np.zeros((1, hidden_size))
",DATA_TRANSFORM
2049,0000f50438ba509c2636906411c131d90707e118.execution_graph,[hidden_size_21 -----hidden size---->W3_35],"33	beta_W2 = np.zeros(W2.shape[1])
34	
35	W3 = np.random.randn(hidden_size, 3) / np.sqrt(hidden_size)
36	b3 = np.zeros((1, 3))
",MODEL_TRAIN
2050,0000f50438ba509c2636906411c131d90707e118.execution_graph,[W1_25 -----w1---->gamma_W1_27],"25	W1 = np.random.randn(X.shape[1]) / np.sqrt(X.shape[1])
26	b1 = np.zeros((1, X.shape[1]))
27	gamma_W1 = np.ones(W1.shape[0])
28	beta_W1 = np.zeros(W1.shape[0])
",MODEL_TRAIN
2051,0000f50438ba509c2636906411c131d90707e118.execution_graph,[W1_25 -----w1---->beta_W1_28],"26	b1 = np.zeros((1, X.shape[1]))
27	gamma_W1 = np.ones(W1.shape[0])
28	beta_W1 = np.zeros(W1.shape[0])
29	
",MODEL_TRAIN
2052,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----random---->W1_25_intermediate_1],"anim_128_intermediate_1 -----random---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----ones---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----random---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----ones---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----random---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----meshgrid---->anim_128
anim_128_intermediate_1 -----meshgrid---->anim_128
anim_128_intermediate_1 -----argmax---->anim_128
anim_128_intermediate_1 -----argmax---->anim_128
anim_128_intermediate_1 -----mean---->anim_128
anim_128_intermediate_1 -----randn---->anim_128",MODEL_TRAIN
2053,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----zeros---->b1_26],"24	
25	W1 = np.random.randn(X.shape[1]) / np.sqrt(X.shape[1])
26	b1 = np.zeros((1, X.shape[1]))
27	gamma_W1 = np.ones(W1.shape[0])
",MODEL_TRAIN
2054,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----ones---->gamma_W1_27],"25	W1 = np.random.randn(X.shape[1]) / np.sqrt(X.shape[1])
26	b1 = np.zeros((1, X.shape[1]))
27	gamma_W1 = np.ones(W1.shape[0])
28	beta_W1 = np.zeros(W1.shape[0])
",MODEL_TRAIN
2055,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----zeros---->beta_W1_28],"26	b1 = np.zeros((1, X.shape[1]))
27	gamma_W1 = np.ones(W1.shape[0])
28	beta_W1 = np.zeros(W1.shape[0])
29	
",MODEL_TRAIN
2056,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----random---->W2_30_intermediate_1],"anim_128_intermediate_1 -----random---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----ones---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----random---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----ones---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----random---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----meshgrid---->anim_128
anim_128_intermediate_1 -----meshgrid---->anim_128
anim_128_intermediate_1 -----argmax---->anim_128
anim_128_intermediate_1 -----argmax---->anim_128
anim_128_intermediate_1 -----mean---->anim_128
anim_128_intermediate_1 -----randn---->anim_128",MODEL_TRAIN
2057,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----zeros---->b2_31],"29	
30	W2 = np.random.randn(X.shape[1], hidden_size) / np.sqrt(X.shape[1])
31	b2 = np.zeros((1, hidden_size))
32	gamma_W2 = np.ones(W2.shape[1])
",MODEL_TRAIN
2058,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----ones---->gamma_W2_32],"30	W2 = np.random.randn(X.shape[1], hidden_size) / np.sqrt(X.shape[1])
31	b2 = np.zeros((1, hidden_size))
32	gamma_W2 = np.ones(W2.shape[1])
33	beta_W2 = np.zeros(W2.shape[1])
",MODEL_TRAIN
2059,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----zeros---->beta_W2_33],"31	b2 = np.zeros((1, hidden_size))
32	gamma_W2 = np.ones(W2.shape[1])
33	beta_W2 = np.zeros(W2.shape[1])
34	
",MODEL_TRAIN
2060,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----random---->W3_35_intermediate_1],"anim_128_intermediate_1 -----random---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----ones---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----random---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----ones---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----random---->anim_128
anim_128_intermediate_1 -----zeros---->anim_128
anim_128_intermediate_1 -----meshgrid---->anim_128
anim_128_intermediate_1 -----meshgrid---->anim_128
anim_128_intermediate_1 -----argmax---->anim_128
anim_128_intermediate_1 -----argmax---->anim_128
anim_128_intermediate_1 -----mean---->anim_128
anim_128_intermediate_1 -----randn---->anim_128",MODEL_TRAIN
2061,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----zeros---->b3_36],"34	
35	W3 = np.random.randn(hidden_size, 3) / np.sqrt(hidden_size)
36	b3 = np.zeros((1, 3))
37	
",MODEL_TRAIN
2062,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----meshgrid---->xx_120],"118	y_min, y_max = X[:, 1].min() - .5, X[:, 1].max() + .5
119	h = 0.01
120	xx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))
121	Z = np.argmax(predict(np.c_[xx.ravel(), yy.ravel()]),axis=1)
",MODEL_EVALUATION
2063,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----meshgrid---->yy_120],"118	y_min, y_max = X[:, 1].min() - .5, X[:, 1].max() + .5
119	h = 0.01
120	xx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))
121	Z = np.argmax(predict(np.c_[xx.ravel(), yy.ravel()]),axis=1)
",MODEL_EVALUATION
2064,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----argmax---->Z_121],"119	h = 0.01
120	xx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))
121	Z = np.argmax(predict(np.c_[xx.ravel(), yy.ravel()]),axis=1)
122	Z = Z.reshape(xx.shape)
",MODEL_EVALUATION
2065,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----argmax---->predicted_125],"123	plt.contourf(xx, yy, Z, cmap=plt.cm.Spectral)
124	plt.scatter(X[:, 0], X[:, 1], c=Y, cmap=plt.cm.Spectral)
125	predicted= np.argmax(predict(X),axis=1)
126	accuracy = np.mean(Y == predicted)
",MODEL_EVALUATION
2066,0000f50438ba509c2636906411c131d90707e118.execution_graph,[numpy -----mean---->accuracy_126],"124	plt.scatter(X[:, 0], X[:, 1], c=Y, cmap=plt.cm.Spectral)
125	predicted= np.argmax(predict(X),axis=1)
126	accuracy = np.mean(Y == predicted)
127	plt.title('Gradient Descent Strategies Batch Normalization decision boundary, epoch %d, accuracy: %f'%(0, accuracy))
",MODEL_EVALUATION
2067,0000f50438ba509c2636906411c131d90707e118.execution_graph,[W2_30 -----w2---->gamma_W2_32],"30	W2 = np.random.randn(X.shape[1], hidden_size) / np.sqrt(X.shape[1])
31	b2 = np.zeros((1, hidden_size))
32	gamma_W2 = np.ones(W2.shape[1])
33	beta_W2 = np.zeros(W2.shape[1])
",MODEL_TRAIN
2068,0000f50438ba509c2636906411c131d90707e118.execution_graph,[W2_30 -----w2---->beta_W2_33],"31	b2 = np.zeros((1, hidden_size))
32	gamma_W2 = np.ones(W2.shape[1])
33	beta_W2 = np.zeros(W2.shape[1])
34	
",MODEL_TRAIN
2069,0000f50438ba509c2636906411c131d90707e118.execution_graph,[fig_116 -----fig---->anim_128],"126	accuracy = np.mean(Y == predicted)
127	plt.title('Gradient Descent Strategies Batch Normalization decision boundary, epoch %d, accuracy: %f'%(0, accuracy))
128	anim = animation.FuncAnimation(fig, training, frames=100, interval=200)
129	anim.save('animation-batch-normalization-iris.gif', writer='imagemagick', fps=5)
",DATA_EXPORT
2070,0000f50438ba509c2636906411c131d90707e118.execution_graph,[matplotlib.pyplot -----figure---->fig_116],"114	    return cont
115	
116	fig = plt.figure(figsize=(15,10))
117	x_min, x_max = X[:, 0].min() - .5, X[:, 0].max() + .5
",EDA
2071,0000f50438ba509c2636906411c131d90707e118.execution_graph,[matplotlib.pyplot -----contourf---->plt_123],"121	Z = np.argmax(predict(np.c_[xx.ravel(), yy.ravel()]),axis=1)
122	Z = Z.reshape(xx.shape)
123	plt.contourf(xx, yy, Z, cmap=plt.cm.Spectral)
124	plt.scatter(X[:, 0], X[:, 1], c=Y, cmap=plt.cm.Spectral)
",EDA
2072,0000f50438ba509c2636906411c131d90707e118.execution_graph,[matplotlib.pyplot -----scatter---->plt_124],"122	Z = Z.reshape(xx.shape)
123	plt.contourf(xx, yy, Z, cmap=plt.cm.Spectral)
124	plt.scatter(X[:, 0], X[:, 1], c=Y, cmap=plt.cm.Spectral)
125	predicted= np.argmax(predict(X),axis=1)
",EDA
2073,0000f50438ba509c2636906411c131d90707e118.execution_graph,[matplotlib.pyplot -----title---->plt_127],"125	predicted= np.argmax(predict(X),axis=1)
126	accuracy = np.mean(Y == predicted)
127	plt.title('Gradient Descent Strategies Batch Normalization decision boundary, epoch %d, accuracy: %f'%(0, accuracy))
128	anim = animation.FuncAnimation(fig, training, frames=100, interval=200)
",EDA
2074,0000f50438ba509c2636906411c131d90707e118.execution_graph,[xx_120 -----xx---->Z_122],"120	xx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))
121	Z = np.argmax(predict(np.c_[xx.ravel(), yy.ravel()]),axis=1)
122	Z = Z.reshape(xx.shape)
123	plt.contourf(xx, yy, Z, cmap=plt.cm.Spectral)
",MODEL_EVALUATION
2075,0000f50438ba509c2636906411c131d90707e118.execution_graph,[xx_120 -----xx---->plt_123],"121	Z = np.argmax(predict(np.c_[xx.ravel(), yy.ravel()]),axis=1)
122	Z = Z.reshape(xx.shape)
123	plt.contourf(xx, yy, Z, cmap=plt.cm.Spectral)
124	plt.scatter(X[:, 0], X[:, 1], c=Y, cmap=plt.cm.Spectral)
",MODEL_EVALUATION
2076,0000f50438ba509c2636906411c131d90707e118.execution_graph,[yy_120 -----yy---->plt_123],"121	Z = np.argmax(predict(np.c_[xx.ravel(), yy.ravel()]),axis=1)
122	Z = Z.reshape(xx.shape)
123	plt.contourf(xx, yy, Z, cmap=plt.cm.Spectral)
124	plt.scatter(X[:, 0], X[:, 1], c=Y, cmap=plt.cm.Spectral)
",MODEL_EVALUATION
2077,0000f50438ba509c2636906411c131d90707e118.execution_graph,[Z_121 -----reshape---->Z_122],"120	xx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))
121	Z = np.argmax(predict(np.c_[xx.ravel(), yy.ravel()]),axis=1)
122	Z = Z.reshape(xx.shape)
123	plt.contourf(xx, yy, Z, cmap=plt.cm.Spectral)
",MODEL_EVALUATION
2078,0000f50438ba509c2636906411c131d90707e118.execution_graph,[Z_122 -----z---->plt_123],"121	Z = np.argmax(predict(np.c_[xx.ravel(), yy.ravel()]),axis=1)
122	Z = Z.reshape(xx.shape)
123	plt.contourf(xx, yy, Z, cmap=plt.cm.Spectral)
124	plt.scatter(X[:, 0], X[:, 1], c=Y, cmap=plt.cm.Spectral)
",MODEL_EVALUATION
2079,0000f50438ba509c2636906411c131d90707e118.execution_graph,[anim_128 -----save---->anim_129],"127	plt.title('Gradient Descent Strategies Batch Normalization decision boundary, epoch %d, accuracy: %f'%(0, accuracy))
128	anim = animation.FuncAnimation(fig, training, frames=100, interval=200)
129	anim.save('animation-batch-normalization-iris.gif', writer='imagemagick', fps=5)
130	
",DATA_EXPORT
2080,0000f50438ba509c2636906411c131d90707e118.execution_graph,[matplotlib -----animation---->anim_128_intermediate_1],"anim_128_intermediate_1 -----animation---->anim_128
anim_128_intermediate_1 -----func animation---->anim_128",EDA
2081,0000f50438ba509c2636906411c131d90707e118.execution_graph,[x_min_117_intermediate_1 -----min---->x_min_117_intermediate_2],"X_18 -----x[:, 0]---->x_min_117_intermediate_1
anim_128_intermediate_1 -----min---->anim_128
anim_128_intermediate_1 -----sub---->anim_128",EDA
2082,0000f50438ba509c2636906411c131d90707e118.execution_graph,[x_min_117_intermediate_2 -----sub---->x_min_117_intermediate_3],"x_min_117_intermediate_1 -----min---->x_min_117_intermediate_2
anim_128_intermediate_1 -----sub---->anim_128
anim_128_intermediate_1 -----max---->anim_128",DATA_TRANSFORM
2083,0000f50438ba509c2636906411c131d90707e118.execution_graph,[x_min_117_intermediate_3 -----max---->x_min_117_intermediate_4],"x_min_117_intermediate_2 -----sub---->x_min_117_intermediate_3
anim_128_intermediate_1 -----max---->anim_128
anim_128_intermediate_1 -----add---->anim_128",DATA_TRANSFORM
2084,0000f50438ba509c2636906411c131d90707e118.execution_graph,[x_min_117_intermediate_4 -----add---->x_min_117],"x_min_117_intermediate_3 -----max---->x_min_117_intermediate_4
anim_128_intermediate_1 -----add---->anim_128",DATA_TRANSFORM
2085,0000f50438ba509c2636906411c131d90707e118.execution_graph,[x_max_117_intermediate_1 -----min---->x_max_117_intermediate_2],"X_18 -----x[:, 0]---->x_max_117_intermediate_1
anim_128_intermediate_1 -----min---->anim_128
anim_128_intermediate_1 -----sub---->anim_128",EDA
2086,0000f50438ba509c2636906411c131d90707e118.execution_graph,[x_max_117_intermediate_2 -----sub---->x_max_117_intermediate_3],"x_max_117_intermediate_1 -----min---->x_max_117_intermediate_2
anim_128_intermediate_1 -----sub---->anim_128
anim_128_intermediate_1 -----max---->anim_128",MODEL_TRAIN
2087,0000f50438ba509c2636906411c131d90707e118.execution_graph,[x_max_117_intermediate_3 -----max---->x_max_117_intermediate_4],"x_max_117_intermediate_2 -----sub---->x_max_117_intermediate_3
anim_128_intermediate_1 -----max---->anim_128
anim_128_intermediate_1 -----add---->anim_128",MODEL_TRAIN
2088,0000f50438ba509c2636906411c131d90707e118.execution_graph,[x_max_117_intermediate_4 -----add---->x_max_117],"x_max_117_intermediate_3 -----max---->x_max_117_intermediate_4
anim_128_intermediate_1 -----add---->anim_128",MODEL_TRAIN
2089,0000f50438ba509c2636906411c131d90707e118.execution_graph,[y_min_118_intermediate_1 -----min---->y_min_118_intermediate_2],"X_18 -----x[:, 1]---->y_min_118_intermediate_1
anim_128_intermediate_1 -----min---->anim_128
anim_128_intermediate_1 -----sub---->anim_128",EDA
2090,0000f50438ba509c2636906411c131d90707e118.execution_graph,[y_min_118_intermediate_2 -----sub---->y_min_118_intermediate_3],"y_min_118_intermediate_1 -----min---->y_min_118_intermediate_2
anim_128_intermediate_1 -----sub---->anim_128
anim_128_intermediate_1 -----max---->anim_128",EDA
2091,0000f50438ba509c2636906411c131d90707e118.execution_graph,[y_min_118_intermediate_3 -----max---->y_min_118_intermediate_4],"y_min_118_intermediate_2 -----sub---->y_min_118_intermediate_3
anim_128_intermediate_1 -----max---->anim_128
anim_128_intermediate_1 -----add---->anim_128",DATA_TRANSFORM
2092,0000f50438ba509c2636906411c131d90707e118.execution_graph,[y_min_118_intermediate_4 -----add---->y_min_118],"y_min_118_intermediate_3 -----max---->y_min_118_intermediate_4
anim_128_intermediate_1 -----add---->anim_128",MODEL_TRAIN
2093,0000f50438ba509c2636906411c131d90707e118.execution_graph,[y_max_118_intermediate_1 -----min---->y_max_118_intermediate_2],"X_18 -----x[:, 1]---->y_max_118_intermediate_1
anim_128_intermediate_1 -----min---->anim_128
anim_128_intermediate_1 -----sub---->anim_128",DATA_TRANSFORM
2094,0000f50438ba509c2636906411c131d90707e118.execution_graph,[y_max_118_intermediate_2 -----sub---->y_max_118_intermediate_3],"y_max_118_intermediate_1 -----min---->y_max_118_intermediate_2
anim_128_intermediate_1 -----sub---->anim_128
anim_128_intermediate_1 -----max---->anim_128",DATA_TRANSFORM
2095,0000f50438ba509c2636906411c131d90707e118.execution_graph,[y_max_118_intermediate_3 -----max---->y_max_118_intermediate_4],"y_max_118_intermediate_2 -----sub---->y_max_118_intermediate_3
anim_128_intermediate_1 -----max---->anim_128
anim_128_intermediate_1 -----add---->anim_128",DATA_TRANSFORM
2096,0000f50438ba509c2636906411c131d90707e118.execution_graph,[y_max_118_intermediate_4 -----add---->y_max_118],"y_max_118_intermediate_3 -----max---->y_max_118_intermediate_4
anim_128_intermediate_1 -----add---->anim_128",DATA_TRANSFORM
2097,0000f50438ba509c2636906411c131d90707e118.execution_graph,[X_18_intermediate_1 -----fit transform---->X_18],"sklearn.decomposition -----pca---->X_18_intermediate_1
anim_128_intermediate_1 -----fit transform---->anim_128
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----x---->anim_128
anim_128_intermediate_1 -----x[:, 0]---->anim_128
anim_128_intermediate_1 -----x[:, 0]---->anim_128
anim_128_intermediate_1 -----x[:, 1]---->anim_128
anim_128_intermediate_1 -----x[:, 1]---->anim_128
anim_128_intermediate_1 -----x---->anim_128",MODEL_TRAIN
2098,0000f50438ba509c2636906411c131d90707e118.execution_graph,[Y_19_intermediate_1 -----fit transform---->Y_19],"sklearn.preprocessing -----label encoder---->Y_19_intermediate_1
anim_128_intermediate_1 -----fit transform---->anim_128",DATA_TRANSFORM
2099,0000f50438ba509c2636906411c131d90707e118.execution_graph,[W1_25_intermediate_1 -----randn---->W1_25_intermediate_2],"numpy -----random---->W1_25_intermediate_1
anim_128_intermediate_1 -----randn---->anim_128
anim_128_intermediate_1 -----sqrt---->anim_128",MODEL_TRAIN
2100,0000f50438ba509c2636906411c131d90707e118.execution_graph,[W1_25_intermediate_2 -----sqrt---->W1_25],"W1_25_intermediate_1 -----randn---->W1_25_intermediate_2
anim_128_intermediate_1 -----sqrt---->anim_128
anim_128_intermediate_1 -----w1---->anim_128
anim_128_intermediate_1 -----w1---->anim_128",MODEL_TRAIN
2101,0000f50438ba509c2636906411c131d90707e118.execution_graph,[W2_30_intermediate_1 -----randn---->W2_30_intermediate_2],"numpy -----random---->W2_30_intermediate_1
anim_128_intermediate_1 -----randn---->anim_128
anim_128_intermediate_1 -----sqrt---->anim_128",MODEL_TRAIN
2102,0000f50438ba509c2636906411c131d90707e118.execution_graph,[W2_30_intermediate_2 -----sqrt---->W2_30],"W2_30_intermediate_1 -----randn---->W2_30_intermediate_2
anim_128_intermediate_1 -----sqrt---->anim_128
anim_128_intermediate_1 -----w2---->anim_128
anim_128_intermediate_1 -----w2---->anim_128",MODEL_TRAIN
2103,0000f50438ba509c2636906411c131d90707e118.execution_graph,[W3_35_intermediate_1 -----randn---->W3_35_intermediate_2],"numpy -----random---->W3_35_intermediate_1
anim_128_intermediate_1 -----randn---->anim_128
anim_128_intermediate_1 -----sqrt---->anim_128",MODEL_TRAIN
2104,0000f50438ba509c2636906411c131d90707e118.execution_graph,[W3_35_intermediate_2 -----sqrt---->W3_35],"W3_35_intermediate_1 -----randn---->W3_35_intermediate_2
anim_128_intermediate_1 -----sqrt---->anim_128",MODEL_TRAIN
2105,0000f50438ba509c2636906411c131d90707e118.execution_graph,[anim_128_intermediate_1 -----func animation---->anim_128],"matplotlib -----animation---->anim_128_intermediate_1
anim_128_intermediate_1 -----func animation---->anim_128
anim_128_intermediate_1 -----save---->anim_128",EDA
2106,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[file_7 -----read---->data_8],"6	#Import file
7	file = open('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather.txt')
8	data = file.read()
9	file.close()
",DATA_IMPORT_EXTRACTION
2107,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[file_7 -----close---->file_9],"7	file = open('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather.txt')
8	data = file.read()
9	file.close()
10	
",ENVIRONMENT
2108,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_8 -----data---->data_13],"11	#CLEAR MESS
12	#Replace 'B*', 'D*' or 'S' with tabulation and 'IO' or 'OS' or 'SI' or 'I+' or 'S+' with tabulation into ,
13	data = re.sub('[BDS]?[\t ]+(OI|OS|SI|I+|S+)[\t ]*',',',data)
14	#Replace tabulation with ,
",DATA_TRANSFORM
2109,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[file_9 -----open---->file_32],"30	
31	#Save *.txt file as *.csv 
32	file = open('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv.csv','w')
33	file.write(data)
",DATA_EXPORT
2110,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_13 -----data---->data_15],"13	data = re.sub('[BDS]?[\t ]+(OI|OS|SI|I+|S+)[\t ]*',',',data)
14	#Replace tabulation with ,
15	data = re.sub('[\t ]+',',',data)
16	#Replace a lot of characters with tabulation and enter to just enter (end of line)
",DATA_TRANSFORM
2111,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[re -----sub---->data_13],"11	#CLEAR MESS
12	#Replace 'B*', 'D*' or 'S' with tabulation and 'IO' or 'OS' or 'SI' or 'I+' or 'S+' with tabulation into ,
13	data = re.sub('[BDS]?[\t ]+(OI|OS|SI|I+|S+)[\t ]*',',',data)
14	#Replace tabulation with ,
",DATA_TRANSFORM
2112,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[re -----sub---->data_15],"13	data = re.sub('[BDS]?[\t ]+(OI|OS|SI|I+|S+)[\t ]*',',',data)
14	#Replace tabulation with ,
15	data = re.sub('[\t ]+',',',data)
16	#Replace a lot of characters with tabulation and enter to just enter (end of line)
",DATA_TRANSFORM
2113,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[re -----sub---->data_17],"15	data = re.sub('[\t ]+',',',data)
16	#Replace a lot of characters with tabulation and enter to just enter (end of line)
17	data = re.sub('\s*,[\t ]*\n','\n',data)
18	#Get year-month and variable (TMAX, TMIN or PRCP)
",DATA_TRANSFORM
2114,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[re -----sub---->data_19],"17	data = re.sub('\s*,[\t ]*\n','\n',data)
18	#Get year-month and variable (TMAX, TMIN or PRCP)
19	data = re.sub('MX000017004(\d\d\d\d)(\d\d)(\w\w\w\w)','\g<1>-\g<2>,\g<3>',data)
20	#Delete '-9999' data
",DATA_TRANSFORM
2115,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_15 -----data---->data_17],"15	data = re.sub('[\t ]+',',',data)
16	#Replace a lot of characters with tabulation and enter to just enter (end of line)
17	data = re.sub('\s*,[\t ]*\n','\n',data)
18	#Get year-month and variable (TMAX, TMIN or PRCP)
",DATA_TRANSFORM
2116,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_17 -----data---->data_19],"17	data = re.sub('\s*,[\t ]*\n','\n',data)
18	#Get year-month and variable (TMAX, TMIN or PRCP)
19	data = re.sub('MX000017004(\d\d\d\d)(\d\d)(\w\w\w\w)','\g<1>-\g<2>,\g<3>',data)
20	#Delete '-9999' data
",DATA_TRANSFORM
2117,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_19 -----replace---->data_21],"19	data = re.sub('MX000017004(\d\d\d\d)(\d\d)(\w\w\w\w)','\g<1>-\g<2>,\g<3>',data)
20	#Delete '-9999' data
21	data = data.replace('-9999','')
22	
",DATA_TRANSFORM
2118,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_21 -----add---->data_29],"27	    
28	#Connect headers with data
29	data = header+'\n'+data
30	
",DATA_TRANSFORM
2119,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[header_24 -----loop---->header_26_intermediate_1],"loop_header_24_header_26 -----restart_loop---->header_24
px_118_intermediate_1 -----loop---->px_118
px_118_intermediate_1 -----add---->px_118",DATA_TRANSFORM
2120,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[header_26 -----end_loop---->loop_header_24_header_26],"
",DATA_TRANSFORM
2121,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[loop_header_24_header_26 -----restart_loop---->header_24],"
",DATA_TRANSFORM
2122,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[loop_header_24_header_26 -----add---->data_29],"27	    
28	#Connect headers with data
29	data = header+'\n'+data
30	
",DATA_TRANSFORM
2123,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_29 -----data---->file_33],"31	#Save *.txt file as *.csv 
32	file = open('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv.csv','w')
33	file.write(data)
34	file.close()
",DATA_EXPORT
2124,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_29 -----reassign---->data_46],"44	#Read *.csv file
45	file = '/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv.csv'
46	data = pd.read_csv(file)
47	
",DATA_EXPORT
2125,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[file_32 -----write---->file_33],"31	#Save *.txt file as *.csv 
32	file = open('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv.csv','w')
33	file.write(data)
34	file.close()
",DATA_EXPORT
2126,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[file_33 -----close---->file_34],"32	file = open('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv.csv','w')
33	file.write(data)
34	file.close()
35	
",DATA_EXPORT
2127,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[file_34 -----reassign---->file_45],"43	
44	#Read *.csv file
45	file = '/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv.csv'
46	data = pd.read_csv(file)
",DATA_IMPORT_EXTRACTION
2128,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[file_45 -----file---->data_46],"44	#Read *.csv file
45	file = '/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv.csv'
46	data = pd.read_csv(file)
47	
",DATA_IMPORT_EXTRACTION
2129,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[file_45 -----open---->file_64],"62	
63	#Save data as *.csv file (but a tidy one!)
64	file = open('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv_tidy.csv', 'w')
65	file.write('DAY' + data_new.to_csv())
",DATA_EXPORT
2130,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[pandas -----read csv---->data_46],"44	#Read *.csv file
45	file = '/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv.csv'
46	data = pd.read_csv(file)
47	
",DATA_IMPORT_EXTRACTION
2131,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[pandas -----data frame---->data_new_61_intermediate_1],"px_118_intermediate_1 -----read csv---->px_118
px_118_intermediate_1 -----data frame---->px_118
px_118_intermediate_1 -----read csv---->px_118
px_118_intermediate_1 -----t---->px_118",DATA_TRANSFORM
2132,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[pandas -----read csv---->weather_75],"73	
74	#Read csv file by pandas
75	weather = pd.read_csv('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv_tidy.csv',delimiter=',',decimal=',');
76	
",DATA_IMPORT_EXTRACTION
2133,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_new_48 -----loop---->data_new_58],"
",DATA_TRANSFORM
2134,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_new_48 -----data new[day ]---->entry_57],"55	        entry = {row[2]: value} #TMAX or TMIN or PRCP is assigned to value (line above)
56	        if day_ in data_new.keys():
57	            entry = {**data_new[day_], **entry} #If day is already in data_new => update it
58	        data_new[day_] = entry #If day isn't in data_new => add it
",DATA_TRANSFORM
2135,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_new_58 -----end_loop---->loop_data_new_48_data_new_58],"
",DATA_EXPORT
2136,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[day__53 -----data new[day ]---->entry_57],"55	        entry = {row[2]: value} #TMAX or TMIN or PRCP is assigned to value (line above)
56	        if day_ in data_new.keys():
57	            entry = {**data_new[day_], **entry} #If day is already in data_new => update it
58	        data_new[day_] = entry #If day isn't in data_new => add it
",DATA_TRANSFORM
2137,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[value_54 -----value---->entry_55],"53	        day_ = row[1]+'-'+str(i).zfill(2) #Year-month-day
54	        value = row[2+day] #Value in day
55	        entry = {row[2]: value} #TMAX or TMIN or PRCP is assigned to value (line above)
56	        if day_ in data_new.keys():
",DATA_TRANSFORM
2138,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[entry_55 -----if---->entry_57],"
",DATA_TRANSFORM
2139,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[entry_57 -----entry---->data_new_58],"56	        if day_ in data_new.keys():
57	            entry = {**data_new[day_], **entry} #If day is already in data_new => update it
58	        data_new[day_] = entry #If day isn't in data_new => add it
59	
",DATA_TRANSFORM
2140,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[loop_data_new_48_data_new_58 -----restart_loop---->data_new_48],"
",DATA_TRANSFORM
2141,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[loop_data_new_48_data_new_58 -----data new---->data_new_61],"59	
60	#Delete any NaN data from data_new
61	data_new = pd.DataFrame(data_new).T.query('TMAX != ""NaN"" or TMIN != ""NaN"" or PRCP != ""NaN""')
62	
",DATA_TRANSFORM
2142,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[file_64 -----write---->file_65],"63	#Save data as *.csv file (but a tidy one!)
64	file = open('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv_tidy.csv', 'w')
65	file.write('DAY' + data_new.to_csv())
66	file.close()
",DATA_EXPORT
2143,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[file_65 -----close---->file_66],"64	file = open('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_csv_tidy.csv', 'w')
65	file.write('DAY' + data_new.to_csv())
66	file.close()
67	
",DATA_EXPORT
2144,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_75 -----head---->weather_78],"76	
77	#Show first 5 rows (header + 4 rows)
78	weather.head()
79	
",EDA
2145,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_78 -----info---->weather_81],"79	
80	#Show info about csv's data
81	weather.info()
82	
",EDA
2146,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_81 -----describe---->weather_83],"81	weather.info()
82	
83	weather.describe(include='all') #count, unique, top, freq
84	
",EDA
2147,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_83 -----describe---->statistics_86],"84	
85	#Statistics - shown and saved
86	statistics = weather.describe()
87	statistics.to_csv('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_statistics.csv')
",EDA
2148,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_83 -----dropna---->weather_93_intermediate_1],"weather_81 -----describe---->weather_83
px_118_intermediate_1 -----describe---->px_118
px_118_intermediate_1 -----dropna---->px_118
px_118_intermediate_1 -----describe---->px_118",DATA_TRANSFORM
2149,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[statistics_86 -----to csv---->statistics_87],"85	#Statistics - shown and saved
86	statistics = weather.describe()
87	statistics.to_csv('/home/ayane/AiBD_Lab5/Zad_1/Analysis_Data/weather_statistics.csv')
88	
",DATA_EXPORT
2150,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_93 -----weather---->fig_weather_Tmax_99],"97	
98	#TMAX
99	fig_weather_Tmax = px.scatter(weather, x=""DAY"", y=""TMAX"",height=400, title=""TMAX"")
100	fig_weather_Tmax.show()
",EDA
2151,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_93 -----weather---->px_102],"100	fig_weather_Tmax.show()
101	
102	px.histogram(weather, x=""TMAX"").show()  
103	
",EDA
2152,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_93 -----weather---->fig_weather_Tmin_107],"105	
106	#TMIN
107	fig_weather_Tmin = px.scatter(weather, x=""DAY"", y=""TMIN"",height=400, title=""TMIN"")
108	fig_weather_Tmin.show()
",EDA
2153,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_93 -----weather---->px_110],"108	fig_weather_Tmin.show()
109	
110	px.histogram(weather, x=""TMIN"").show()
111	
",EDA
2154,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_93 -----weather---->fig_weather_PRCP_115],"113	
114	#PRCP
115	fig_weather_PRCP = px.scatter(weather, x=""DAY"", y=""PRCP"",height=400, title=""PRCP"")
116	fig_weather_PRCP.show()
",EDA
2155,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_93 -----weather---->px_118],"116	fig_weather_PRCP.show()
117	
118	px.histogram(weather, x=""PRCP"").show()  
119	
",EDA
2156,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_93 -----weather---->fig_weather_box_136],"134	#BOX PLOT
135	#TMIN
136	fig_weather_box=px.box(weather, x=""TMIN"", points='all', orientation='h')
137	fig_weather_box.show()
",EDA
2157,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_93 -----weather---->fig_weather_box_140],"138	
139	#TMAX
140	fig_weather_box=px.box(weather, x=""TMAX"", points='all', orientation='h')
141	fig_weather_box.show()
",EDA
2158,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_93 -----weather---->fig_weather_box_144],"142	
143	#PRCP
144	fig_weather_box=px.box(weather, x=""PRCP"", points='all', orientation='h')
145	fig_weather_box.show()
",EDA
2159,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_93 -----weather---->fig_weather_box_148],"146	
147	#DAY
148	fig_weather_box=px.box(weather, x=""DAY"", points='all', orientation='h')
149	fig_weather_box.show()
",EDA
2160,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[fig_weather_Tmax_99 -----show---->fig_weather_Tmax_100],"98	#TMAX
99	fig_weather_Tmax = px.scatter(weather, x=""DAY"", y=""TMAX"",height=400, title=""TMAX"")
100	fig_weather_Tmax.show()
101	
",EDA
2161,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[plotly.express -----scatter---->fig_weather_Tmax_99],"97	
98	#TMAX
99	fig_weather_Tmax = px.scatter(weather, x=""DAY"", y=""TMAX"",height=400, title=""TMAX"")
100	fig_weather_Tmax.show()
",EDA
2162,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[plotly.express -----histogram---->px_102_intermediate_1],"px_118_intermediate_1 -----scatter---->px_118
px_118_intermediate_1 -----histogram---->px_118
px_118_intermediate_1 -----scatter---->px_118
px_118_intermediate_1 -----histogram---->px_118
px_118_intermediate_1 -----scatter---->px_118
px_118_intermediate_1 -----histogram---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----show---->px_118",EDA
2163,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[plotly.express -----scatter---->fig_weather_Tmin_107],"105	
106	#TMIN
107	fig_weather_Tmin = px.scatter(weather, x=""DAY"", y=""TMIN"",height=400, title=""TMIN"")
108	fig_weather_Tmin.show()
",EDA
2164,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[plotly.express -----histogram---->px_110_intermediate_1],"px_118_intermediate_1 -----scatter---->px_118
px_118_intermediate_1 -----histogram---->px_118
px_118_intermediate_1 -----scatter---->px_118
px_118_intermediate_1 -----histogram---->px_118
px_118_intermediate_1 -----scatter---->px_118
px_118_intermediate_1 -----histogram---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----show---->px_118",EDA
2165,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[plotly.express -----scatter---->fig_weather_PRCP_115],"113	
114	#PRCP
115	fig_weather_PRCP = px.scatter(weather, x=""DAY"", y=""PRCP"",height=400, title=""PRCP"")
116	fig_weather_PRCP.show()
",EDA
2166,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[plotly.express -----histogram---->px_118_intermediate_1],"px_118_intermediate_1 -----scatter---->px_118
px_118_intermediate_1 -----histogram---->px_118
px_118_intermediate_1 -----scatter---->px_118
px_118_intermediate_1 -----histogram---->px_118
px_118_intermediate_1 -----scatter---->px_118
px_118_intermediate_1 -----histogram---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----box---->px_118
px_118_intermediate_1 -----show---->px_118",EDA
2167,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[plotly.express -----box---->fig_weather_box_136],"134	#BOX PLOT
135	#TMIN
136	fig_weather_box=px.box(weather, x=""TMIN"", points='all', orientation='h')
137	fig_weather_box.show()
",EDA
2168,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[plotly.express -----box---->fig_weather_box_140],"138	
139	#TMAX
140	fig_weather_box=px.box(weather, x=""TMAX"", points='all', orientation='h')
141	fig_weather_box.show()
",EDA
2169,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[plotly.express -----box---->fig_weather_box_144],"142	
143	#PRCP
144	fig_weather_box=px.box(weather, x=""PRCP"", points='all', orientation='h')
145	fig_weather_box.show()
",EDA
2170,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[plotly.express -----box---->fig_weather_box_148],"146	
147	#DAY
148	fig_weather_box=px.box(weather, x=""DAY"", points='all', orientation='h')
149	fig_weather_box.show()
",EDA
2171,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[fig_weather_Tmin_107 -----show---->fig_weather_Tmin_108],"106	#TMIN
107	fig_weather_Tmin = px.scatter(weather, x=""DAY"", y=""TMIN"",height=400, title=""TMIN"")
108	fig_weather_Tmin.show()
109	
",EDA
2172,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[fig_weather_PRCP_115 -----show---->fig_weather_PRCP_116],"114	#PRCP
115	fig_weather_PRCP = px.scatter(weather, x=""DAY"", y=""PRCP"",height=400, title=""PRCP"")
116	fig_weather_PRCP.show()
117	
",EDA
2173,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[ax_126 -----reassign---->ax_129],"127	
128	#TMIN
129	ax = sns.scatterplot(x=""DAY"", y=""TMIN"",data=weather)
130	
",EDA
2174,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[seaborn -----scatterplot---->ax_126],"124	
125	#TMAX
126	ax = sns.scatterplot(x=""DAY"", y=""TMAX"",data=weather)
127	
",EDA
2175,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[seaborn -----scatterplot---->ax_129],"127	
128	#TMIN
129	ax = sns.scatterplot(x=""DAY"", y=""TMIN"",data=weather)
130	
",EDA
2176,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[seaborn -----scatterplot---->ax_132],"130	
131	#PRCP
132	ax = sns.scatterplot(x=""DAY"", y=""PRCP"",data=weather)
133	
",EDA
2177,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[ax_129 -----reassign---->ax_132],"130	
131	#PRCP
132	ax = sns.scatterplot(x=""DAY"", y=""PRCP"",data=weather)
133	
",EDA
2178,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[fig_weather_box_136 -----show---->fig_weather_box_137],"135	#TMIN
136	fig_weather_box=px.box(weather, x=""TMIN"", points='all', orientation='h')
137	fig_weather_box.show()
138	
",EDA
2179,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[fig_weather_box_137 -----reassign---->fig_weather_box_140],"138	
139	#TMAX
140	fig_weather_box=px.box(weather, x=""TMAX"", points='all', orientation='h')
141	fig_weather_box.show()
",EDA
2180,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[fig_weather_box_140 -----show---->fig_weather_box_141],"139	#TMAX
140	fig_weather_box=px.box(weather, x=""TMAX"", points='all', orientation='h')
141	fig_weather_box.show()
142	
",EDA
2181,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[fig_weather_box_141 -----reassign---->fig_weather_box_144],"142	
143	#PRCP
144	fig_weather_box=px.box(weather, x=""PRCP"", points='all', orientation='h')
145	fig_weather_box.show()
",EDA
2182,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[fig_weather_box_144 -----show---->fig_weather_box_145],"143	#PRCP
144	fig_weather_box=px.box(weather, x=""PRCP"", points='all', orientation='h')
145	fig_weather_box.show()
146	
",EDA
2183,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[fig_weather_box_145 -----reassign---->fig_weather_box_148],"146	
147	#DAY
148	fig_weather_box=px.box(weather, x=""DAY"", points='all', orientation='h')
149	fig_weather_box.show()
",EDA
2184,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[fig_weather_box_148 -----show---->fig_weather_box_149],"147	#DAY
148	fig_weather_box=px.box(weather, x=""DAY"", points='all', orientation='h')
149	fig_weather_box.show()
",EDA
2185,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[header_26_intermediate_1 -----add---->header_26_intermediate_2],"header_24 -----loop---->header_26_intermediate_1
px_118_intermediate_1 -----add---->px_118
px_118_intermediate_1 -----str---->px_118",DATA_TRANSFORM
2186,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[header_26_intermediate_2 -----str---->header_26],"header_26_intermediate_1 -----add---->header_26_intermediate_2
px_118_intermediate_1 -----str---->px_118
px_118_intermediate_1 -----end_loop---->px_118",DATA_TRANSFORM
2187,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_new_61_intermediate_1 -----t---->data_new_61_intermediate_2],"pandas -----data frame---->data_new_61_intermediate_1
px_118_intermediate_1 -----t---->px_118
px_118_intermediate_1 -----query---->px_118",DATA_TRANSFORM
2188,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[data_new_61_intermediate_2 -----query---->data_new_61],"data_new_61_intermediate_1 -----t---->data_new_61_intermediate_2
px_118_intermediate_1 -----query---->px_118",DATA_TRANSFORM
2189,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[weather_93_intermediate_1 -----describe---->weather_93],"weather_83 -----dropna---->weather_93_intermediate_1
px_118_intermediate_1 -----describe---->px_118
px_118_intermediate_1 -----weather---->px_118
px_118_intermediate_1 -----weather---->px_118
px_118_intermediate_1 -----weather---->px_118
px_118_intermediate_1 -----weather---->px_118
px_118_intermediate_1 -----weather---->px_118
px_118_intermediate_1 -----weather---->px_118
px_118_intermediate_1 -----weather---->px_118
px_118_intermediate_1 -----weather---->px_118
px_118_intermediate_1 -----weather---->px_118
px_118_intermediate_1 -----weather---->px_118",EDA
2190,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[px_102_intermediate_1 -----show---->px_102],"plotly.express -----histogram---->px_102_intermediate_1
px_118_intermediate_1 -----show---->px_118",EDA
2191,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[px_110_intermediate_1 -----show---->px_110],"plotly.express -----histogram---->px_110_intermediate_1
px_118_intermediate_1 -----show---->px_118",EDA
2192,00010000577501f46a8ba1a23b68e5b63475a601.execution_graph,[px_118_intermediate_1 -----show---->px_118],"plotly.express -----histogram---->px_118_intermediate_1
px_118_intermediate_1 -----show---->px_118",EDA
2193,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[digits_7 -----digits---->np_28],"26	type(digits)
27	
28	np.shape(digits.data)
29	
",DATA_TRANSFORM
2194,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[digits_7 -----digits---->np_32],"30	print(digits.target_names)
31	
32	np.shape(digits.target)
33	
",DATA_IMPORT_EXTRACTION
2195,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[digits_7 -----digits---->np_34],"32	np.shape(digits.target)
33	
34	np.shape(digits.images)
35	
",DATA_TRANSFORM
2196,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[digits_7 -----data---->X_41],"39	
40	# Create feature and target arrays
41	X = digits.data
42	y = digits.target
",DATA_IMPORT_EXTRACTION
2197,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[digits_7 -----target---->y_42],"40	# Create feature and target arrays
41	X = digits.data
42	y = digits.target
43	
",DATA_IMPORT_EXTRACTION
2198,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[sklearn -----datasets---->digits_7_intermediate_1],"digits_7_intermediate_1 -----datasets---->digits_7
digits_7_intermediate_1 -----load digits---->digits_7",ENVIRONMENT
2199,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[numpy -----shape---->np_28],"26	type(digits)
27	
28	np.shape(digits.data)
29	
",EDA
2200,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[numpy -----shape---->np_32],"30	print(digits.target_names)
31	
32	np.shape(digits.target)
33	
",EDA
2201,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[numpy -----shape---->np_34],"32	np.shape(digits.target)
33	
34	np.shape(digits.images)
35	
",EDA
2202,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_41 -----x---->X_train_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",DATA_TRANSFORM
2203,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_41 -----x---->X_test_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",MODEL_EVALUATION
2204,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_41 -----x---->y_train_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",MODEL_TRAIN
2205,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_41 -----x---->y_test_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",MODEL_EVALUATION
2206,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_42 -----y---->X_train_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",MODEL_TRAIN
2207,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_42 -----y---->X_test_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",MODEL_EVALUATION
2208,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_42 -----y---->y_train_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",MODEL_TRAIN
2209,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_42 -----y---->y_test_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",MODEL_EVALUATION
2210,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_train_45 -----x train---->knn_51],"49	
50	# Fit the classifier to the training data
51	knn.fit(X_train,y_train)
52	
",MODEL_TRAIN
2211,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_train_45 -----x train---->gnb_58],"56	from sklearn.naive_bayes import GaussianNB
57	gnb = GaussianNB()
58	gnb.fit(X_train,y_train)
59	
",MODEL_TRAIN
2212,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_train_45 -----x train---->dtc_64],"62	from sklearn.tree import DecisionTreeClassifier
63	dtc = DecisionTreeClassifier()
64	dtc.fit(X_train,y_train)
65	dtc.score(X_test,y_test)
",MODEL_TRAIN
2213,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_train_45 -----x train---->mlp_69],"67	from sklearn.neural_network import MLPClassifier
68	mlp = MLPClassifier()
69	mlp.fit(X_train,y_train)
70	mlp.score(X_test,y_test)
",MODEL_TRAIN
2214,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_train_45 -----x train---->xgb_74],"72	from sklearn.ensemble import GradientBoostingClassifier
73	xgb = GradientBoostingClassifier()
74	xgb.fit(X_train,y_train)
75	xgb.score(X_test,y_test)
",MODEL_TRAIN
2215,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[sklearn.model_selection -----train test split---->X_train_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",DATA_TRANSFORM
2216,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[sklearn.model_selection -----train test split---->X_test_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",DATA_TRANSFORM
2217,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[sklearn.model_selection -----train test split---->y_train_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",DATA_TRANSFORM
2218,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[sklearn.model_selection -----train test split---->y_test_45],"43	
44	# Split into training and test set
45	X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state=42, stratify=y)
46	
",DATA_TRANSFORM
2219,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_test_45 -----x test---->gnb_60],"58	gnb.fit(X_train,y_train)
59	
60	gnb.score(X_test,y_test)
61	
",MODEL_EVALUATION
2220,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_test_45 -----x test---->dtc_65],"63	dtc = DecisionTreeClassifier()
64	dtc.fit(X_train,y_train)
65	dtc.score(X_test,y_test)
66	
",MODEL_EVALUATION
2221,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_test_45 -----x test---->mlp_70],"68	mlp = MLPClassifier()
69	mlp.fit(X_train,y_train)
70	mlp.score(X_test,y_test)
71	
",MODEL_EVALUATION
2222,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[X_test_45 -----x test---->xgb_75],"73	xgb = GradientBoostingClassifier()
74	xgb.fit(X_train,y_train)
75	xgb.score(X_test,y_test)
",MODEL_EVALUATION
2223,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_train_45 -----y train---->knn_51],"49	
50	# Fit the classifier to the training data
51	knn.fit(X_train,y_train)
52	
",MODEL_TRAIN
2224,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_train_45 -----y train---->gnb_58],"56	from sklearn.naive_bayes import GaussianNB
57	gnb = GaussianNB()
58	gnb.fit(X_train,y_train)
59	
",MODEL_TRAIN
2225,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_train_45 -----y train---->dtc_64],"62	from sklearn.tree import DecisionTreeClassifier
63	dtc = DecisionTreeClassifier()
64	dtc.fit(X_train,y_train)
65	dtc.score(X_test,y_test)
",MODEL_TRAIN
2226,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_train_45 -----y train---->mlp_69],"67	from sklearn.neural_network import MLPClassifier
68	mlp = MLPClassifier()
69	mlp.fit(X_train,y_train)
70	mlp.score(X_test,y_test)
",MODEL_TRAIN
2227,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_train_45 -----y train---->xgb_74],"72	from sklearn.ensemble import GradientBoostingClassifier
73	xgb = GradientBoostingClassifier()
74	xgb.fit(X_train,y_train)
75	xgb.score(X_test,y_test)
",MODEL_TRAIN
2228,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_test_45 -----y test---->gnb_60],"58	gnb.fit(X_train,y_train)
59	
60	gnb.score(X_test,y_test)
61	
",MODEL_EVALUATION
2229,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_test_45 -----y test---->dtc_65],"63	dtc = DecisionTreeClassifier()
64	dtc.fit(X_train,y_train)
65	dtc.score(X_test,y_test)
66	
",MODEL_EVALUATION
2230,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_test_45 -----y test---->mlp_70],"68	mlp = MLPClassifier()
69	mlp.fit(X_train,y_train)
70	mlp.score(X_test,y_test)
71	
",MODEL_EVALUATION
2231,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[y_test_45 -----y test---->xgb_75],"73	xgb = GradientBoostingClassifier()
74	xgb.fit(X_train,y_train)
75	xgb.score(X_test,y_test)
",MODEL_EVALUATION
2232,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[knn_48 -----fit---->knn_51],"49	
50	# Fit the classifier to the training data
51	knn.fit(X_train,y_train)
52	
",MODEL_TRAIN
2233,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[sklearn.neighbors -----kneighbors classifier---->knn_48],"46	
47	# Create a k-NN classifier with 7 neighbors: knn
48	knn = KNeighborsClassifier(n_neighbors=5)
49	
",MODEL_TRAIN
2234,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[gnb_57 -----fit---->gnb_58],"56	from sklearn.naive_bayes import GaussianNB
57	gnb = GaussianNB()
58	gnb.fit(X_train,y_train)
59	
",MODEL_TRAIN
2235,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[sklearn.naive_bayes -----gaussian nb---->gnb_57],"55	
56	from sklearn.naive_bayes import GaussianNB
57	gnb = GaussianNB()
58	gnb.fit(X_train,y_train)
",MODEL_TRAIN
2236,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[gnb_58 -----score---->gnb_60],"58	gnb.fit(X_train,y_train)
59	
60	gnb.score(X_test,y_test)
61	
",MODEL_EVALUATION
2237,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[dtc_63 -----fit---->dtc_64],"62	from sklearn.tree import DecisionTreeClassifier
63	dtc = DecisionTreeClassifier()
64	dtc.fit(X_train,y_train)
65	dtc.score(X_test,y_test)
",MODEL_TRAIN
2238,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[sklearn.tree -----decision tree classifier---->dtc_63],"61	
62	from sklearn.tree import DecisionTreeClassifier
63	dtc = DecisionTreeClassifier()
64	dtc.fit(X_train,y_train)
",ENVIRONMENT
2239,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[dtc_64 -----score---->dtc_65],"63	dtc = DecisionTreeClassifier()
64	dtc.fit(X_train,y_train)
65	dtc.score(X_test,y_test)
66	
",MODEL_EVALUATION
2240,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[mlp_68 -----fit---->mlp_69],"67	from sklearn.neural_network import MLPClassifier
68	mlp = MLPClassifier()
69	mlp.fit(X_train,y_train)
70	mlp.score(X_test,y_test)
",MODEL_TRAIN
2241,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[sklearn.neural_network -----mlpclassifier---->mlp_68],"66	
67	from sklearn.neural_network import MLPClassifier
68	mlp = MLPClassifier()
69	mlp.fit(X_train,y_train)
",ENVIRONMENT
2242,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[mlp_69 -----score---->mlp_70],"68	mlp = MLPClassifier()
69	mlp.fit(X_train,y_train)
70	mlp.score(X_test,y_test)
71	
",MODEL_EVALUATION
2243,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[xgb_73 -----fit---->xgb_74],"72	from sklearn.ensemble import GradientBoostingClassifier
73	xgb = GradientBoostingClassifier()
74	xgb.fit(X_train,y_train)
75	xgb.score(X_test,y_test)
",MODEL_TRAIN
2244,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[sklearn.ensemble -----gradient boosting classifier---->xgb_73],"71	
72	from sklearn.ensemble import GradientBoostingClassifier
73	xgb = GradientBoostingClassifier()
74	xgb.fit(X_train,y_train)
",MODEL_TRAIN
2245,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[xgb_74 -----score---->xgb_75],"73	xgb = GradientBoostingClassifier()
74	xgb.fit(X_train,y_train)
75	xgb.score(X_test,y_test)
",MODEL_EVALUATION
2246,00010c599ae737c1f7b9f40c9b66c96552eb300d.execution_graph,[digits_7_intermediate_1 -----load digits---->digits_7],"sklearn -----datasets---->digits_7_intermediate_1
digits_7_intermediate_1 -----load digits---->digits_7
digits_7_intermediate_1 -----digits---->digits_7
digits_7_intermediate_1 -----digits---->digits_7
digits_7_intermediate_1 -----digits---->digits_7
digits_7_intermediate_1 -----data---->digits_7
digits_7_intermediate_1 -----target---->digits_7",DATA_IMPORT_EXTRACTION
2247,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[warnings -----filterwarnings---->warnings_8],"6	# Hide warning messages in notebook
7	import warnings
8	warnings.filterwarnings('ignore')
9	
",ENVIRONMENT
2248,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[mouse_drug_15 -----mouse drug---->clinical_trial_data_20],"18	
19	# Combine the data into a single dataset
20	clinical_trial_data = pd.merge(clinical_trial, mouse_drug, on=""Mouse ID"")
21	
",DATA_TRANSFORM
2249,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[pandas -----read csv---->mouse_drug_15],"13	
14	# Read the Mouse and Drug Data and the Clinical Trial Data
15	mouse_drug = pd.read_csv(""data/mouse_drug_data.csv"")
16	clinical_trial= pd.read_csv(""data/clinicaltrial_data.csv"")
",DATA_IMPORT_EXTRACTION
2250,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[pandas -----read csv---->clinical_trial_16],"14	# Read the Mouse and Drug Data and the Clinical Trial Data
15	mouse_drug = pd.read_csv(""data/mouse_drug_data.csv"")
16	clinical_trial= pd.read_csv(""data/clinicaltrial_data.csv"")
17	
",DATA_IMPORT_EXTRACTION
2251,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[pandas -----merge---->clinical_trial_data_20],"18	
19	# Combine the data into a single dataset
20	clinical_trial_data = pd.merge(clinical_trial, mouse_drug, on=""Mouse ID"")
21	
",DATA_TRANSFORM
2252,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[pandas -----data frame---->avg_tumor_value_35],"33	# Convert to DataFrame
34	
35	avg_tumor_value = pd.DataFrame({""Drug"": drug,
36	                             ""Timepoint"": timepoint,
",DATA_TRANSFORM
2253,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[clinical_trial_16 -----clinical trial---->clinical_trial_data_20],"18	
19	# Combine the data into a single dataset
20	clinical_trial_data = pd.merge(clinical_trial, mouse_drug, on=""Mouse ID"")
21	
",DATA_TRANSFORM
2254,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[clinical_trial_data_20 -----rename---->clinical_trial_data_23],"21	
22	# Renaming Tumor Volume (mm3) to get rid of ()
23	clinical_trial_data.rename(columns={'Tumor Volume (mm3)': 'Tumor Vol'}, inplace=True)
24	
",DATA_TRANSFORM
2255,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[clinical_trial_data_23 -----head---->clinical_trial_data_26],"24	
25	# Display the data table for preview
26	clinical_trial_data.head()
27	
",EDA
2256,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[clinical_trial_data_26 -----groupby---->mean_tumor_30_intermediate_1],"clinical_trial_data_23 -----head---->clinical_trial_data_26
mean_tumor_30_intermediate_1 -----groupby---->mean_tumor_30
mean_tumor_30_intermediate_1 -----mean---->mean_tumor_30",DATA_TRANSFORM
2257,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[avg_tumor_value_35 -----avg tumor value---->avg_tumor_value_39],"37	                              ""Avg Tumor Value"": mean_tumor
38	                               })
39	avg_tumor_value
40	
",DATA_TRANSFORM
2258,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[matplotlib.pyplot -----show---->plt_75],"73	
74	# Show the Figure
75	plt.show()
76	
",EDA
2259,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[matplotlib.pyplot -----show---->plt_132],"130	
131	# Show the Figure
132	plt.show()
133	
",EDA
2260,000111fcf98fbc8caea1ee5adeba69325e97e420.execution_graph,[mean_tumor_30_intermediate_1 -----mean---->mean_tumor_30],"clinical_trial_data_26 -----groupby---->mean_tumor_30_intermediate_1
mean_tumor_30_intermediate_1 -----mean---->mean_tumor_30",DATA_TRANSFORM
2261,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[numpy -----seed---->np_9],"7	import numpy as np
8	
9	np.random.seed(71)
10	
",MODEL_TRAIN
2262,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[housing_103 -----data---->X_104],"102	# Read California housing data.
103	housing = fetch_california_housing()
104	X = housing.data
105	y = housing.target
",DATA_IMPORT_EXTRACTION
2263,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[housing_103 -----target---->y_105],"103	housing = fetch_california_housing()
104	X = housing.data
105	y = housing.target
106	
",DATA_IMPORT_EXTRACTION
2264,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[sklearn.datasets -----fetch california housing---->housing_103],"101	
102	# Read California housing data.
103	housing = fetch_california_housing()
104	X = housing.data
",DATA_IMPORT_EXTRACTION
2265,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_104 -----slice---->X_109],"107	X.shape, y.shape
108	
109	X[:3]
110	
",EDA
2266,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_105 -----slice---->y_111],"109	X[:3]
110	
111	y[:3]
112	
",EDA
2267,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_109 -----x---->X_train_raw_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",DATA_IMPORT_EXTRACTION
2268,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_109 -----x---->X_test_raw_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",DATA_IMPORT_EXTRACTION
2269,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_109 -----x---->y_train_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",DATA_IMPORT_EXTRACTION
2270,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_109 -----x---->y_test_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",MODEL_EVALUATION
2271,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_111 -----y---->X_train_raw_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",MODEL_TRAIN
2272,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_111 -----y---->X_test_raw_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",MODEL_EVALUATION
2273,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_111 -----y---->y_train_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",MODEL_TRAIN
2274,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_111 -----y---->y_test_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",MODEL_EVALUATION
2275,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_train_raw_114 -----x train raw---->X_train_123],"121	min_max_scaler = MinMaxScaler()
122	
123	X_train = min_max_scaler.fit_transform(X_train_raw)
124	X_test = min_max_scaler.transform(X_test_raw)
",DATA_TRANSFORM
2276,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[sklearn.model_selection -----train test split---->X_train_raw_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",MODEL_TRAIN
2277,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[sklearn.model_selection -----train test split---->X_test_raw_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",MODEL_TRAIN
2278,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[sklearn.model_selection -----train test split---->y_train_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",MODEL_TRAIN
2279,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[sklearn.model_selection -----train test split---->y_test_114],"112	
113	# Split data into training and test datasets.
114	X_train_raw, X_test_raw, y_train, y_test = train_test_split(
115	    X, y, test_size=0.25, random_state=71, shuffle=True)
",MODEL_EVALUATION
2280,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_test_raw_114 -----x test raw---->X_test_124],"122	
123	X_train = min_max_scaler.fit_transform(X_train_raw)
124	X_test = min_max_scaler.transform(X_test_raw)
125	
",DATA_TRANSFORM
2281,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_train_114 -----y train---->linreg_130],"128	
129	# Get datasets and build graph.
130	linreg.get_dataset(X_train, y_train, shuffle=True)
131	
",MODEL_TRAIN
2282,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_train_114 -----y train---->mean_squared_error_142],"140	
141	# Prediction squared error for training data.
142	mean_squared_error(y_train, y_train_hat)
143	
",MODEL_EVALUATION
2283,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_train_114 -----y train---->linreg_sk_154],"152	linreg_sk = LinearRegressionSklearn()
153	
154	linreg_sk.fit(X_train, y_train)
155	
",MODEL_TRAIN
2284,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_train_114 -----y train---->mean_squared_error_164],"162	
163	# Prediction squared error for training data.
164	mean_squared_error(y_train, y_train_hat)
165	
",MODEL_EVALUATION
2285,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_test_114 -----y test---->mean_squared_error_149],"147	
148	# Prediction accuracy for test data.
149	mean_squared_error(y_test, y_test_hat)
150	
",MODEL_EVALUATION
2286,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_test_114 -----y test---->mean_squared_error_171],"169	
170	# # Prediction accuracy for test data.
171	mean_squared_error(y_test, y_test_hat)
172	
",MODEL_EVALUATION
2287,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[min_max_scaler_121 -----fit transform---->X_train_123],"121	min_max_scaler = MinMaxScaler()
122	
123	X_train = min_max_scaler.fit_transform(X_train_raw)
124	X_test = min_max_scaler.transform(X_test_raw)
",DATA_TRANSFORM
2288,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[min_max_scaler_121 -----transform---->X_test_124],"122	
123	X_train = min_max_scaler.fit_transform(X_train_raw)
124	X_test = min_max_scaler.transform(X_test_raw)
125	
",DATA_TRANSFORM
2289,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[sklearn.preprocessing -----min max scaler---->min_max_scaler_121],"119	
120	# Feature engineering for standardizing features by min-max scaler.
121	min_max_scaler = MinMaxScaler()
122	
",DATA_TRANSFORM
2290,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_train_123 -----x train---->linreg_130],"128	
129	# Get datasets and build graph.
130	linreg.get_dataset(X_train, y_train, shuffle=True)
131	
",MODEL_TRAIN
2291,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_train_123 -----x train---->y_train_hat_138],"136	
137	# Predicted response for training data.
138	y_train_hat = linreg.predict(X_train)
139	y_train_hat[:3]
",MODEL_TRAIN
2292,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_train_123 -----x train---->linreg_sk_154],"152	linreg_sk = LinearRegressionSklearn()
153	
154	linreg_sk.fit(X_train, y_train)
155	
",MODEL_TRAIN
2293,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_train_123 -----x train---->y_train_hat_160],"158	
159	# Predicted labels for training data.
160	y_train_hat = linreg_sk.predict(X_train)
161	y_train_hat[:3]
",MODEL_TRAIN
2294,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_test_124 -----x test---->y_test_hat_145],"143	
144	# Predicted response for test data.
145	y_test_hat = linreg.predict(X_test)
146	y_test_hat[:3]
",MODEL_EVALUATION
2295,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[X_test_124 -----x test---->y_test_hat_167],"165	
166	# Predicted labels for test data.
167	y_test_hat = linreg_sk.predict(X_test)
168	y_test_hat[:3]
",MODEL_EVALUATION
2296,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[linreg_127 -----get dataset---->linreg_130],"128	
129	# Get datasets and build graph.
130	linreg.get_dataset(X_train, y_train, shuffle=True)
131	
",MODEL_TRAIN
2297,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[LinearRegression -----linear regression---->linreg_127],"125	
126	# Fit our Linear Regression.
127	linreg = LinearRegression(batch_size=64, lr=0.1, n_epochs=1000)
128	
",MODEL_TRAIN
2298,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[linreg_130 -----fit---->linreg_132],"130	linreg.get_dataset(X_train, y_train, shuffle=True)
131	
132	linreg.fit()
133	
",MODEL_TRAIN
2299,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[linreg_132 -----get coeff---->linreg_135],"133	
134	# Get coefficient.
135	linreg.get_coeff()
136	
",MODEL_TRAIN
2300,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[linreg_135 -----predict---->y_train_hat_138],"136	
137	# Predicted response for training data.
138	y_train_hat = linreg.predict(X_train)
139	y_train_hat[:3]
",MODEL_TRAIN
2301,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[linreg_135 -----predict---->y_test_hat_145],"143	
144	# Predicted response for test data.
145	y_test_hat = linreg.predict(X_test)
146	y_test_hat[:3]
",MODEL_EVALUATION
2302,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_train_hat_138 -----slice---->y_train_hat_139],"137	# Predicted response for training data.
138	y_train_hat = linreg.predict(X_train)
139	y_train_hat[:3]
140	
",DATA_TRANSFORM
2303,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_train_hat_139 -----y train hat---->mean_squared_error_142],"140	
141	# Prediction squared error for training data.
142	mean_squared_error(y_train, y_train_hat)
143	
",MODEL_EVALUATION
2304,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_train_hat_139 -----reassign---->y_train_hat_160],"158	
159	# Predicted labels for training data.
160	y_train_hat = linreg_sk.predict(X_train)
161	y_train_hat[:3]
",MODEL_TRAIN
2305,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[metrics -----mean squared error---->mean_squared_error_142],"140	
141	# Prediction squared error for training data.
142	mean_squared_error(y_train, y_train_hat)
143	
",MODEL_EVALUATION
2306,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[metrics -----mean squared error---->mean_squared_error_149],"147	
148	# Prediction accuracy for test data.
149	mean_squared_error(y_test, y_test_hat)
150	
",MODEL_EVALUATION
2307,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[metrics -----mean squared error---->mean_squared_error_164],"162	
163	# Prediction squared error for training data.
164	mean_squared_error(y_train, y_train_hat)
165	
",MODEL_EVALUATION
2308,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[metrics -----mean squared error---->mean_squared_error_171],"169	
170	# # Prediction accuracy for test data.
171	mean_squared_error(y_test, y_test_hat)
172	
",MODEL_EVALUATION
2309,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_test_hat_145 -----slice---->y_test_hat_146],"144	# Predicted response for test data.
145	y_test_hat = linreg.predict(X_test)
146	y_test_hat[:3]
147	
",DATA_TRANSFORM
2310,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_test_hat_146 -----y test hat---->mean_squared_error_149],"147	
148	# Prediction accuracy for test data.
149	mean_squared_error(y_test, y_test_hat)
150	
",MODEL_EVALUATION
2311,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_test_hat_146 -----reassign---->y_test_hat_167],"165	
166	# Predicted labels for test data.
167	y_test_hat = linreg_sk.predict(X_test)
168	y_test_hat[:3]
",MODEL_EVALUATION
2312,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[linreg_sk_152 -----fit---->linreg_sk_154],"152	linreg_sk = LinearRegressionSklearn()
153	
154	linreg_sk.fit(X_train, y_train)
155	
",MODEL_TRAIN
2313,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[sklearn.linear_model -----linear regression sklearn---->linreg_sk_152],"150	
151	# Fit sklearn's Logistic Regression.
152	linreg_sk = LinearRegressionSklearn()
153	
",ENVIRONMENT
2314,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[linreg_sk_154 -----predict---->y_train_hat_160],"158	
159	# Predicted labels for training data.
160	y_train_hat = linreg_sk.predict(X_train)
161	y_train_hat[:3]
",MODEL_TRAIN
2315,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[linreg_sk_154 -----predict---->y_test_hat_167],"165	
166	# Predicted labels for test data.
167	y_test_hat = linreg_sk.predict(X_test)
168	y_test_hat[:3]
",MODEL_EVALUATION
2316,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_train_hat_160 -----slice---->y_train_hat_161],"159	# Predicted labels for training data.
160	y_train_hat = linreg_sk.predict(X_train)
161	y_train_hat[:3]
162	
",MODEL_TRAIN
2317,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_train_hat_161 -----y train hat---->mean_squared_error_164],"162	
163	# Prediction squared error for training data.
164	mean_squared_error(y_train, y_train_hat)
165	
",MODEL_EVALUATION
2318,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_test_hat_167 -----slice---->y_test_hat_168],"166	# Predicted labels for test data.
167	y_test_hat = linreg_sk.predict(X_test)
168	y_test_hat[:3]
169	
",MODEL_EVALUATION
2319,000122acb52021f7ef1b1d67a25b14cc47799be4.execution_graph,[y_test_hat_168 -----y test hat---->mean_squared_error_171],"169	
170	# # Prediction accuracy for test data.
171	mean_squared_error(y_test, y_test_hat)
172	
",MODEL_EVALUATION
2320,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[credits_5 -----head---->credits_9],"7	movies_df = pd.read_csv(""tmdb_5000_movies.csv"")
8	
9	credits.head()
10	
",EDA
2321,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[pandas -----read csv---->credits_5],"3	
4	#https://www.kaggle.com/tmdb/tmdb-movie-metadata
5	credits = pd.read_csv(""tmdb_5000_credits.csv"")
6	
",DATA_IMPORT_EXTRACTION
2322,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[pandas -----read csv---->movies_df_7],"5	credits = pd.read_csv(""tmdb_5000_credits.csv"")
6	
7	movies_df = pd.read_csv(""tmdb_5000_movies.csv"")
8	
",DATA_IMPORT_EXTRACTION
2323,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[pandas -----series---->indices_53_intermediate_1],"movies_cleaned_df_36_intermediate_1 -----read csv---->movies_cleaned_df_36
movies_cleaned_df_36_intermediate_1 -----read csv---->movies_cleaned_df_36
movies_cleaned_df_36_intermediate_1 -----series---->movies_cleaned_df_36
movies_cleaned_df_36_intermediate_1 -----drop duplicates---->movies_cleaned_df_36",DATA_TRANSFORM
2324,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[movies_df_7 -----head---->movies_df_11],"9	credits.head()
10	
11	movies_df.head()
12	
",EDA
2325,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[credits_9 -----rename---->credits_column_renamed_16],"14	print(""Movies Dataframe:"",movies_df.shape)
15	
16	credits_column_renamed = credits.rename(index=str, columns={""movie_id"": ""id""})
17	movies_df_merge = movies_df.merge(credits_column_renamed, on='id')
",DATA_TRANSFORM
2326,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[movies_df_11 -----merge---->movies_df_merge_17],"15	
16	credits_column_renamed = credits.rename(index=str, columns={""movie_id"": ""id""})
17	movies_df_merge = movies_df.merge(credits_column_renamed, on='id')
18	movies_df_merge.head()
",DATA_TRANSFORM
2327,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[credits_column_renamed_16 -----credits column renamed---->movies_df_merge_17],"15	
16	credits_column_renamed = credits.rename(index=str, columns={""movie_id"": ""id""})
17	movies_df_merge = movies_df.merge(credits_column_renamed, on='id')
18	movies_df_merge.head()
",DATA_TRANSFORM
2328,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[movies_df_merge_17 -----head---->movies_df_merge_18],"16	credits_column_renamed = credits.rename(index=str, columns={""movie_id"": ""id""})
17	movies_df_merge = movies_df.merge(credits_column_renamed, on='id')
18	movies_df_merge.head()
19	
",EDA
2329,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[movies_df_merge_18 -----drop---->movies_cleaned_df_20],"18	movies_df_merge.head()
19	
20	movies_cleaned_df = movies_df_merge.drop(columns=['homepage', 'title_x', 'title_y', 'status','production_countries'])
21	movies_cleaned_df.head()
",DATA_TRANSFORM
2330,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[movies_cleaned_df_20 -----head---->movies_cleaned_df_21],"19	
20	movies_cleaned_df = movies_df_merge.drop(columns=['homepage', 'title_x', 'title_y', 'status','production_countries'])
21	movies_cleaned_df.head()
22	
",EDA
2331,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[movies_cleaned_df_21 -----info---->movies_cleaned_df_23],"21	movies_cleaned_df.head()
22	
23	movies_cleaned_df.info()
24	
",EDA
2332,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[movies_cleaned_df_23 -----head---->movies_cleaned_df_25],"23	movies_cleaned_df.info()
24	
25	movies_cleaned_df.head(1)['overview']
26	
",EDA
2333,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[movies_cleaned_df_25 -----select---->movies_cleaned_df_36_intermediate_1],"movies_cleaned_df_23 -----head---->movies_cleaned_df_25
movies_cleaned_df_36_intermediate_1 -----select---->movies_cleaned_df_36
movies_cleaned_df_36_intermediate_1 -----fillna---->movies_cleaned_df_36",EDA
2334,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[tfv_30 -----fit transform---->tfv_matrix_39],"37	
38	# Fitting the TF-IDF on the 'overview' text
39	tfv_matrix = tfv.fit_transform(movies_cleaned_df['overview'])
40	
",DATA_TRANSFORM
2335,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[sklearn.feature_extraction.text -----tfidf vectorizer---->tfv_30],"28	
29	
30	tfv = TfidfVectorizer(min_df=3,  max_features=None, 
31	            strip_accents='unicode', analyzer='word',token_pattern=r'\w{1,}',
",DATA_TRANSFORM
2336,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[movies_cleaned_df_36 -----movies cleaned df---->tfv_matrix_39],"37	
38	# Fitting the TF-IDF on the 'overview' text
39	tfv_matrix = tfv.fit_transform(movies_cleaned_df['overview'])
40	
",DATA_TRANSFORM
2337,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[movies_cleaned_df_36 -----movies cleaned df---->indices_53],"51	
52	# Reverse mapping of indices and movie titles
53	indices = pd.Series(movies_cleaned_df.index, index=movies_cleaned_df['original_title']).drop_duplicates()
54	
",DATA_TRANSFORM
2338,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[tfv_matrix_39 -----tfv matrix---->tfv_matrix_41],"39	tfv_matrix = tfv.fit_transform(movies_cleaned_df['overview'])
40	
41	tfv_matrix
42	
",DATA_TRANSFORM
2339,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[tfv_matrix_41 -----shape---->tfv_matrix_43],"41	tfv_matrix
42	
43	tfv_matrix.shape
44	
",EDA
2340,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[tfv_matrix_43 -----tfv matrix---->sig_48],"46	
47	# Compute the sigmoid kernel
48	sig = sigmoid_kernel(tfv_matrix, tfv_matrix)
49	
",DATA_TRANSFORM
2341,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[sig_48 -----select---->sig_50],"48	sig = sigmoid_kernel(tfv_matrix, tfv_matrix)
49	
50	sig[0]
51	
",NOT_INTERESTING
2342,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[sklearn.metrics.pairwise -----sigmoid kernel---->sig_48],"46	
47	# Compute the sigmoid kernel
48	sig = sigmoid_kernel(tfv_matrix, tfv_matrix)
49	
",MODEL_TRAIN
2343,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[sig_50 -----select---->sig_59],"57	indices['Newlyweds']
58	
59	sig[4799]
60	
",NOT_INTERESTING
2344,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[indices_53 -----indices---->indices_55],"53	indices = pd.Series(movies_cleaned_df.index, index=movies_cleaned_df['original_title']).drop_duplicates()
54	
55	indices
56	
",DATA_TRANSFORM
2345,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[indices_55 -----select---->indices_57],"55	indices
56	
57	indices['Newlyweds']
58	
",DATA_TRANSFORM
2346,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[indices_53_intermediate_1 -----drop duplicates---->indices_53],"pandas -----series---->indices_53_intermediate_1
movies_cleaned_df_36_intermediate_1 -----drop duplicates---->movies_cleaned_df_36
movies_cleaned_df_36_intermediate_1 -----indices---->movies_cleaned_df_36",DATA_TRANSFORM
2347,0001275f1719864cbd00c441b7643cd2e6fe402f.execution_graph,[movies_cleaned_df_36_intermediate_1 -----fillna---->movies_cleaned_df_36],"movies_cleaned_df_25 -----select---->movies_cleaned_df_36_intermediate_1
movies_cleaned_df_36_intermediate_1 -----fillna---->movies_cleaned_df_36
movies_cleaned_df_36_intermediate_1 -----movies cleaned df---->movies_cleaned_df_36
movies_cleaned_df_36_intermediate_1 -----movies cleaned df---->movies_cleaned_df_36",DATA_TRANSFORM
2348,00013b15249b240e064bc21fdf83f0954abb4b3c.execution_graph,[root_205 -----geometry---->root_206],"204	    
205	root = Tk()
206	root.geometry(""570x670"")
207	root.resizable(0, 0)
",ENVIRONMENT
2349,00013b15249b240e064bc21fdf83f0954abb4b3c.execution_graph,[root_206 -----resizable---->root_207],"205	root = Tk()
206	root.geometry(""570x670"")
207	root.resizable(0, 0)
208	app = App(root)
",ENVIRONMENT
2350,00013b15249b240e064bc21fdf83f0954abb4b3c.execution_graph,[root_207 -----root---->app_208],"206	root.geometry(""570x670"")
207	root.resizable(0, 0)
208	app = App(root)
209	root.mainloop()
",ENVIRONMENT
2351,00013b15249b240e064bc21fdf83f0954abb4b3c.execution_graph,[root_207 -----mainloop---->root_209],"207	root.resizable(0, 0)
208	app = App(root)
209	root.mainloop()
210	
",ENVIRONMENT
2352,00013b15249b240e064bc21fdf83f0954abb4b3c.execution_graph,[App -----app---->app_208],"206	root.geometry(""570x670"")
207	root.resizable(0, 0)
208	app = App(root)
209	root.mainloop()
",ENVIRONMENT
2353,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[path_7 -----path---->IBM_8],"6	
7	path = ""/mnt/c/Users/Cleme/Documents/Python/Project_Py/data/ibm_hr_attrition.csv""
8	IBM = pd.read_csv(path,sep="","")
9	IBM.describe()
",DATA_IMPORT_EXTRACTION
2354,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[IBM_8 -----describe---->IBM_9],"7	path = ""/mnt/c/Users/Cleme/Documents/Python/Project_Py/data/ibm_hr_attrition.csv""
8	IBM = pd.read_csv(path,sep="","")
9	IBM.describe()
10	
",EDA
2355,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[pandas -----read csv---->IBM_8],"6	
7	path = ""/mnt/c/Users/Cleme/Documents/Python/Project_Py/data/ibm_hr_attrition.csv""
8	IBM = pd.read_csv(path,sep="","")
9	IBM.describe()
",DATA_IMPORT_EXTRACTION
2356,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[IBM_9 -----select---->IBM_12_intermediate_1],"IBM_8 -----describe---->IBM_9
Salary_25_intermediate_2 -----select---->Salary_25
Salary_25_intermediate_2 -----replace---->Salary_25",DATA_TRANSFORM
2357,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[matplotlib.pyplot -----figure---->plt_11],"9	IBM.describe()
10	
11	plt.figure(figsize=(20,6))
12	IBM['Attrition'] = IBM['Attrition'].replace('Yes',1).replace('No',0)
",ENVIRONMENT
2358,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[matplotlib.pyplot -----hist---->plt_14],"12	IBM['Attrition'] = IBM['Attrition'].replace('Yes',1).replace('No',0)
13	
14	plt.hist(IBM[""EducationField""], bins=10)
15	
",EDA
2359,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[IBM_12 -----ibm---->plt_14],"12	IBM['Attrition'] = IBM['Attrition'].replace('Yes',1).replace('No',0)
13	
14	plt.hist(IBM[""EducationField""], bins=10)
15	
",EDA
2360,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[IBM_12 -----ibm---->ax_20],"18	
19	
20	ax = sb.distplot(IBM['MonthlyIncome'])
21	
",EDA
2361,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[IBM_12 -----filter---->Salary_25_intermediate_1],"IBM_12_intermediate_1 -----replace---->IBM_12
Salary_25_intermediate_2 -----ibm---->Salary_25
Salary_25_intermediate_2 -----ibm---->Salary_25
Salary_25_intermediate_2 -----filter---->Salary_25
Salary_25_intermediate_2 -----select---->Salary_25",DATA_TRANSFORM
2362,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[ax_20 -----reassign---->ax_26],"24	
25	Salary = IBM[IBM['MonthlyIncome']<5000]
26	ax = sb.distplot(Salary['MonthlyIncome'])
27	
",EDA
2363,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[seaborn -----distplot---->ax_20],"18	
19	
20	ax = sb.distplot(IBM['MonthlyIncome'])
21	
",EDA
2364,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[seaborn -----distplot---->ax_26],"24	
25	Salary = IBM[IBM['MonthlyIncome']<5000]
26	ax = sb.distplot(Salary['MonthlyIncome'])
27	
",EDA
2365,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[Salary_25 -----salary---->ax_26],"24	
25	Salary = IBM[IBM['MonthlyIncome']<5000]
26	ax = sb.distplot(Salary['MonthlyIncome'])
27	
",EDA
2366,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[IBM_12_intermediate_1 -----replace---->IBM_12],"IBM_9 -----select---->IBM_12_intermediate_1
Salary_25_intermediate_2 -----replace---->Salary_25
Salary_25_intermediate_2 -----ibm---->Salary_25
Salary_25_intermediate_2 -----ibm---->Salary_25
Salary_25_intermediate_2 -----filter---->Salary_25",DATA_TRANSFORM
2367,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[Salary_25_intermediate_1 -----select---->Salary_25_intermediate_2],"IBM_12 -----filter---->Salary_25_intermediate_1
Salary_25_intermediate_2 -----select---->Salary_25
Salary_25_intermediate_2 -----less than---->Salary_25",DATA_TRANSFORM
2368,00013bd7b2ba6367b3475e0dc46762daa2ba15d1.execution_graph,[Salary_25_intermediate_2 -----less than---->Salary_25],"Salary_25_intermediate_1 -----select---->Salary_25_intermediate_2
Salary_25_intermediate_2 -----less than---->Salary_25
Salary_25_intermediate_2 -----salary---->Salary_25",EDA
2369,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[train_14 -----train---->train_48],"46	    return df
47	
48	train               = reduce_memory(train)
49	weather_train       = reduce_memory(weather_train)
",DATA_TRANSFORM
2370,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[pandas -----read csv---->train_14],"12	datapath='C:/Users/SSK/Documents/Competition_/Kaggle/ashrae-energy-prediction'
13	
14	train             = pd.read_csv(datapath+'/train.csv', nrows=2000)
15	building_metadata = pd.read_csv(datapath+'/building_metadata.csv')
",DATA_IMPORT_EXTRACTION
2371,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[pandas -----read csv---->building_metadata_15],"13	
14	train             = pd.read_csv(datapath+'/train.csv', nrows=2000)
15	building_metadata = pd.read_csv(datapath+'/building_metadata.csv')
16	weather_train     = pd.read_csv(datapath+'/weather_train.csv')
",DATA_IMPORT_EXTRACTION
2372,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[pandas -----read csv---->weather_train_16],"14	train             = pd.read_csv(datapath+'/train.csv', nrows=2000)
15	building_metadata = pd.read_csv(datapath+'/building_metadata.csv')
16	weather_train     = pd.read_csv(datapath+'/weather_train.csv')
17	
",DATA_IMPORT_EXTRACTION
2373,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[pandas -----data frame---->encode_df_85],"83	building_metadata_part = building_metadata[['building_id','site_id','primary_use','square_feet', 'floor_count']]
84	cols    = ['primary_use', 'site_id']
85	encode_df = pd.DataFrame()
86	for col in cols:
",DATA_TRANSFORM
2374,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[pandas -----data frame---->label_code_89],"87	    lb_style   = LabelBinarizer()
88	    lb_results = lb_style.fit_transform(building_metadata_part[col])
89	    label_code = pd.DataFrame(lb_results, columns=lb_style.classes_)
90	    encode_df  = pd.concat([encode_df, label_code], axis=1)
",DATA_TRANSFORM
2375,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[pandas -----concat---->encode_df_90],"88	    lb_results = lb_style.fit_transform(building_metadata_part[col])
89	    label_code = pd.DataFrame(lb_results, columns=lb_style.classes_)
90	    encode_df  = pd.concat([encode_df, label_code], axis=1)
91	    
",DATA_TRANSFORM
2376,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[pandas -----concat---->buidling_encode_92],"90	    encode_df  = pd.concat([encode_df, label_code], axis=1)
91	    
92	buidling_encode = pd.concat([encode_df, building_metadata_part[['building_id','square_feet', 'floor_count']]], axis=1)
93	buidling_encode = buidling_encode.set_index('building_id')
",DATA_TRANSFORM
2377,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[pandas -----concat---->combine_data_103],"101	y_pred          = building_model.predict(X_test)
102	X_test['floor_count'] = np.around(y_pred).astype(int)
103	combine_data    = pd.concat([train_, X_test], axis=0)
104	building_metadata_noNA = pd.merge(building_metadata[['site_id', 'building_id', 'primary_use', 'square_feet', 'year_built']],
",DATA_TRANSFORM
2378,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[pandas -----merge---->building_metadata_noNA_104],"102	X_test['floor_count'] = np.around(y_pred).astype(int)
103	combine_data    = pd.concat([train_, X_test], axis=0)
104	building_metadata_noNA = pd.merge(building_metadata[['site_id', 'building_id', 'primary_use', 'square_feet', 'year_built']],
105	                            combine_data[['floor_count']], how='inner',left_index=True, right_index=True)
",DATA_TRANSFORM
2379,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[building_metadata_15 -----building metadata---->building_metadata_50],"48	train               = reduce_memory(train)
49	weather_train       = reduce_memory(weather_train)
50	building_metadata   = reduce_memory(building_metadata)
51	
",DATA_TRANSFORM
2380,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[weather_train_16 -----weather train---->weather_train_49],"47	
48	train               = reduce_memory(train)
49	weather_train       = reduce_memory(weather_train)
50	building_metadata   = reduce_memory(building_metadata)
",DATA_TRANSFORM
2381,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[train_48 -----train---->plt_67],"65	
66	import matplotlib.pyplot as plt
67	plt.plot(train[train['meter'] == 1]['meter_reading'])
68	plt.show()
",EDA
2382,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[train_48 -----train---->plt_70],"68	plt.show()
69	
70	plt.plot(train[train['meter'] == 0]['meter_reading'])
71	plt.show()
",EDA
2383,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[train_48 -----train---->plt_73],"71	plt.show()
72	
73	plt.plot(train[train['meter'] == 2]['meter_reading'])
74	plt.show()
",EDA
2384,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[train_48 -----train---->plt_76],"74	plt.show()
75	
76	plt.plot(train[train['meter'] == 3]['meter_reading'])
77	plt.show()
",EDA
2385,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[train_48 -----train---->train_142],"140	    return df
141	
142	train           = change_date(train)
143	weather_train   = change_datetime(weather_train)
",DATA_TRANSFORM
2386,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[weather_train_49 -----weather train---->missing_weather_59],"57	    return pd.DataFrame.from_dict(data_dict, orient='index', columns=['MissingValue'])
58	
59	missing_weather  = cal_missing_val(weather_train)
60	missing_building = cal_missing_val(building_metadata)
",DATA_TRANSFORM
2387,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[weather_train_49 -----weather train---->weather_train_122],"120	    return df
121	cols_to_impute = ['air_temperature','cloud_coverage','dew_temperature','precip_depth_1_hr', 'sea_level_pressure', 'wind_direction', 'wind_speed' ]
122	weather_train  = rolling_mean_weather(weather_train, cols_to_impute, [3,5,7,14,30])
123	
",DATA_TRANSFORM
2388,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[building_metadata_50 -----building metadata---->missing_building_60],"58	
59	missing_weather  = cal_missing_val(weather_train)
60	missing_building = cal_missing_val(building_metadata)
61	
",DATA_TRANSFORM
2389,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[building_metadata_50 -----select---->building_metadata_part_83],"81	from sklearn.preprocessing import LabelBinarizer
82	
83	building_metadata_part = building_metadata[['building_id','site_id','primary_use','square_feet', 'floor_count']]
84	cols    = ['primary_use', 'site_id']
",DATA_TRANSFORM
2390,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[building_metadata_50 -----building metadata---->building_metadata_noNA_104],"102	X_test['floor_count'] = np.around(y_pred).astype(int)
103	combine_data    = pd.concat([train_, X_test], axis=0)
104	building_metadata_noNA = pd.merge(building_metadata[['site_id', 'building_id', 'primary_use', 'square_feet', 'year_built']],
105	                            combine_data[['floor_count']], how='inner',left_index=True, right_index=True)
",DATA_TRANSFORM
2391,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[missing_weather_59 -----missing weather---->missing_weather_62],"60	missing_building = cal_missing_val(building_metadata)
61	
62	missing_weather
63	
",DATA_TRANSFORM
2392,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[missing_building_60 -----missing building---->missing_building_64],"62	missing_weather
63	
64	missing_building
65	
",DATA_TRANSFORM
2393,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[matplotlib.pyplot -----plot---->plt_67],"65	
66	import matplotlib.pyplot as plt
67	plt.plot(train[train['meter'] == 1]['meter_reading'])
68	plt.show()
",EDA
2394,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[matplotlib.pyplot -----show---->plt_68],"66	import matplotlib.pyplot as plt
67	plt.plot(train[train['meter'] == 1]['meter_reading'])
68	plt.show()
69	
",EDA
2395,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[matplotlib.pyplot -----plot---->plt_70],"68	plt.show()
69	
70	plt.plot(train[train['meter'] == 0]['meter_reading'])
71	plt.show()
",EDA
2396,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[matplotlib.pyplot -----show---->plt_71],"69	
70	plt.plot(train[train['meter'] == 0]['meter_reading'])
71	plt.show()
72	
",EDA
2397,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[matplotlib.pyplot -----plot---->plt_73],"71	plt.show()
72	
73	plt.plot(train[train['meter'] == 2]['meter_reading'])
74	plt.show()
",EDA
2398,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[matplotlib.pyplot -----show---->plt_74],"72	
73	plt.plot(train[train['meter'] == 2]['meter_reading'])
74	plt.show()
75	
",EDA
2399,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[matplotlib.pyplot -----plot---->plt_76],"74	plt.show()
75	
76	plt.plot(train[train['meter'] == 3]['meter_reading'])
77	plt.show()
",EDA
2400,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[matplotlib.pyplot -----show---->plt_77],"75	
76	plt.plot(train[train['meter'] == 3]['meter_reading'])
77	plt.show()
78	
",EDA
2401,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[building_metadata_part_83 -----building metadata part---->lb_results_88],"86	for col in cols:
87	    lb_style   = LabelBinarizer()
88	    lb_results = lb_style.fit_transform(building_metadata_part[col])
89	    label_code = pd.DataFrame(lb_results, columns=lb_style.classes_)
",DATA_TRANSFORM
2402,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[encode_df_85 -----loop---->encode_df_90],"
",DATA_TRANSFORM
2403,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[encode_df_90 -----end_loop---->loop_encode_df_85_encode_df_90],"
",DATA_TRANSFORM
2404,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[lb_style_87 -----fit transform---->lb_results_88],"86	for col in cols:
87	    lb_style   = LabelBinarizer()
88	    lb_results = lb_style.fit_transform(building_metadata_part[col])
89	    label_code = pd.DataFrame(lb_results, columns=lb_style.classes_)
",DATA_TRANSFORM
2405,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[sklearn.preprocessing -----label binarizer---->lb_style_87],"85	encode_df = pd.DataFrame()
86	for col in cols:
87	    lb_style   = LabelBinarizer()
88	    lb_results = lb_style.fit_transform(building_metadata_part[col])
",DATA_TRANSFORM
2406,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[lb_results_88 -----lb results---->label_code_89],"87	    lb_style   = LabelBinarizer()
88	    lb_results = lb_style.fit_transform(building_metadata_part[col])
89	    label_code = pd.DataFrame(lb_results, columns=lb_style.classes_)
90	    encode_df  = pd.concat([encode_df, label_code], axis=1)
",DATA_TRANSFORM
2407,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[loop_encode_df_85_encode_df_90 -----restart_loop---->encode_df_85],"
",DATA_TRANSFORM
2408,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[buidling_encode_92 -----set index---->buidling_encode_93],"91	    
92	buidling_encode = pd.concat([encode_df, building_metadata_part[['building_id','square_feet', 'floor_count']]], axis=1)
93	buidling_encode = buidling_encode.set_index('building_id')
94	test_           = buidling_encode[buidling_encode['floor_count'].isnull()]
",DATA_TRANSFORM
2409,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[buidling_encode_93 -----buidling encode[buidling encode['floor count'] isnull()]---->test__94_intermediate_1],"buidling_encode_92 -----set index---->buidling_encode_93
X_test_102_intermediate_1 -----buidling encode[buidling encode['floor count'] isnull()]---->X_test_102
X_test_102_intermediate_1 -----buidling encode[buidling encode['floor count'] notnull()]---->X_test_102
X_test_102_intermediate_1 -----select---->X_test_102",DATA_TRANSFORM
2410,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[buidling_encode_93 -----buidling encode[buidling encode['floor count'] notnull()]---->train__95_intermediate_1],"buidling_encode_92 -----set index---->buidling_encode_93
X_test_102_intermediate_1 -----buidling encode[buidling encode['floor count'] isnull()]---->X_test_102
X_test_102_intermediate_1 -----buidling encode[buidling encode['floor count'] notnull()]---->X_test_102
X_test_102_intermediate_1 -----select---->X_test_102",MODEL_TRAIN
2411,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[test__94 -----drop---->X_test_97],"95	train_          = buidling_encode[buidling_encode['floor_count'].notnull()]
96	model           = LinearRegression()
97	X_test          = test_.drop(['floor_count'],axis=1)
98	X_train         = train_.iloc[:,:-1].values
",DATA_TRANSFORM
2412,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[train__95 -----iloc---->X_train_98_intermediate_1],"train__95_intermediate_2 -----notnull---->train__95
X_test_102_intermediate_1 -----iloc---->X_test_102
X_test_102_intermediate_1 -----select---->X_test_102
X_test_102_intermediate_1 -----values---->X_test_102",DATA_TRANSFORM
2413,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[train__95 -----select---->Y_train_99_intermediate_1],"train__95_intermediate_2 -----notnull---->train__95
X_test_102_intermediate_1 -----iloc---->X_test_102
X_test_102_intermediate_1 -----select---->X_test_102
X_test_102_intermediate_1 -----values---->X_test_102",DATA_TRANSFORM
2414,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[model_96 -----fit---->building_model_100],"98	X_train         = train_.iloc[:,:-1].values
99	Y_train         = train_['floor_count'].values
100	building_model  = model.fit(X_train, Y_train)
101	y_pred          = building_model.predict(X_test)
",MODEL_TRAIN
2415,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[sklearn.linear_model -----linear regression---->model_96],"94	test_           = buidling_encode[buidling_encode['floor_count'].isnull()]
95	train_          = buidling_encode[buidling_encode['floor_count'].notnull()]
96	model           = LinearRegression()
97	X_test          = test_.drop(['floor_count'],axis=1)
",MODEL_TRAIN
2416,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[X_test_97 -----x test---->y_pred_101],"99	Y_train         = train_['floor_count'].values
100	building_model  = model.fit(X_train, Y_train)
101	y_pred          = building_model.predict(X_test)
102	X_test['floor_count'] = np.around(y_pred).astype(int)
",MODEL_EVALUATION
2417,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[X_test_97 -----reassign---->X_test_102],"100	building_model  = model.fit(X_train, Y_train)
101	y_pred          = building_model.predict(X_test)
102	X_test['floor_count'] = np.around(y_pred).astype(int)
103	combine_data    = pd.concat([train_, X_test], axis=0)
",MODEL_EVALUATION
2418,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[X_train_98 -----x train---->building_model_100],"98	X_train         = train_.iloc[:,:-1].values
99	Y_train         = train_['floor_count'].values
100	building_model  = model.fit(X_train, Y_train)
101	y_pred          = building_model.predict(X_test)
",MODEL_TRAIN
2419,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[Y_train_99 -----y train---->building_model_100],"98	X_train         = train_.iloc[:,:-1].values
99	Y_train         = train_['floor_count'].values
100	building_model  = model.fit(X_train, Y_train)
101	y_pred          = building_model.predict(X_test)
",MODEL_TRAIN
2420,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[building_model_100 -----predict---->y_pred_101],"99	Y_train         = train_['floor_count'].values
100	building_model  = model.fit(X_train, Y_train)
101	y_pred          = building_model.predict(X_test)
102	X_test['floor_count'] = np.around(y_pred).astype(int)
",MODEL_EVALUATION
2421,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[y_pred_101 -----y pred---->X_test_102],"100	building_model  = model.fit(X_train, Y_train)
101	y_pred          = building_model.predict(X_test)
102	X_test['floor_count'] = np.around(y_pred).astype(int)
103	combine_data    = pd.concat([train_, X_test], axis=0)
",MODEL_EVALUATION
2422,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[numpy -----around---->X_test_102_intermediate_1],"X_test_102_intermediate_1 -----around---->X_test_102
X_test_102_intermediate_1 -----astype---->X_test_102",DATA_TRANSFORM
2423,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[combine_data_103 -----combine data---->building_metadata_noNA_104],"102	X_test['floor_count'] = np.around(y_pred).astype(int)
103	combine_data    = pd.concat([train_, X_test], axis=0)
104	building_metadata_noNA = pd.merge(building_metadata[['site_id', 'building_id', 'primary_use', 'square_feet', 'year_built']],
105	                            combine_data[['floor_count']], how='inner',left_index=True, right_index=True)
",DATA_TRANSFORM
2424,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[cols_to_impute_121 -----cols to impute---->weather_train_122],"120	    return df
121	cols_to_impute = ['air_temperature','cloud_coverage','dew_temperature','precip_depth_1_hr', 'sea_level_pressure', 'wind_direction', 'wind_speed' ]
122	weather_train  = rolling_mean_weather(weather_train, cols_to_impute, [3,5,7,14,30])
123	
",DATA_TRANSFORM
2425,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[weather_train_122 -----weather train---->weather_train_143],"141	
142	train           = change_date(train)
143	weather_train   = change_datetime(weather_train)
144	
",DATA_TRANSFORM
2426,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[test__94_intermediate_1 -----select---->test__94_intermediate_2],"buidling_encode_93 -----buidling encode[buidling encode['floor count'] isnull()]---->test__94_intermediate_1
X_test_102_intermediate_1 -----select---->X_test_102
X_test_102_intermediate_1 -----isnull---->X_test_102",DATA_TRANSFORM
2427,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[test__94_intermediate_2 -----isnull---->test__94],"test__94_intermediate_1 -----select---->test__94_intermediate_2
X_test_102_intermediate_1 -----isnull---->X_test_102
X_test_102_intermediate_1 -----drop---->X_test_102",DATA_TRANSFORM
2428,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[train__95_intermediate_1 -----select---->train__95_intermediate_2],"buidling_encode_93 -----buidling encode[buidling encode['floor count'] notnull()]---->train__95_intermediate_1
X_test_102_intermediate_1 -----select---->X_test_102
X_test_102_intermediate_1 -----notnull---->X_test_102",MODEL_TRAIN
2429,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[train__95_intermediate_2 -----notnull---->train__95],"train__95_intermediate_1 -----select---->train__95_intermediate_2
X_test_102_intermediate_1 -----notnull---->X_test_102
X_test_102_intermediate_1 -----iloc---->X_test_102
X_test_102_intermediate_1 -----select---->X_test_102",DATA_TRANSFORM
2430,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[X_train_98_intermediate_1 -----values---->X_train_98],"train__95 -----iloc---->X_train_98_intermediate_1
X_test_102_intermediate_1 -----values---->X_test_102
X_test_102_intermediate_1 -----x train---->X_test_102",DATA_TRANSFORM
2431,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[Y_train_99_intermediate_1 -----values---->Y_train_99],"train__95 -----select---->Y_train_99_intermediate_1
X_test_102_intermediate_1 -----values---->X_test_102
X_test_102_intermediate_1 -----y train---->X_test_102",MODEL_TRAIN
2432,00013c82b84c60b92378200853d7999d289bce8b.execution_graph,[X_test_102_intermediate_1 -----astype---->X_test_102],"numpy -----around---->X_test_102_intermediate_1
X_test_102_intermediate_1 -----astype---->X_test_102",DATA_TRANSFORM
2433,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[keras -----k---->K_14_intermediate_1],"y_test_42_intermediate_1 -----k---->y_test_42
y_test_42_intermediate_1 -----set image dim ordering---->y_test_42",MODEL_TRAIN
2434,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_train_17 -----x train---->plt_21],"19	#plotting some images using matplotlib
20	plt.subplot(221)
21	plt.imshow(X_train[0], cmap=plt.get_cmap('gray'))
22	plt.subplot(222)
",EDA
2435,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_train_17 -----x train---->plt_23],"21	plt.imshow(X_train[0], cmap=plt.get_cmap('gray'))
22	plt.subplot(222)
23	plt.imshow(X_train[1], cmap=plt.get_cmap('gray'))
24	plt.subplot(223)
",EDA
2436,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_train_17 -----x train---->plt_25],"23	plt.imshow(X_train[1], cmap=plt.get_cmap('gray'))
24	plt.subplot(223)
25	plt.imshow(X_train[2], cmap=plt.get_cmap('gray'))
26	plt.subplot(224)
",EDA
2437,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_train_17 -----x train---->plt_27],"25	plt.imshow(X_train[2], cmap=plt.get_cmap('gray'))
26	plt.subplot(224)
27	plt.imshow(X_train[3], cmap=plt.get_cmap('gray'))
28	# show the plot
",EDA
2438,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_train_17 -----reshape---->X_train_33_intermediate_1],"X_train_17_intermediate_1 -----load data---->X_train_17
y_test_42_intermediate_1 -----x train---->y_test_42
y_test_42_intermediate_1 -----x train---->y_test_42
y_test_42_intermediate_1 -----x train---->y_test_42
y_test_42_intermediate_1 -----x train---->y_test_42
y_test_42_intermediate_1 -----reshape---->y_test_42
y_test_42_intermediate_1 -----astype---->y_test_42",DATA_TRANSFORM
2439,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[keras.datasets -----mnist---->X_train_17_intermediate_1],"y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----load data---->y_test_42",DATA_IMPORT_EXTRACTION
2440,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[keras.datasets -----mnist---->y_train_17_intermediate_1],"y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----load data---->y_test_42",DATA_IMPORT_EXTRACTION
2441,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[keras.datasets -----mnist---->None_17_intermediate_1],"y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----load data---->y_test_42",DATA_IMPORT_EXTRACTION
2442,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[keras.datasets -----mnist---->X_test_17_intermediate_1],"y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----load data---->y_test_42",DATA_IMPORT_EXTRACTION
2443,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[keras.datasets -----mnist---->y_test_17_intermediate_1],"y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----mnist---->y_test_42
y_test_42_intermediate_1 -----load data---->y_test_42",DATA_IMPORT_EXTRACTION
2444,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[y_train_17 -----y train---->y_train_41],"39	
40	# one hot encode outputs
41	y_train = np_utils.to_categorical(y_train)
42	y_test = np_utils.to_categorical(y_test)
",DATA_TRANSFORM
2445,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_test_17 -----reshape---->X_test_34_intermediate_1],"X_test_17_intermediate_1 -----load data---->X_test_17
y_test_42_intermediate_1 -----reshape---->y_test_42
y_test_42_intermediate_1 -----astype---->y_test_42",DATA_TRANSFORM
2446,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[y_test_17 -----y test---->y_test_42],"40	# one hot encode outputs
41	y_train = np_utils.to_categorical(y_train)
42	y_test = np_utils.to_categorical(y_test)
43	num_classes = y_test.shape[1]
",DATA_IMPORT_EXTRACTION
2447,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[matplotlib.pyplot -----subplot---->plt_20],"18	
19	#plotting some images using matplotlib
20	plt.subplot(221)
21	plt.imshow(X_train[0], cmap=plt.get_cmap('gray'))
",EDA
2448,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[matplotlib.pyplot -----imshow---->plt_21],"19	#plotting some images using matplotlib
20	plt.subplot(221)
21	plt.imshow(X_train[0], cmap=plt.get_cmap('gray'))
22	plt.subplot(222)
",EDA
2449,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[matplotlib.pyplot -----subplot---->plt_22],"20	plt.subplot(221)
21	plt.imshow(X_train[0], cmap=plt.get_cmap('gray'))
22	plt.subplot(222)
23	plt.imshow(X_train[1], cmap=plt.get_cmap('gray'))
",EDA
2450,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[matplotlib.pyplot -----imshow---->plt_23],"21	plt.imshow(X_train[0], cmap=plt.get_cmap('gray'))
22	plt.subplot(222)
23	plt.imshow(X_train[1], cmap=plt.get_cmap('gray'))
24	plt.subplot(223)
",EDA
2451,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[matplotlib.pyplot -----subplot---->plt_24],"22	plt.subplot(222)
23	plt.imshow(X_train[1], cmap=plt.get_cmap('gray'))
24	plt.subplot(223)
25	plt.imshow(X_train[2], cmap=plt.get_cmap('gray'))
",EDA
2452,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[matplotlib.pyplot -----imshow---->plt_25],"23	plt.imshow(X_train[1], cmap=plt.get_cmap('gray'))
24	plt.subplot(223)
25	plt.imshow(X_train[2], cmap=plt.get_cmap('gray'))
26	plt.subplot(224)
",EDA
2453,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[matplotlib.pyplot -----subplot---->plt_26],"24	plt.subplot(223)
25	plt.imshow(X_train[2], cmap=plt.get_cmap('gray'))
26	plt.subplot(224)
27	plt.imshow(X_train[3], cmap=plt.get_cmap('gray'))
",EDA
2454,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[matplotlib.pyplot -----imshow---->plt_27],"25	plt.imshow(X_train[2], cmap=plt.get_cmap('gray'))
26	plt.subplot(224)
27	plt.imshow(X_train[3], cmap=plt.get_cmap('gray'))
28	# show the plot
",EDA
2455,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[matplotlib.pyplot -----show---->plt_29],"27	plt.imshow(X_train[3], cmap=plt.get_cmap('gray'))
28	# show the plot
29	plt.show()
30	
",EDA
2456,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_train_33 -----div---->X_train_37],"35	
36	# normalize inputs from 0-255 to 0-1
37	X_train = X_train / 255
38	X_test = X_test / 255
",DATA_TRANSFORM
2457,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_test_34 -----div---->X_test_38],"36	# normalize inputs from 0-255 to 0-1
37	X_train = X_train / 255
38	X_test = X_test / 255
39	
",DATA_TRANSFORM
2458,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_train_37 -----x train---->model_66],"64	
65	# Fit the model
66	model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=10, batch_size=200)
67	
",MODEL_TRAIN
2459,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_test_38 -----x test---->scores_69],"67	
68	# Final evaluation of the model
69	scores = model.evaluate(X_test, y_test, verbose=0)
70	print(""Final Error: %.2f%%"" % (100-scores[1]*100))
",MODEL_EVALUATION
2460,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[y_train_41 -----y train---->model_66],"64	
65	# Fit the model
66	model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=10, batch_size=200)
67	
",MODEL_TRAIN
2461,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[keras.utils -----np utils---->y_train_41_intermediate_1],"y_test_42_intermediate_1 -----np utils---->y_test_42
y_test_42_intermediate_1 -----np utils---->y_test_42
y_test_42_intermediate_1 -----to categorical---->y_test_42",DATA_TRANSFORM
2462,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[keras.utils -----np utils---->y_test_42_intermediate_1],"y_test_42_intermediate_1 -----np utils---->y_test_42
y_test_42_intermediate_1 -----np utils---->y_test_42
y_test_42_intermediate_1 -----to categorical---->y_test_42",DATA_TRANSFORM
2463,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[y_test_42 -----shape---->num_classes_43],"41	y_train = np_utils.to_categorical(y_train)
42	y_test = np_utils.to_categorical(y_test)
43	num_classes = y_test.shape[1]
44	
",DATA_TRANSFORM
2464,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[y_test_42 -----y test---->scores_69],"67	
68	# Final evaluation of the model
69	scores = model.evaluate(X_test, y_test, verbose=0)
70	print(""Final Error: %.2f%%"" % (100-scores[1]*100))
",MODEL_EVALUATION
2465,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[model_63 -----fit---->model_66],"64	
65	# Fit the model
66	model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=10, batch_size=200)
67	
",MODEL_TRAIN
2466,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[model_66 -----evaluate---->scores_69],"67	
68	# Final evaluation of the model
69	scores = model.evaluate(X_test, y_test, verbose=0)
70	print(""Final Error: %.2f%%"" % (100-scores[1]*100))
",MODEL_EVALUATION
2467,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[K_14_intermediate_1 -----set image dim ordering---->K_14],"keras -----k---->K_14_intermediate_1
y_test_42_intermediate_1 -----set image dim ordering---->y_test_42",ENVIRONMENT
2468,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_train_33_intermediate_1 -----astype---->X_train_33],"X_train_17 -----reshape---->X_train_33_intermediate_1
y_test_42_intermediate_1 -----astype---->y_test_42
y_test_42_intermediate_1 -----div---->y_test_42",DATA_TRANSFORM
2469,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_train_17_intermediate_1 -----load data---->X_train_17],"keras.datasets -----mnist---->X_train_17_intermediate_1
y_test_42_intermediate_1 -----load data---->y_test_42
y_test_42_intermediate_1 -----x train---->y_test_42
y_test_42_intermediate_1 -----x train---->y_test_42
y_test_42_intermediate_1 -----x train---->y_test_42
y_test_42_intermediate_1 -----x train---->y_test_42
y_test_42_intermediate_1 -----reshape---->y_test_42",DATA_IMPORT_EXTRACTION
2470,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[y_train_17_intermediate_1 -----load data---->y_train_17],"keras.datasets -----mnist---->y_train_17_intermediate_1
y_test_42_intermediate_1 -----load data---->y_test_42
y_test_42_intermediate_1 -----y train---->y_test_42",DATA_IMPORT_EXTRACTION
2471,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[None_17_intermediate_1 -----load data---->None_17],"keras.datasets -----mnist---->None_17_intermediate_1
y_test_42_intermediate_1 -----load data---->y_test_42",DATA_IMPORT_EXTRACTION
2472,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_test_17_intermediate_1 -----load data---->X_test_17],"keras.datasets -----mnist---->X_test_17_intermediate_1
y_test_42_intermediate_1 -----load data---->y_test_42
y_test_42_intermediate_1 -----reshape---->y_test_42",DATA_IMPORT_EXTRACTION
2473,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[y_test_17_intermediate_1 -----load data---->y_test_17],"keras.datasets -----mnist---->y_test_17_intermediate_1
y_test_42_intermediate_1 -----load data---->y_test_42
y_test_42_intermediate_1 -----y test---->y_test_42",DATA_IMPORT_EXTRACTION
2474,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[X_test_34_intermediate_1 -----astype---->X_test_34],"X_test_17 -----reshape---->X_test_34_intermediate_1
y_test_42_intermediate_1 -----astype---->y_test_42
y_test_42_intermediate_1 -----div---->y_test_42",DATA_TRANSFORM
2475,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[y_train_41_intermediate_1 -----to categorical---->y_train_41],"keras.utils -----np utils---->y_train_41_intermediate_1
y_test_42_intermediate_1 -----to categorical---->y_test_42
y_test_42_intermediate_1 -----y train---->y_test_42",DATA_TRANSFORM
2476,000145b0879bcdb04347cb58699a26ab052caa9b.execution_graph,[y_test_42_intermediate_1 -----to categorical---->y_test_42],"keras.utils -----np utils---->y_test_42_intermediate_1
y_test_42_intermediate_1 -----to categorical---->y_test_42
y_test_42_intermediate_1 -----shape---->y_test_42
y_test_42_intermediate_1 -----y test---->y_test_42",DATA_TRANSFORM
2477,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[content_3 -----strip---->content_5],"3	    content = f.readlines()
4	
5	content = [x.strip() for x in content] 
6	
",DATA_TRANSFORM
2478,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[content_5 -----reassign---->content_7],"5	content = [x.strip() for x in content] 
6	
7	content = [""#1 @ 1,3: 4x4"", ""#2 @ 3,1: 4x4"", ""#3 @ 5,5: 2x2""]
8	
",DATA_TRANSFORM
2479,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[content_7 -----reassign---->content_55],"53	
54	
55	content[0] = '#1 @ 2,1: 2x2'
56	
",DATA_TRANSFORM
2480,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[fabric_11 -----fabric---->fabric_12],"10	
11	fabric = np.zeros((10,10))
12	fabric
13	
",DATA_TRANSFORM
2481,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[numpy -----zeros---->fabric_11],"9	import numpy as np
10	
11	fabric = np.zeros((10,10))
12	fabric
",DATA_TRANSFORM
2482,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[numpy -----sum---->summe_41],"39	for square in squares:
40	    
41	    summe = np.sum(fabric == square[0])
42	    print(summe)
",DATA_TRANSFORM
2483,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[fabric_12 -----loop---->fabric_32],"
",DATA_TRANSFORM
2484,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[squares_14 -----loop---->squares_33_intermediate_1],"loop_squares_14_squares_33 -----restart_loop---->squares_14
temp_85_intermediate_1 -----loop---->temp_85
temp_85_intermediate_1 -----append---->temp_85",DATA_TRANSFORM
2485,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[fabric_32 -----end_loop---->loop_fabric_12_fabric_32],"
",DATA_TRANSFORM
2486,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[squares_33 -----end_loop---->loop_squares_14_squares_33],"
",NOT_INTERESTING
2487,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[split_18 -----split---->square_id_19],"17	    overlap = False
18	    split = i.split("" "")
19	    square_id = int(split[0].split(""#"")[1])
20	    print(square_id)
",DATA_TRANSFORM
2488,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[split_18 -----select---->position_21_intermediate_1],"temp_85_intermediate_1 -----split---->temp_85
temp_85_intermediate_1 -----select---->temp_85
temp_85_intermediate_1 -----select---->temp_85
temp_85_intermediate_1 -----reassign---->temp_85
temp_85_intermediate_1 -----split---->temp_85",DATA_TRANSFORM
2489,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[split_18 -----select---->size_24_intermediate_1],"temp_85_intermediate_1 -----split---->temp_85
temp_85_intermediate_1 -----select---->temp_85
temp_85_intermediate_1 -----select---->temp_85
temp_85_intermediate_1 -----reassign---->temp_85
temp_85_intermediate_1 -----split---->temp_85",DATA_TRANSFORM
2490,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[split_18 -----reassign---->split_57],"55	content[0] = '#1 @ 2,1: 2x2'
56	
57	split = content[0].split("" "")
58	position = split[2].split("","")
",DATA_TRANSFORM
2491,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[square_id_19 -----square id---->fabric_32],"30	            #if (fabric[i][j] == 1):
31	                #overlap = True
32	            fabric[i][j] = square_id
33	            squares.append([square_id, size_x*size_y])
",DATA_TRANSFORM
2492,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[position_21 -----position---->position_x_22],"20	    print(square_id)
21	    position = split[2].split("","")
22	    position_x = int(position[0])
23	    position_y = int(position[1].split("":"")[0])
",DATA_TRANSFORM
2493,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[position_21 -----position---->position_y_23],"21	    position = split[2].split("","")
22	    position_x = int(position[0])
23	    position_y = int(position[1].split("":"")[0])
24	    size = split[3].split(""x"")
",DATA_TRANSFORM
2494,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[position_21 -----reassign---->position_58],"56	
57	split = content[0].split("" "")
58	position = split[2].split("","")
59	position_x = int(position[0])
",DATA_TRANSFORM
2495,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[position_x_22 -----int---->position_x_59],"57	split = content[0].split("" "")
58	position = split[2].split("","")
59	position_x = int(position[0])
60	position_y = int(position[1].split("":"")[0])
",DATA_TRANSFORM
2496,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[position_y_23 -----int---->position_y_60],"58	position = split[2].split("","")
59	position_x = int(position[0])
60	position_y = int(position[1].split("":"")[0])
61	size = split[3].split(""x"")
",DATA_TRANSFORM
2497,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[size_24 -----size---->size_x_25],"23	    position_y = int(position[1].split("":"")[0])
24	    size = split[3].split(""x"")
25	    size_x = int(size[0])
26	    size_y = int(size[1])
",DATA_TRANSFORM
2498,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[size_24 -----size---->size_y_26],"24	    size = split[3].split(""x"")
25	    size_x = int(size[0])
26	    size_y = int(size[1])
27	    
",DATA_TRANSFORM
2499,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[size_24 -----reassign---->size_61],"59	position_x = int(position[0])
60	position_y = int(position[1].split("":"")[0])
61	size = split[3].split(""x"")
62	size_x = int(size[0])
",DATA_TRANSFORM
2500,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[size_x_25 -----int---->size_x_62],"60	position_y = int(position[1].split("":"")[0])
61	size = split[3].split(""x"")
62	size_x = int(size[0])
63	size_y = int(size[1])
",DATA_TRANSFORM
2501,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[size_y_26 -----int---->size_y_63],"61	size = split[3].split(""x"")
62	size_x = int(size[0])
63	size_y = int(size[1])
64	
",DATA_TRANSFORM
2502,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[loop_fabric_12_fabric_32 -----restart_loop---->fabric_12],"
",DATA_TRANSFORM
2503,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[loop_fabric_12_fabric_32 -----fabric---->fabric_65],"63	size_y = int(size[1])
64	
65	fabric
66	
",DATA_TRANSFORM
2504,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[loop_squares_14_squares_33 -----restart_loop---->squares_14],"
",ENVIRONMENT
2505,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[content_55 -----select---->split_57_intermediate_1],"content_7 -----reassign---->content_55
temp_85_intermediate_1 -----select---->temp_85
temp_85_intermediate_1 -----split---->temp_85",DATA_TRANSFORM
2506,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[split_57 -----select---->position_58_intermediate_1],"split_18 -----reassign---->split_57
split_57_intermediate_1 -----split---->split_57
temp_85_intermediate_1 -----select---->temp_85
temp_85_intermediate_1 -----select---->temp_85
temp_85_intermediate_1 -----split---->temp_85",DATA_TRANSFORM
2507,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[split_57 -----select---->size_61_intermediate_1],"split_18 -----reassign---->split_57
split_57_intermediate_1 -----split---->split_57
temp_85_intermediate_1 -----select---->temp_85
temp_85_intermediate_1 -----select---->temp_85
temp_85_intermediate_1 -----split---->temp_85",DATA_TRANSFORM
2508,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[position_58 -----position---->position_x_59],"57	split = content[0].split("" "")
58	position = split[2].split("","")
59	position_x = int(position[0])
60	position_y = int(position[1].split("":"")[0])
",DATA_TRANSFORM
2509,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[position_58 -----position---->position_y_60],"58	position = split[2].split("","")
59	position_x = int(position[0])
60	position_y = int(position[1].split("":"")[0])
61	size = split[3].split(""x"")
",DATA_TRANSFORM
2510,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[size_61 -----size---->size_x_62],"60	position_y = int(position[1].split("":"")[0])
61	size = split[3].split(""x"")
62	size_x = int(size[0])
63	size_y = int(size[1])
",DATA_TRANSFORM
2511,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[size_61 -----size---->size_y_63],"61	size = split[3].split(""x"")
62	size_x = int(size[0])
63	size_y = int(size[1])
64	
",DATA_TRANSFORM
2512,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[a_70 -----a[i]---->diff_73_intermediate_1],"temp_85_intermediate_1 -----a[i]---->temp_85
temp_85_intermediate_1 -----reassign---->temp_85
temp_85_intermediate_1 -----not equal---->temp_85",DATA_TRANSFORM
2513,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[a_70 -----reassign---->a_83],"81	t[2]
82	
83	a = ['a', 'b', 'c']
84	b = ['a', 'b', 'e']
",DATA_TRANSFORM
2514,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[b_71 -----b[i]---->diff_73_intermediate_1],"temp_85_intermediate_1 -----b[i]---->temp_85
temp_85_intermediate_1 -----reassign---->temp_85
temp_85_intermediate_1 -----not equal---->temp_85",DATA_TRANSFORM
2515,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[b_71 -----reassign---->b_84],"82	
83	a = ['a', 'b', 'c']
84	b = ['a', 'b', 'e']
85	temp = [a[i] == b[i] for i in range(len(a))]
",DATA_TRANSFORM
2516,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[diff_73 -----index---->ind_75],"73	    diff = [a[i] != b[i] for i in range(len(a))]
74	    if (sum(diff) == 1):
75	        ind = diff.index(True)
76	        del a[ind]
",DATA_TRANSFORM
2517,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[ind_75 -----if---->ind_87_intermediate_1],"diff_73 -----index---->ind_75
temp_85_intermediate_1 -----if---->temp_85
temp_85_intermediate_1 -----index---->temp_85",DATA_TRANSFORM
2518,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[t_80 -----select---->t_81],"79	
80	t = 'Carmen'
81	t[2]
82	
",NOT_INTERESTING
2519,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[a_83 -----a[i]---->temp_85_intermediate_1],"a_70 -----reassign---->a_83
temp_85_intermediate_1 -----a[i]---->temp_85
temp_85_intermediate_1 -----equal---->temp_85",DATA_TRANSFORM
2520,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[b_84 -----b[i]---->temp_85_intermediate_1],"b_71 -----reassign---->b_84
temp_85_intermediate_1 -----b[i]---->temp_85
temp_85_intermediate_1 -----equal---->temp_85",DATA_TRANSFORM
2521,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[temp_85 -----temp---->ind_87],"85	temp = [a[i] == b[i] for i in range(len(a))]
86	if (sum(temp) == len(a) -1):
87	    ind = temp.index(False)
88	    del a[ind]
",DATA_TRANSFORM
2522,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[squares_33_intermediate_1 -----append---->squares_33],"squares_14 -----loop---->squares_33_intermediate_1
temp_85_intermediate_1 -----append---->temp_85
temp_85_intermediate_1 -----end_loop---->temp_85",DATA_TRANSFORM
2523,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[position_21_intermediate_1 -----split---->position_21],"split_18 -----select---->position_21_intermediate_1
temp_85_intermediate_1 -----split---->temp_85
temp_85_intermediate_1 -----position---->temp_85
temp_85_intermediate_1 -----position---->temp_85
temp_85_intermediate_1 -----reassign---->temp_85",DATA_TRANSFORM
2524,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[size_24_intermediate_1 -----split---->size_24],"split_18 -----select---->size_24_intermediate_1
temp_85_intermediate_1 -----split---->temp_85
temp_85_intermediate_1 -----size---->temp_85
temp_85_intermediate_1 -----size---->temp_85
temp_85_intermediate_1 -----reassign---->temp_85",DATA_TRANSFORM
2525,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[split_57_intermediate_1 -----split---->split_57],"content_55 -----select---->split_57_intermediate_1
temp_85_intermediate_1 -----split---->temp_85
temp_85_intermediate_1 -----select---->temp_85
temp_85_intermediate_1 -----select---->temp_85",DATA_TRANSFORM
2526,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[position_58_intermediate_1 -----split---->position_58],"split_57 -----select---->position_58_intermediate_1
temp_85_intermediate_1 -----split---->temp_85
temp_85_intermediate_1 -----position---->temp_85
temp_85_intermediate_1 -----position---->temp_85",DATA_TRANSFORM
2527,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[size_61_intermediate_1 -----split---->size_61],"split_57 -----select---->size_61_intermediate_1
temp_85_intermediate_1 -----split---->temp_85
temp_85_intermediate_1 -----size---->temp_85
temp_85_intermediate_1 -----size---->temp_85",DATA_TRANSFORM
2528,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[diff_73_intermediate_1 -----not equal---->diff_73],"a_70 -----a[i]---->diff_73_intermediate_1
b_71 -----b[i]---->diff_73_intermediate_1
temp_85_intermediate_1 -----not equal---->temp_85
temp_85_intermediate_1 -----index---->temp_85",DATA_TRANSFORM
2529,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[ind_87_intermediate_1 -----index---->ind_87],"ind_75 -----if---->ind_87_intermediate_1
temp_85_intermediate_1 -----index---->temp_85",DATA_TRANSFORM
2530,0001514bb88026508d9741828510a87e34f6d2cf.execution_graph,[temp_85_intermediate_1 -----equal---->temp_85],"a_83 -----a[i]---->temp_85_intermediate_1
b_84 -----b[i]---->temp_85_intermediate_1
temp_85_intermediate_1 -----equal---->temp_85
temp_85_intermediate_1 -----temp---->temp_85",DATA_TRANSFORM
2531,0001524e573a12304d6b1e7693db1e9a15eb5343.execution_graph,[train_data_14 -----head---->train_data_15],"13	# load in the data
14	train_data = pd.read_csv('./training.csv')
15	train_data.head()
16	
",EDA
2532,0001524e573a12304d6b1e7693db1e9a15eb5343.execution_graph,[pandas -----read csv---->train_data_14],"12	
13	# load in the data
14	train_data = pd.read_csv('./training.csv')
15	train_data.head()
",DATA_IMPORT_EXTRACTION
2533,0001524e573a12304d6b1e7693db1e9a15eb5343.execution_graph,[test_results -----test results---->test_results_70],"68	# on your how well your promotion_strategy will work in practice
69	
70	test_results(promotion_strategy)
",MODEL_EVALUATION
2534,0001553fa3c997932da420450a46865b9a749f15.execution_graph,[lista_12 -----lista---->lista_14],"12	lista = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
13	
14	lista
15	
",NOT_INTERESTING
2535,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_5 -----copy---->titanic_backup_7],"5	titanic_df=pd.read_csv('titanic_data.csv')
6	
7	titanic_backup = titanic_df.copy()     
8	
",DATA_TRANSFORM
2536,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_5 -----select---->titanic_df_19_intermediate_1],"pandas -----read csv---->titanic_df_5
tit_temp_109_intermediate_1 -----copy---->tit_temp_109
tit_temp_109_intermediate_1 -----select---->tit_temp_109
tit_temp_109_intermediate_1 -----apply---->tit_temp_109",DATA_TRANSFORM
2537,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[pandas -----read csv---->titanic_df_5],"3	
4	#load the csv into titanic_df dataframe
5	titanic_df=pd.read_csv('titanic_data.csv')
6	
",DATA_IMPORT_EXTRACTION
2538,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[pandas -----concat---->survival_32],"30	dead[0]=a*100/(a+b)
31	dead[1]=b*100/(a+b)
32	survival=pd.concat([dead],axis=1,keys=['Percentage'])
33	survival
",DATA_TRANSFORM
2539,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[pandas -----concat---->survival_wrt_class_41],"39	survival_wrt_class=(class_sur/class_tot)*100
40	class_dead=class_tot-class_sur
41	survival_wrt_class=pd.concat([class_sur,class_dead,class_tot,survival_wrt_class],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
42	survival_wrt_class
",DATA_TRANSFORM
2540,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[pandas -----concat---->survival_wrt_sex_50],"48	survival_wrt_sex=(sex_sur/sex_tot)*100
49	sex_dead=sex_tot-sex_sur
50	survival_wrt_sex=pd.concat([sex_sur,sex_dead,sex_tot,survival_wrt_sex],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
51	survival_wrt_sex
",EDA
2541,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[pandas -----concat---->sex_class_survival_rate_60],"58	sex_class_survival_rate = (sex_class_survival/total_sex_class_count)*100
59	sex_class_dead=total_sex_class_count-sex_class_survival
60	sex_class_survival_rate=pd.concat([sex_class_survival,sex_class_dead,total_sex_class_count,sex_class_survival_rate],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
61	sex_class_survival_rate
",DATA_TRANSFORM
2542,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[pandas -----concat---->survival_wrt_age_87],"85	survival_wrt_age=(age_sur/age_tot)*100
86	age_dead=age_tot-age_sur
87	survival_wrt_age=pd.concat([age_sur,age_dead,age_tot,survival_wrt_age],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
88	survival_wrt_age
",DATA_TRANSFORM
2543,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[pandas -----concat---->survival_female_child_102],"100	survival_female_child=(chi_fem_sur/chi_fem_tot)*100
101	chi_fem_dead=chi_fem_tot-chi_fem_sur
102	survival_female_child=pd.concat([chi_fem_sur,chi_fem_dead,chi_fem_tot,survival_female_child],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
103	
",DATA_TRANSFORM
2544,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[pandas -----concat---->survival_wrt_family_size_114],"112	survival_wrt_family_size=(family_sur/family_tot)*100
113	family_dead=family_tot-family_sur
114	survival_wrt_family_size=pd.concat([family_sur,family_dead,family_tot,survival_wrt_family_size],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
115	
",DATA_TRANSFORM
2545,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_19 -----titanic df---->sur_27],"25	    return (total_survival,total_count_for_group)
26	
27	sur,dead=group_my_data('State',titanic_df)
28	a=dead[0]
",EDA
2546,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_19 -----titanic df---->dead_27],"25	    return (total_survival,total_count_for_group)
26	
27	sur,dead=group_my_data('State',titanic_df)
28	a=dead[0]
",EDA
2547,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_19 -----titanic df---->class_sur_38],"36	survival.to_csv('survival.csv', sep=',')
37	
38	class_sur, class_tot = group_my_data('Pclass',titanic_df)
39	survival_wrt_class=(class_sur/class_tot)*100
",EDA
2548,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_19 -----titanic df---->class_tot_38],"36	survival.to_csv('survival.csv', sep=',')
37	
38	class_sur, class_tot = group_my_data('Pclass',titanic_df)
39	survival_wrt_class=(class_sur/class_tot)*100
",EDA
2549,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_19 -----titanic df---->sex_sur_47],"45	survival_wrt_class.to_csv('survival_wrt_class.csv', sep=',')
46	
47	sex_sur, sex_tot = group_my_data('Sex',titanic_df)
48	survival_wrt_sex=(sex_sur/sex_tot)*100
",EDA
2550,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_19 -----titanic df---->sex_tot_47],"45	survival_wrt_class.to_csv('survival_wrt_class.csv', sep=',')
46	
47	sex_sur, sex_tot = group_my_data('Sex',titanic_df)
48	survival_wrt_sex=(sex_sur/sex_tot)*100
",EDA
2551,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_19 -----groupby---->total_sex_class_count_56_intermediate_1],"titanic_df_19_intermediate_1 -----apply---->titanic_df_19
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----groupby---->tit_temp_109
tit_temp_109_intermediate_1 -----groupby---->tit_temp_109
tit_temp_109_intermediate_1 -----copy---->tit_temp_109
tit_temp_109_intermediate_1 -----count---->tit_temp_109",DATA_TRANSFORM
2552,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_19 -----groupby---->sex_class_survival_57_intermediate_1],"titanic_df_19_intermediate_1 -----apply---->titanic_df_19
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----groupby---->tit_temp_109
tit_temp_109_intermediate_1 -----groupby---->tit_temp_109
tit_temp_109_intermediate_1 -----copy---->tit_temp_109
tit_temp_109_intermediate_1 -----sum---->tit_temp_109",EDA
2553,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_19 -----copy---->tit_temp_66],"64	sex_class_survival_rate.to_csv('survival_wrt_sex_class.csv', sep=',')
65	
66	tit_temp=titanic_df.copy()
67	
",DATA_TRANSFORM
2554,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[dead_27 -----select---->a_28],"26	
27	sur,dead=group_my_data('State',titanic_df)
28	a=dead[0]
29	b=dead[1]
",EDA
2555,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[dead_27 -----select---->b_29],"27	sur,dead=group_my_data('State',titanic_df)
28	a=dead[0]
29	b=dead[1]
30	dead[0]=a*100/(a+b)
",EDA
2556,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[dead_27 -----reassign---->dead_30],"28	a=dead[0]
29	b=dead[1]
30	dead[0]=a*100/(a+b)
31	dead[1]=b*100/(a+b)
",DATA_TRANSFORM
2557,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[a_28 -----mult---->dead_30_intermediate_1],"dead_27 -----select---->a_28
tit_temp_109_intermediate_1 -----mult---->tit_temp_109
tit_temp_109_intermediate_1 -----add---->tit_temp_109
tit_temp_109_intermediate_1 -----add---->tit_temp_109",EDA
2558,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[a_28 -----add---->dead_31],"29	b=dead[1]
30	dead[0]=a*100/(a+b)
31	dead[1]=b*100/(a+b)
32	survival=pd.concat([dead],axis=1,keys=['Percentage'])
",DATA_TRANSFORM
2559,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[b_29 -----add---->dead_30],"28	a=dead[0]
29	b=dead[1]
30	dead[0]=a*100/(a+b)
31	dead[1]=b*100/(a+b)
",DATA_TRANSFORM
2560,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[b_29 -----mult---->dead_31_intermediate_1],"dead_27 -----select---->b_29
tit_temp_109_intermediate_1 -----add---->tit_temp_109
tit_temp_109_intermediate_1 -----mult---->tit_temp_109
tit_temp_109_intermediate_1 -----add---->tit_temp_109",DATA_TRANSFORM
2561,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[dead_30 -----reassign---->dead_31],"29	b=dead[1]
30	dead[0]=a*100/(a+b)
31	dead[1]=b*100/(a+b)
32	survival=pd.concat([dead],axis=1,keys=['Percentage'])
",DATA_TRANSFORM
2562,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_32 -----survival---->survival_33],"31	dead[1]=b*100/(a+b)
32	survival=pd.concat([dead],axis=1,keys=['Percentage'])
33	survival
34	
",DATA_TRANSFORM
2563,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_33 -----to csv---->survival_36],"34	
35	#write the survival data into survival.csv
36	survival.to_csv('survival.csv', sep=',')
37	
",DATA_EXPORT
2564,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[class_sur_38 -----div---->survival_wrt_class_39],"37	
38	class_sur, class_tot = group_my_data('Pclass',titanic_df)
39	survival_wrt_class=(class_sur/class_tot)*100
40	class_dead=class_tot-class_sur
",DATA_TRANSFORM
2565,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[class_sur_38 -----sub---->class_dead_40],"38	class_sur, class_tot = group_my_data('Pclass',titanic_df)
39	survival_wrt_class=(class_sur/class_tot)*100
40	class_dead=class_tot-class_sur
41	survival_wrt_class=pd.concat([class_sur,class_dead,class_tot,survival_wrt_class],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",DATA_TRANSFORM
2566,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[class_tot_38 -----div---->survival_wrt_class_39],"37	
38	class_sur, class_tot = group_my_data('Pclass',titanic_df)
39	survival_wrt_class=(class_sur/class_tot)*100
40	class_dead=class_tot-class_sur
",DATA_TRANSFORM
2567,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[class_tot_38 -----sub---->class_dead_40],"38	class_sur, class_tot = group_my_data('Pclass',titanic_df)
39	survival_wrt_class=(class_sur/class_tot)*100
40	class_dead=class_tot-class_sur
41	survival_wrt_class=pd.concat([class_sur,class_dead,class_tot,survival_wrt_class],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",DATA_TRANSFORM
2568,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_class_39 -----reassign---->survival_wrt_class_41],"39	survival_wrt_class=(class_sur/class_tot)*100
40	class_dead=class_tot-class_sur
41	survival_wrt_class=pd.concat([class_sur,class_dead,class_tot,survival_wrt_class],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
42	survival_wrt_class
",DATA_TRANSFORM
2569,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_class_41 -----survival wrt class---->survival_wrt_class_42],"40	class_dead=class_tot-class_sur
41	survival_wrt_class=pd.concat([class_sur,class_dead,class_tot,survival_wrt_class],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
42	survival_wrt_class
43	
",DATA_TRANSFORM
2570,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_class_42 -----to csv---->survival_wrt_class_45],"43	
44	#write the survival_wrt_class data into survival_wrt_class.csv
45	survival_wrt_class.to_csv('survival_wrt_class.csv', sep=',')
46	
",DATA_EXPORT
2571,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[sex_sur_47 -----div---->survival_wrt_sex_48],"46	
47	sex_sur, sex_tot = group_my_data('Sex',titanic_df)
48	survival_wrt_sex=(sex_sur/sex_tot)*100
49	sex_dead=sex_tot-sex_sur
",EDA
2572,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[sex_sur_47 -----sub---->sex_dead_49],"47	sex_sur, sex_tot = group_my_data('Sex',titanic_df)
48	survival_wrt_sex=(sex_sur/sex_tot)*100
49	sex_dead=sex_tot-sex_sur
50	survival_wrt_sex=pd.concat([sex_sur,sex_dead,sex_tot,survival_wrt_sex],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",DATA_TRANSFORM
2573,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[sex_tot_47 -----div---->survival_wrt_sex_48],"46	
47	sex_sur, sex_tot = group_my_data('Sex',titanic_df)
48	survival_wrt_sex=(sex_sur/sex_tot)*100
49	sex_dead=sex_tot-sex_sur
",EDA
2574,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[sex_tot_47 -----sub---->sex_dead_49],"47	sex_sur, sex_tot = group_my_data('Sex',titanic_df)
48	survival_wrt_sex=(sex_sur/sex_tot)*100
49	sex_dead=sex_tot-sex_sur
50	survival_wrt_sex=pd.concat([sex_sur,sex_dead,sex_tot,survival_wrt_sex],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",EDA
2575,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_sex_48 -----reassign---->survival_wrt_sex_50],"48	survival_wrt_sex=(sex_sur/sex_tot)*100
49	sex_dead=sex_tot-sex_sur
50	survival_wrt_sex=pd.concat([sex_sur,sex_dead,sex_tot,survival_wrt_sex],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
51	survival_wrt_sex
",DATA_TRANSFORM
2576,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_sex_50 -----survival wrt sex---->survival_wrt_sex_51],"49	sex_dead=sex_tot-sex_sur
50	survival_wrt_sex=pd.concat([sex_sur,sex_dead,sex_tot,survival_wrt_sex],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
51	survival_wrt_sex
52	
",DATA_TRANSFORM
2577,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_sex_51 -----to csv---->survival_wrt_sex_54],"52	
53	#write the survival_wrt_sex data into survival_wrt_sex.csv
54	survival_wrt_sex.to_csv('survival_wrt_sex.csv', sep=',')
55	
",DATA_EXPORT
2578,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[total_sex_class_count_56 -----div---->sex_class_survival_rate_58],"56	total_sex_class_count = titanic_df.groupby(['Sex','Pclass']).count()['PassengerId']
57	sex_class_survival = titanic_df.groupby(['Sex','Pclass']).sum()['Survived']
58	sex_class_survival_rate = (sex_class_survival/total_sex_class_count)*100
59	sex_class_dead=total_sex_class_count-sex_class_survival
",DATA_TRANSFORM
2579,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[total_sex_class_count_56 -----sub---->sex_class_dead_59],"57	sex_class_survival = titanic_df.groupby(['Sex','Pclass']).sum()['Survived']
58	sex_class_survival_rate = (sex_class_survival/total_sex_class_count)*100
59	sex_class_dead=total_sex_class_count-sex_class_survival
60	sex_class_survival_rate=pd.concat([sex_class_survival,sex_class_dead,total_sex_class_count,sex_class_survival_rate],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",DATA_TRANSFORM
2580,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[sex_class_survival_57 -----div---->sex_class_survival_rate_58],"56	total_sex_class_count = titanic_df.groupby(['Sex','Pclass']).count()['PassengerId']
57	sex_class_survival = titanic_df.groupby(['Sex','Pclass']).sum()['Survived']
58	sex_class_survival_rate = (sex_class_survival/total_sex_class_count)*100
59	sex_class_dead=total_sex_class_count-sex_class_survival
",DATA_TRANSFORM
2581,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[sex_class_survival_57 -----sub---->sex_class_dead_59],"57	sex_class_survival = titanic_df.groupby(['Sex','Pclass']).sum()['Survived']
58	sex_class_survival_rate = (sex_class_survival/total_sex_class_count)*100
59	sex_class_dead=total_sex_class_count-sex_class_survival
60	sex_class_survival_rate=pd.concat([sex_class_survival,sex_class_dead,total_sex_class_count,sex_class_survival_rate],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",DATA_TRANSFORM
2582,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[sex_class_survival_rate_58 -----reassign---->sex_class_survival_rate_60],"58	sex_class_survival_rate = (sex_class_survival/total_sex_class_count)*100
59	sex_class_dead=total_sex_class_count-sex_class_survival
60	sex_class_survival_rate=pd.concat([sex_class_survival,sex_class_dead,total_sex_class_count,sex_class_survival_rate],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
61	sex_class_survival_rate
",DATA_TRANSFORM
2583,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[sex_class_survival_rate_60 -----sex class survival rate---->sex_class_survival_rate_61],"59	sex_class_dead=total_sex_class_count-sex_class_survival
60	sex_class_survival_rate=pd.concat([sex_class_survival,sex_class_dead,total_sex_class_count,sex_class_survival_rate],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
61	sex_class_survival_rate
62	
",DATA_TRANSFORM
2584,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[sex_class_survival_rate_61 -----to csv---->sex_class_survival_rate_64],"62	
63	#write the sex_class_survival_rate data into survival_wrt_sex_class.csv
64	sex_class_survival_rate.to_csv('survival_wrt_sex_class.csv', sep=',')
65	
",DATA_EXPORT
2585,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[tit_temp_66 -----select---->tit_temp_82_intermediate_1],"titanic_df_19 -----copy---->tit_temp_66
tit_temp_109_intermediate_1 -----select---->tit_temp_109
tit_temp_109_intermediate_1 -----apply---->tit_temp_109",DATA_TRANSFORM
2586,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[tit_temp_82 -----rename---->tit_temp_83],"81	
82	tit_temp['Age']=tit_temp['Age'].apply(age_group)
83	tit_temp=tit_temp.rename(columns={'Age':'Age_Group'})
84	age_sur,age_tot=group_my_data('Age_Group',tit_temp)
",DATA_TRANSFORM
2587,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[tit_temp_83 -----tit temp---->age_sur_84],"82	tit_temp['Age']=tit_temp['Age'].apply(age_group)
83	tit_temp=tit_temp.rename(columns={'Age':'Age_Group'})
84	age_sur,age_tot=group_my_data('Age_Group',tit_temp)
85	survival_wrt_age=(age_sur/age_tot)*100
",DATA_TRANSFORM
2588,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[tit_temp_83 -----tit temp---->age_tot_84],"82	tit_temp['Age']=tit_temp['Age'].apply(age_group)
83	tit_temp=tit_temp.rename(columns={'Age':'Age_Group'})
84	age_sur,age_tot=group_my_data('Age_Group',tit_temp)
85	survival_wrt_age=(age_sur/age_tot)*100
",DATA_TRANSFORM
2589,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[tit_temp_83 -----reassign---->tit_temp_93],"91	survival_wrt_age.to_csv('survival_wrt_age.csv', sep=',')
92	
93	tit_temp['Women_Child_OR_Male']= 'Male'
94	
",DATA_TRANSFORM
2590,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[age_sur_84 -----div---->survival_wrt_age_85],"83	tit_temp=tit_temp.rename(columns={'Age':'Age_Group'})
84	age_sur,age_tot=group_my_data('Age_Group',tit_temp)
85	survival_wrt_age=(age_sur/age_tot)*100
86	age_dead=age_tot-age_sur
",DATA_TRANSFORM
2591,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[age_sur_84 -----sub---->age_dead_86],"84	age_sur,age_tot=group_my_data('Age_Group',tit_temp)
85	survival_wrt_age=(age_sur/age_tot)*100
86	age_dead=age_tot-age_sur
87	survival_wrt_age=pd.concat([age_sur,age_dead,age_tot,survival_wrt_age],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",DATA_TRANSFORM
2592,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[age_tot_84 -----div---->survival_wrt_age_85],"83	tit_temp=tit_temp.rename(columns={'Age':'Age_Group'})
84	age_sur,age_tot=group_my_data('Age_Group',tit_temp)
85	survival_wrt_age=(age_sur/age_tot)*100
86	age_dead=age_tot-age_sur
",DATA_TRANSFORM
2593,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[age_tot_84 -----sub---->age_dead_86],"84	age_sur,age_tot=group_my_data('Age_Group',tit_temp)
85	survival_wrt_age=(age_sur/age_tot)*100
86	age_dead=age_tot-age_sur
87	survival_wrt_age=pd.concat([age_sur,age_dead,age_tot,survival_wrt_age],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",DATA_TRANSFORM
2594,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_age_85 -----reassign---->survival_wrt_age_87],"85	survival_wrt_age=(age_sur/age_tot)*100
86	age_dead=age_tot-age_sur
87	survival_wrt_age=pd.concat([age_sur,age_dead,age_tot,survival_wrt_age],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
88	survival_wrt_age
",DATA_TRANSFORM
2595,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_age_87 -----survival wrt age---->survival_wrt_age_88],"86	age_dead=age_tot-age_sur
87	survival_wrt_age=pd.concat([age_sur,age_dead,age_tot,survival_wrt_age],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
88	survival_wrt_age
89	
",DATA_TRANSFORM
2596,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_age_88 -----to csv---->survival_wrt_age_91],"89	
90	#write the survival_wrt_age data into survival_wrt_age.csv
91	survival_wrt_age.to_csv('survival_wrt_age.csv', sep=',')
92	
",DATA_EXPORT
2597,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[tit_temp_93 -----loop---->tit_temp_97],"
",DATA_TRANSFORM
2598,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[tit_temp_97 -----end_loop---->loop_tit_temp_93_tit_temp_97],"
",DATA_TRANSFORM
2599,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[loop_tit_temp_93_tit_temp_97 -----restart_loop---->tit_temp_93],"
",DATA_TRANSFORM
2600,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[loop_tit_temp_93_tit_temp_97 -----tit temp---->chi_fem_sur_99],"97	        tit_temp.loc[i,'Women_Child_OR_Male']='Women_Child'
98	
99	chi_fem_sur, chi_fem_tot=group_my_data('Women_Child_OR_Male',tit_temp)
100	survival_female_child=(chi_fem_sur/chi_fem_tot)*100
",DATA_TRANSFORM
2601,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[loop_tit_temp_93_tit_temp_97 -----tit temp---->chi_fem_tot_99],"97	        tit_temp.loc[i,'Women_Child_OR_Male']='Women_Child'
98	
99	chi_fem_sur, chi_fem_tot=group_my_data('Women_Child_OR_Male',tit_temp)
100	survival_female_child=(chi_fem_sur/chi_fem_tot)*100
",DATA_TRANSFORM
2602,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[loop_tit_temp_93_tit_temp_97 -----select---->tit_temp_109_intermediate_1],"tit_temp_97 -----end_loop---->loop_tit_temp_93_tit_temp_97
tit_temp_109_intermediate_1 -----restart_loop---->tit_temp_109
tit_temp_109_intermediate_1 -----tit temp---->tit_temp_109
tit_temp_109_intermediate_1 -----tit temp---->tit_temp_109
tit_temp_109_intermediate_1 -----select---->tit_temp_109
tit_temp_109_intermediate_1 -----add---->tit_temp_109",DATA_TRANSFORM
2603,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[chi_fem_sur_99 -----div---->survival_female_child_100],"98	
99	chi_fem_sur, chi_fem_tot=group_my_data('Women_Child_OR_Male',tit_temp)
100	survival_female_child=(chi_fem_sur/chi_fem_tot)*100
101	chi_fem_dead=chi_fem_tot-chi_fem_sur
",EDA
2604,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[chi_fem_sur_99 -----sub---->chi_fem_dead_101],"99	chi_fem_sur, chi_fem_tot=group_my_data('Women_Child_OR_Male',tit_temp)
100	survival_female_child=(chi_fem_sur/chi_fem_tot)*100
101	chi_fem_dead=chi_fem_tot-chi_fem_sur
102	survival_female_child=pd.concat([chi_fem_sur,chi_fem_dead,chi_fem_tot,survival_female_child],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",DATA_TRANSFORM
2605,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[chi_fem_tot_99 -----div---->survival_female_child_100],"98	
99	chi_fem_sur, chi_fem_tot=group_my_data('Women_Child_OR_Male',tit_temp)
100	survival_female_child=(chi_fem_sur/chi_fem_tot)*100
101	chi_fem_dead=chi_fem_tot-chi_fem_sur
",EDA
2606,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[chi_fem_tot_99 -----sub---->chi_fem_dead_101],"99	chi_fem_sur, chi_fem_tot=group_my_data('Women_Child_OR_Male',tit_temp)
100	survival_female_child=(chi_fem_sur/chi_fem_tot)*100
101	chi_fem_dead=chi_fem_tot-chi_fem_sur
102	survival_female_child=pd.concat([chi_fem_sur,chi_fem_dead,chi_fem_tot,survival_female_child],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",EDA
2607,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_female_child_100 -----reassign---->survival_female_child_102],"100	survival_female_child=(chi_fem_sur/chi_fem_tot)*100
101	chi_fem_dead=chi_fem_tot-chi_fem_sur
102	survival_female_child=pd.concat([chi_fem_sur,chi_fem_dead,chi_fem_tot,survival_female_child],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
103	
",DATA_TRANSFORM
2608,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_female_child_102 -----survival female child---->survival_female_child_104],"102	survival_female_child=pd.concat([chi_fem_sur,chi_fem_dead,chi_fem_tot,survival_female_child],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
103	
104	survival_female_child
105	
",DATA_TRANSFORM
2609,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_female_child_104 -----to csv---->survival_female_child_107],"105	
106	#write the survival_female_child data into survival_female_child.csv
107	survival_female_child.to_csv('survival_female_child.csv', sep=',')
108	
",DATA_EXPORT
2610,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[tit_temp_109 -----tit temp---->family_sur_111],"109	tit_temp['Family']=tit_temp['SibSp']+tit_temp['Parch']
110	
111	family_sur,family_tot = group_my_data('Family',tit_temp)
112	survival_wrt_family_size=(family_sur/family_tot)*100
",MODEL_EVALUATION
2611,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[tit_temp_109 -----tit temp---->family_tot_111],"109	tit_temp['Family']=tit_temp['SibSp']+tit_temp['Parch']
110	
111	family_sur,family_tot = group_my_data('Family',tit_temp)
112	survival_wrt_family_size=(family_sur/family_tot)*100
",DATA_TRANSFORM
2612,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[family_sur_111 -----div---->survival_wrt_family_size_112],"110	
111	family_sur,family_tot = group_my_data('Family',tit_temp)
112	survival_wrt_family_size=(family_sur/family_tot)*100
113	family_dead=family_tot-family_sur
",EDA
2613,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[family_sur_111 -----sub---->family_dead_113],"111	family_sur,family_tot = group_my_data('Family',tit_temp)
112	survival_wrt_family_size=(family_sur/family_tot)*100
113	family_dead=family_tot-family_sur
114	survival_wrt_family_size=pd.concat([family_sur,family_dead,family_tot,survival_wrt_family_size],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",EDA
2614,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[family_tot_111 -----div---->survival_wrt_family_size_112],"110	
111	family_sur,family_tot = group_my_data('Family',tit_temp)
112	survival_wrt_family_size=(family_sur/family_tot)*100
113	family_dead=family_tot-family_sur
",DATA_TRANSFORM
2615,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[family_tot_111 -----sub---->family_dead_113],"111	family_sur,family_tot = group_my_data('Family',tit_temp)
112	survival_wrt_family_size=(family_sur/family_tot)*100
113	family_dead=family_tot-family_sur
114	survival_wrt_family_size=pd.concat([family_sur,family_dead,family_tot,survival_wrt_family_size],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
",DATA_TRANSFORM
2616,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_family_size_112 -----reassign---->survival_wrt_family_size_114],"112	survival_wrt_family_size=(family_sur/family_tot)*100
113	family_dead=family_tot-family_sur
114	survival_wrt_family_size=pd.concat([family_sur,family_dead,family_tot,survival_wrt_family_size],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
115	
",DATA_TRANSFORM
2617,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_family_size_114 -----survival wrt family size---->survival_wrt_family_size_116],"114	survival_wrt_family_size=pd.concat([family_sur,family_dead,family_tot,survival_wrt_family_size],axis=1,keys=['Survival Count','Death Count','Total Count','Percentage'])
115	
116	survival_wrt_family_size
117	
",DATA_TRANSFORM
2618,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[survival_wrt_family_size_116 -----to csv---->survival_wrt_family_size_119],"117	
118	#write the survival_wrt_family_size data into survival_wrt_family_size.csv
119	survival_wrt_family_size.to_csv('survival_wrt_family_size.csv', sep=',')
",DATA_EXPORT
2619,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[titanic_df_19_intermediate_1 -----apply---->titanic_df_19],"titanic_df_5 -----select---->titanic_df_19_intermediate_1
tit_temp_109_intermediate_1 -----apply---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----titanic df---->tit_temp_109
tit_temp_109_intermediate_1 -----groupby---->tit_temp_109
tit_temp_109_intermediate_1 -----groupby---->tit_temp_109
tit_temp_109_intermediate_1 -----copy---->tit_temp_109",DATA_TRANSFORM
2620,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[total_sex_class_count_56_intermediate_1 -----count---->total_sex_class_count_56],"titanic_df_19 -----groupby---->total_sex_class_count_56_intermediate_1
tit_temp_109_intermediate_1 -----count---->tit_temp_109
tit_temp_109_intermediate_1 -----div---->tit_temp_109
tit_temp_109_intermediate_1 -----sub---->tit_temp_109",DATA_TRANSFORM
2621,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[sex_class_survival_57_intermediate_1 -----sum---->sex_class_survival_57],"titanic_df_19 -----groupby---->sex_class_survival_57_intermediate_1
tit_temp_109_intermediate_1 -----sum---->tit_temp_109
tit_temp_109_intermediate_1 -----div---->tit_temp_109
tit_temp_109_intermediate_1 -----sub---->tit_temp_109",DATA_TRANSFORM
2622,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[dead_30_intermediate_1 -----add---->dead_30],"a_28 -----mult---->dead_30_intermediate_1
tit_temp_109_intermediate_1 -----add---->tit_temp_109
tit_temp_109_intermediate_1 -----reassign---->tit_temp_109",DATA_TRANSFORM
2623,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[dead_31_intermediate_1 -----add---->dead_31],"b_29 -----mult---->dead_31_intermediate_1
tit_temp_109_intermediate_1 -----add---->tit_temp_109",DATA_TRANSFORM
2624,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[tit_temp_82_intermediate_1 -----apply---->tit_temp_82],"tit_temp_66 -----select---->tit_temp_82_intermediate_1
tit_temp_109_intermediate_1 -----apply---->tit_temp_109
tit_temp_109_intermediate_1 -----rename---->tit_temp_109",DATA_TRANSFORM
2625,0001600e65d5e2dc1deeb748a4b8d98e1474ccb4.execution_graph,[tit_temp_109_intermediate_1 -----add---->tit_temp_109],"loop_tit_temp_93_tit_temp_97 -----select---->tit_temp_109_intermediate_1
tit_temp_109_intermediate_1 -----add---->tit_temp_109
tit_temp_109_intermediate_1 -----tit temp---->tit_temp_109
tit_temp_109_intermediate_1 -----tit temp---->tit_temp_109",DATA_TRANSFORM
2626,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[conv_base_5 -----summary---->conv_base_9],"7	                  input_shape=(150, 150, 3))
8	
9	conv_base.summary()
10	
",EDA
2627,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[keras.applications -----vgg16---->conv_base_5],"3	from keras.applications import VGG16
4	
5	conv_base = VGG16(weights='imagenet',
6	                  include_top=False,
",ENVIRONMENT
2628,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[conv_base_9 -----reassign---->conv_base_17],"15	# Here - 'block5_conv1'
16	
17	conv_base.trainable = True
18	
",MODEL_TRAIN
2629,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[conv_base_17 -----conv base---->model_34],"32	
33	model = models.Sequential()
34	model.add(conv_base)
35	model.add(layers.Flatten())
",MODEL_TRAIN
2630,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[trainable_17 -----loop---->trainable_26],"
",MODEL_TRAIN
2631,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[set_trainable_19 -----loop---->set_trainable_22],"
",MODEL_TRAIN
2632,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[set_trainable_22 -----end_loop---->loop_set_trainable_19_set_trainable_22],"
",MODEL_TRAIN
2633,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[trainable_26 -----end_if---->branch_trainable_24_trainable_26],"
",MODEL_TRAIN
2634,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[trainable_24 -----end_if---->branch_trainable_24_trainable_26],"
",MODEL_TRAIN
2635,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[branch_trainable_24_trainable_26 -----end_loop---->loop_trainable_17_branch_trainable_24_trainable_26],"
",MODEL_TRAIN
2636,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[loop_set_trainable_19_set_trainable_22 -----restart_loop---->set_trainable_19],"
",MODEL_TRAIN
2637,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[loop_trainable_17_branch_trainable_24_trainable_26 -----restart_loop---->trainable_17],"
",MODEL_TRAIN
2638,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_33 -----add---->model_34],"32	
33	model = models.Sequential()
34	model.add(conv_base)
35	model.add(layers.Flatten())
",MODEL_TRAIN
2639,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[keras -----models---->model_33_intermediate_1],"test_dir_155_intermediate_1 -----models---->test_dir_155
test_dir_155_intermediate_1 -----sequential---->test_dir_155",MODEL_TRAIN
2640,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_34 -----add---->model_35],"33	model = models.Sequential()
34	model.add(conv_base)
35	model.add(layers.Flatten())
36	model.add(layers.Dense(256, activation='relu'))
",MODEL_TRAIN
2641,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_35 -----add---->model_36],"34	model.add(conv_base)
35	model.add(layers.Flatten())
36	model.add(layers.Dense(256, activation='relu'))
37	model.add(layers.Dropout(0.5)) # without it, val_acc=96%
",MODEL_TRAIN
2642,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_36 -----add---->model_37],"35	model.add(layers.Flatten())
36	model.add(layers.Dense(256, activation='relu'))
37	model.add(layers.Dropout(0.5)) # without it, val_acc=96%
38	model.add(layers.Dense(1, activation='sigmoid'))
",MODEL_TRAIN
2643,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_37 -----add---->model_38],"36	model.add(layers.Dense(256, activation='relu'))
37	model.add(layers.Dropout(0.5)) # without it, val_acc=96%
38	model.add(layers.Dense(1, activation='sigmoid'))
39	
",MODEL_TRAIN
2644,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_38 -----summary---->model_40],"38	model.add(layers.Dense(1, activation='sigmoid'))
39	
40	model.summary()
41	
",EDA
2645,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_40 -----compile---->model_77],"75	from keras import optimizers
76	
77	model.compile(loss='binary_crossentropy',
78	              optimizer=optimizers.RMSprop(lr=1e-5),
",MODEL_TRAIN
2646,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[base_dir_47 -----base dir---->train_dir_48],"46	
47	base_dir = '/input'
48	train_dir = os.path.join(base_dir, 'train')
49	validation_dir = os.path.join(base_dir, 'validation')
",DATA_IMPORT_EXTRACTION
2647,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[base_dir_47 -----base dir---->validation_dir_49],"47	base_dir = '/input'
48	train_dir = os.path.join(base_dir, 'train')
49	validation_dir = os.path.join(base_dir, 'validation')
50	
",DATA_IMPORT_EXTRACTION
2648,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[base_dir_47 -----base dir---->test_dir_155],"153	''' Evaluate best model on test dataset '''
154	
155	test_dir = os.path.join(base_dir, 'test')
156	
",DATA_IMPORT_EXTRACTION
2649,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[train_dir_48 -----train dir---->train_generator_61],"59	test_datagen = ImageDataGenerator(rescale=1./255)
60	
61	train_generator = train_datagen.flow_from_directory(
62	    train_dir,
",DATA_IMPORT_EXTRACTION
2650,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[os -----path---->train_dir_48_intermediate_1],"test_dir_155_intermediate_1 -----path---->test_dir_155
test_dir_155_intermediate_1 -----path---->test_dir_155
test_dir_155_intermediate_1 -----path---->test_dir_155
test_dir_155_intermediate_1 -----join---->test_dir_155",ENVIRONMENT
2651,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[os -----path---->validation_dir_49_intermediate_1],"test_dir_155_intermediate_1 -----path---->test_dir_155
test_dir_155_intermediate_1 -----path---->test_dir_155
test_dir_155_intermediate_1 -----path---->test_dir_155
test_dir_155_intermediate_1 -----join---->test_dir_155",ENVIRONMENT
2652,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[os -----path---->test_dir_155_intermediate_1],"test_dir_155_intermediate_1 -----path---->test_dir_155
test_dir_155_intermediate_1 -----path---->test_dir_155
test_dir_155_intermediate_1 -----path---->test_dir_155
test_dir_155_intermediate_1 -----join---->test_dir_155",ENVIRONMENT
2653,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[validation_dir_49 -----validation dir---->validation_generator_67],"65	    class_mode='binary')
66	
67	validation_generator = test_datagen.flow_from_directory(
68	    validation_dir,
",DATA_IMPORT_EXTRACTION
2654,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[train_datagen_51 -----flow from directory---->train_generator_61],"59	test_datagen = ImageDataGenerator(rescale=1./255)
60	
61	train_generator = train_datagen.flow_from_directory(
62	    train_dir,
",DATA_TRANSFORM
2655,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[keras.preprocessing.image -----image data generator---->train_datagen_51],"49	validation_dir = os.path.join(base_dir, 'validation')
50	
51	train_datagen = ImageDataGenerator(rescale=1./255,
52	                                  rotation_range=40,
",DATA_TRANSFORM
2656,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[keras.preprocessing.image -----image data generator---->test_datagen_59],"57	                                  horizontal_flip=True,
58	                                  fill_mode='nearest')
59	test_datagen = ImageDataGenerator(rescale=1./255)
60	
",DATA_TRANSFORM
2657,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[test_datagen_59 -----flow from directory---->validation_generator_67],"65	    class_mode='binary')
66	
67	validation_generator = test_datagen.flow_from_directory(
68	    validation_dir,
",DATA_IMPORT_EXTRACTION
2658,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[test_datagen_59 -----flow from directory---->test_generator_157],"155	test_dir = os.path.join(base_dir, 'test')
156	
157	test_generator = test_datagen.flow_from_directory(
158	    test_dir,
",DATA_IMPORT_EXTRACTION
2659,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[train_generator_61 -----train generator---->history_81],"79	              metrics=['acc'])
80	
81	history = model.fit_generator(
82	    train_generator,
",MODEL_TRAIN
2660,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_77 -----fit generator---->history_81],"79	              metrics=['acc'])
80	
81	history = model.fit_generator(
82	    train_generator,
",MODEL_TRAIN
2661,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_77 -----save---->model_88],"86	    validation_steps=50)
87	
88	model.save('cats_and_dogs_fine-tuned_aug.h5')
89	
",DATA_EXPORT
2662,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[history_81 -----history---->acc_98],"96	import matplotlib.pyplot as plt
97	
98	acc = history.history['acc']
99	val_acc = history.history['val_acc']
",MODEL_EVALUATION
2663,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[history_81 -----history---->val_acc_99],"97	
98	acc = history.history['acc']
99	val_acc = history.history['val_acc']
100	loss = history.history['loss']
",MODEL_EVALUATION
2664,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[history_81 -----history---->loss_100],"98	acc = history.history['acc']
99	val_acc = history.history['val_acc']
100	loss = history.history['loss']
101	val_loss = history.history['val_loss']
",MODEL_EVALUATION
2665,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[history_81 -----history---->val_loss_101],"99	val_acc = history.history['val_acc']
100	loss = history.history['loss']
101	val_loss = history.history['val_loss']
102	
",MODEL_EVALUATION
2666,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_88 -----save---->model_92],"90	''' Saving model to somewhere '''
91	
92	model.save('/output/cats_and_dogs_fine-tuned_aug.h5')
93	
",DATA_EXPORT
2667,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_92 -----evaluate generator---->test_loss_163],"161	    class_mode='binary')
162	
163	test_loss, test_acc = model.evaluate_generator(test_generator, steps=50)
164	print('test accuracy:', test_acc)
",MODEL_EVALUATION
2668,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_92 -----evaluate generator---->test_acc_163],"161	    class_mode='binary')
162	
163	test_loss, test_acc = model.evaluate_generator(test_generator, steps=50)
164	print('test accuracy:', test_acc)
",MODEL_EVALUATION
2669,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[acc_98 -----acc---->plt_105],"103	epochs = range(1, len(acc) + 1)
104	
105	plt.plot(epochs, acc, 'bo', label='Training accuracy')
106	plt.plot(epochs, val_acc, 'b', label='Validation accuracy')
",MODEL_EVALUATION
2670,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[val_acc_99 -----val acc---->plt_106],"104	
105	plt.plot(epochs, acc, 'bo', label='Training accuracy')
106	plt.plot(epochs, val_acc, 'b', label='Validation accuracy')
107	plt.title('Training and validaion accuracy')
",MODEL_EVALUATION
2671,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[loss_100 -----loss---->plt_114],"112	plt.figure()
113	
114	plt.plot(epochs, loss, 'go', label='Training loss')
115	plt.plot(epochs, val_loss, 'g', label='Validation loss')
",EDA
2672,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[val_loss_101 -----val loss---->plt_115],"113	
114	plt.plot(epochs, loss, 'go', label='Training loss')
115	plt.plot(epochs, val_loss, 'g', label='Validation loss')
116	plt.title('Training and validaion loss')
",MODEL_EVALUATION
2673,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[epochs_103 -----epochs---->plt_105],"103	epochs = range(1, len(acc) + 1)
104	
105	plt.plot(epochs, acc, 'bo', label='Training accuracy')
106	plt.plot(epochs, val_acc, 'b', label='Validation accuracy')
",MODEL_EVALUATION
2674,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[epochs_103 -----epochs---->plt_106],"104	
105	plt.plot(epochs, acc, 'bo', label='Training accuracy')
106	plt.plot(epochs, val_acc, 'b', label='Validation accuracy')
107	plt.title('Training and validaion accuracy')
",MODEL_EVALUATION
2675,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[epochs_103 -----epochs---->plt_114],"112	plt.figure()
113	
114	plt.plot(epochs, loss, 'go', label='Training loss')
115	plt.plot(epochs, val_loss, 'g', label='Validation loss')
",MODEL_EVALUATION
2676,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[epochs_103 -----epochs---->plt_115],"113	
114	plt.plot(epochs, loss, 'go', label='Training loss')
115	plt.plot(epochs, val_loss, 'g', label='Validation loss')
116	plt.title('Training and validaion loss')
",MODEL_EVALUATION
2677,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[epochs_103 -----epochs---->plt_135],"133	    return smoothed_points
134	
135	plt.plot(epochs, 
136	         smooth_curve(acc), 'bo', label='Smoothed training acc')
",MODEL_EVALUATION
2678,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[epochs_103 -----epochs---->plt_137],"135	plt.plot(epochs, 
136	         smooth_curve(acc), 'bo', label='Smoothed training acc')
137	plt.plot(epochs, 
138	         smooth_curve(val_acc), 'b', label='Smoothed validation acc')
",MODEL_EVALUATION
2679,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[epochs_103 -----epochs---->plt_144],"142	plt.figure()
143	
144	plt.plot(epochs, 
145	         smooth_curve(loss), 'bo', label='Smoothed training loss')
",MODEL_EVALUATION
2680,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[epochs_103 -----epochs---->plt_146],"144	plt.plot(epochs, 
145	         smooth_curve(loss), 'bo', label='Smoothed training loss')
146	plt.plot(epochs, 
147	         smooth_curve(val_loss), 'g', label='Smoothed validation loss')
",MODEL_EVALUATION
2681,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----plot---->plt_105],"103	epochs = range(1, len(acc) + 1)
104	
105	plt.plot(epochs, acc, 'bo', label='Training accuracy')
106	plt.plot(epochs, val_acc, 'b', label='Validation accuracy')
",MODEL_EVALUATION
2682,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----plot---->plt_106],"104	
105	plt.plot(epochs, acc, 'bo', label='Training accuracy')
106	plt.plot(epochs, val_acc, 'b', label='Validation accuracy')
107	plt.title('Training and validaion accuracy')
",MODEL_EVALUATION
2683,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----title---->plt_107],"105	plt.plot(epochs, acc, 'bo', label='Training accuracy')
106	plt.plot(epochs, val_acc, 'b', label='Validation accuracy')
107	plt.title('Training and validaion accuracy')
108	plt.xlabel('Epochs')
",MODEL_EVALUATION
2684,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----xlabel---->plt_108],"106	plt.plot(epochs, val_acc, 'b', label='Validation accuracy')
107	plt.title('Training and validaion accuracy')
108	plt.xlabel('Epochs')
109	plt.ylabel('Accuracy')
",MODEL_EVALUATION
2685,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----ylabel---->plt_109],"107	plt.title('Training and validaion accuracy')
108	plt.xlabel('Epochs')
109	plt.ylabel('Accuracy')
110	plt.legend()
",MODEL_EVALUATION
2686,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----legend---->plt_110],"108	plt.xlabel('Epochs')
109	plt.ylabel('Accuracy')
110	plt.legend()
111	
",MODEL_EVALUATION
2687,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----figure---->plt_112],"110	plt.legend()
111	
112	plt.figure()
113	
",MODEL_EVALUATION
2688,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----plot---->plt_114],"112	plt.figure()
113	
114	plt.plot(epochs, loss, 'go', label='Training loss')
115	plt.plot(epochs, val_loss, 'g', label='Validation loss')
",MODEL_EVALUATION
2689,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----plot---->plt_115],"113	
114	plt.plot(epochs, loss, 'go', label='Training loss')
115	plt.plot(epochs, val_loss, 'g', label='Validation loss')
116	plt.title('Training and validaion loss')
",MODEL_EVALUATION
2690,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----title---->plt_116],"114	plt.plot(epochs, loss, 'go', label='Training loss')
115	plt.plot(epochs, val_loss, 'g', label='Validation loss')
116	plt.title('Training and validaion loss')
117	plt.xlabel('Epochs')
",MODEL_EVALUATION
2691,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----xlabel---->plt_117],"115	plt.plot(epochs, val_loss, 'g', label='Validation loss')
116	plt.title('Training and validaion loss')
117	plt.xlabel('Epochs')
118	plt.ylabel('Loss')
",EDA
2692,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----ylabel---->plt_118],"116	plt.title('Training and validaion loss')
117	plt.xlabel('Epochs')
118	plt.ylabel('Loss')
119	plt.legend()
",MODEL_EVALUATION
2693,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----legend---->plt_119],"117	plt.xlabel('Epochs')
118	plt.ylabel('Loss')
119	plt.legend()
120	
",MODEL_EVALUATION
2694,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----show---->plt_121],"119	plt.legend()
120	
121	plt.show()
122	
",MODEL_EVALUATION
2695,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----plot---->plt_135],"133	    return smoothed_points
134	
135	plt.plot(epochs, 
136	         smooth_curve(acc), 'bo', label='Smoothed training acc')
",MODEL_EVALUATION
2696,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----plot---->plt_137],"135	plt.plot(epochs, 
136	         smooth_curve(acc), 'bo', label='Smoothed training acc')
137	plt.plot(epochs, 
138	         smooth_curve(val_acc), 'b', label='Smoothed validation acc')
",MODEL_EVALUATION
2697,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----title---->plt_139],"137	plt.plot(epochs, 
138	         smooth_curve(val_acc), 'b', label='Smoothed validation acc')
139	plt.title('Training and validation accuracy')
140	plt.legend()
",MODEL_EVALUATION
2698,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----legend---->plt_140],"138	         smooth_curve(val_acc), 'b', label='Smoothed validation acc')
139	plt.title('Training and validation accuracy')
140	plt.legend()
141	
",MODEL_EVALUATION
2699,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----figure---->plt_142],"140	plt.legend()
141	
142	plt.figure()
143	
",MODEL_EVALUATION
2700,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----plot---->plt_144],"142	plt.figure()
143	
144	plt.plot(epochs, 
145	         smooth_curve(loss), 'bo', label='Smoothed training loss')
",MODEL_EVALUATION
2701,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----plot---->plt_146],"144	plt.plot(epochs, 
145	         smooth_curve(loss), 'bo', label='Smoothed training loss')
146	plt.plot(epochs, 
147	         smooth_curve(val_loss), 'g', label='Smoothed validation loss')
",MODEL_EVALUATION
2702,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----title---->plt_148],"146	plt.plot(epochs, 
147	         smooth_curve(val_loss), 'g', label='Smoothed validation loss')
148	plt.title('Training and validation accuracy')
149	plt.legend()
",MODEL_EVALUATION
2703,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----legend---->plt_149],"147	         smooth_curve(val_loss), 'g', label='Smoothed validation loss')
148	plt.title('Training and validation accuracy')
149	plt.legend()
150	
",EDA
2704,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[matplotlib.pyplot -----show---->plt_151],"149	plt.legend()
150	
151	plt.show()
152	
",MODEL_EVALUATION
2705,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[test_dir_155 -----test dir---->test_generator_157],"155	test_dir = os.path.join(base_dir, 'test')
156	
157	test_generator = test_datagen.flow_from_directory(
158	    test_dir,
",DATA_IMPORT_EXTRACTION
2706,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[test_generator_157 -----test generator---->test_loss_163],"161	    class_mode='binary')
162	
163	test_loss, test_acc = model.evaluate_generator(test_generator, steps=50)
164	print('test accuracy:', test_acc)
",MODEL_EVALUATION
2707,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[test_generator_157 -----test generator---->test_acc_163],"161	    class_mode='binary')
162	
163	test_loss, test_acc = model.evaluate_generator(test_generator, steps=50)
164	print('test accuracy:', test_acc)
",MODEL_EVALUATION
2708,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[model_33_intermediate_1 -----sequential---->model_33],"keras -----models---->model_33_intermediate_1
test_dir_155_intermediate_1 -----sequential---->test_dir_155
test_dir_155_intermediate_1 -----add---->test_dir_155",MODEL_TRAIN
2709,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[train_dir_48_intermediate_1 -----join---->train_dir_48],"os -----path---->train_dir_48_intermediate_1
test_dir_155_intermediate_1 -----join---->test_dir_155
test_dir_155_intermediate_1 -----train dir---->test_dir_155",ENVIRONMENT
2710,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[validation_dir_49_intermediate_1 -----join---->validation_dir_49],"os -----path---->validation_dir_49_intermediate_1
test_dir_155_intermediate_1 -----join---->test_dir_155
test_dir_155_intermediate_1 -----validation dir---->test_dir_155",DATA_IMPORT_EXTRACTION
2711,0001607fadae8bc75e0e14582ef7aee7f8f4aca5.execution_graph,[test_dir_155_intermediate_1 -----join---->test_dir_155],"os -----path---->test_dir_155_intermediate_1
test_dir_155_intermediate_1 -----join---->test_dir_155
test_dir_155_intermediate_1 -----test dir---->test_dir_155",ENVIRONMENT
2712,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_train_6 -----head---->df_train_13],"11	display(df_train.describe())
12	
13	df_train.head()
14	
",EDA
2713,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[pandas -----read csv---->df_train_6],"4	import seaborn as sns
5	
6	df_train = pd.read_csv('../kaggle/train.csv')
7	df_test = pd.read_csv('../kaggle/test.csv')
",DATA_IMPORT_EXTRACTION
2714,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[pandas -----read csv---->df_test_7],"5	
6	df_train = pd.read_csv('../kaggle/train.csv')
7	df_test = pd.read_csv('../kaggle/test.csv')
8	
",DATA_IMPORT_EXTRACTION
2715,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[pandas -----to datetime---->df_train_15],"13	df_train.head()
14	
15	df_train['Date'] = pd.to_datetime(df_train['Date'], format = 
16	                                 '%Y-%m-%d')
",DATA_TRANSFORM
2716,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[pandas -----to datetime---->df_test_17],"15	df_train['Date'] = pd.to_datetime(df_train['Date'], format = 
16	                                 '%Y-%m-%d')
17	df_test['Date'] = pd.to_datetime(df_test['Date'], format = 
18	                                 '%Y-%m-%d')
",DATA_TRANSFORM
2717,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_test_7 -----df test---->df_test_17],"15	df_train['Date'] = pd.to_datetime(df_train['Date'], format = 
16	                                 '%Y-%m-%d')
17	df_test['Date'] = pd.to_datetime(df_test['Date'], format = 
18	                                 '%Y-%m-%d')
",DATA_TRANSFORM
2718,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_train_13 -----df train---->df_train_15],"13	df_train.head()
14	
15	df_train['Date'] = pd.to_datetime(df_train['Date'], format = 
16	                                 '%Y-%m-%d')
",DATA_TRANSFORM
2719,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_train_15 -----select---->train_date_min_22_intermediate_1],"pandas -----to datetime---->df_train_15
df_train_13 -----df train---->df_train_15
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----df train---->country_obj_194
country_obj_194_intermediate_1 -----min---->country_obj_194",DATA_TRANSFORM
2720,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_train_15 -----select---->train_date_max_23_intermediate_1],"pandas -----to datetime---->df_train_15
df_train_13 -----df train---->df_train_15
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----df train---->country_obj_194
country_obj_194_intermediate_1 -----max---->country_obj_194",DATA_TRANSFORM
2721,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_train_15 -----df train---->df_train_100],"98	            return self.get_continent(country)
99	
100	df_train.ConfirmedCases = np.abs(df_train.ConfirmedCases)
101	df_tm = df_train.copy()
",DATA_TRANSFORM
2722,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_test_17 -----info---->df_test_20],"18	                                 '%Y-%m-%d')
19	
20	df_test.info()
21	
",EDA
2723,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_test_20 -----select---->test_date_min_27_intermediate_1],"df_test_17 -----info---->df_test_20
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----min---->country_obj_194",DATA_TRANSFORM
2724,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_test_20 -----select---->test_date_max_28_intermediate_1],"df_test_17 -----info---->df_test_20
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----max---->country_obj_194",DATA_TRANSFORM
2725,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_train_100 -----df train---->ConfirmedCases_100],"98	            return self.get_continent(country)
99	
100	df_train.ConfirmedCases = np.abs(df_train.ConfirmedCases)
101	df_tm = df_train.copy()
",DATA_TRANSFORM
2726,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_train_100 -----copy---->df_tm_101],"99	
100	df_train.ConfirmedCases = np.abs(df_train.ConfirmedCases)
101	df_tm = df_train.copy()
102	date = df_tm.Date.max() # get current date
",DATA_TRANSFORM
2727,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_train_100 -----copy---->df_world_149],"147	    return df
148	
149	df_world = df_train.copy()
150	df_world = df_world.groupby('Date', as_index = False)['ConfirmedCases', \
",DATA_TRANSFORM
2728,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[numpy -----abs---->df_train_100],"98	            return self.get_continent(country)
99	
100	df_train.ConfirmedCases = np.abs(df_train.ConfirmedCases)
101	df_tm = df_train.copy()
",DATA_TRANSFORM
2729,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[numpy -----abs---->ConfirmedCases_100],"98	            return self.get_continent(country)
99	
100	df_train.ConfirmedCases = np.abs(df_train.ConfirmedCases)
101	df_tm = df_train.copy()
",DATA_TRANSFORM
2730,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_101 -----date---->date_102_intermediate_1],"df_train_100 -----copy---->df_tm_101
country_obj_194_intermediate_1 -----date---->country_obj_194
country_obj_194_intermediate_1 -----filter---->country_obj_194
country_obj_194_intermediate_1 -----max---->country_obj_194",DATA_TRANSFORM
2731,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_101 -----filter---->df_tm_103_intermediate_1],"df_train_100 -----copy---->df_tm_101
country_obj_194_intermediate_1 -----date---->country_obj_194
country_obj_194_intermediate_1 -----filter---->country_obj_194
country_obj_194_intermediate_1 -----select---->country_obj_194",DATA_TRANSFORM
2732,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[date_102 -----equal---->df_tm_103],"101	df_tm = df_train.copy()
102	date = df_tm.Date.max() # get current date
103	df_tm = df_tm[df_tm['Date'] == date]
104	obj = country_utils()
",DATA_TRANSFORM
2733,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_103 -----province state---->df_tm_106_intermediate_1],"date_102 -----equal---->df_tm_103
df_tm_103_intermediate_2 -----equal---->df_tm_103
country_obj_194_intermediate_1 -----province state---->country_obj_194
country_obj_194_intermediate_1 -----fillna---->country_obj_194",DATA_TRANSFORM
2734,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[country_utils -----country utils---->obj_104],"102	date = df_tm.Date.max() # get current date
103	df_tm = df_tm[df_tm['Date'] == date]
104	obj = country_utils()
105	
",ENVIRONMENT
2735,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_106 -----apply---->df_tm_113],"111	# df_tm.drop(index = idx, inplace =True)
112	
113	df_tm['continent'] = df_tm.apply(lambda x: obj.fetch_continent(x['Country_Region']), axis = 1)
114	df_tm['world'] = 'world' # in order to have a single root node
",DATA_TRANSFORM
2736,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_113 -----reassign---->df_tm_114],"112	
113	df_tm['continent'] = df_tm.apply(lambda x: obj.fetch_continent(x['Country_Region']), axis = 1)
114	df_tm['world'] = 'world' # in order to have a single root node
115	fig = px.treemap(df_tm, path = ['world', 'continent', 'Country_Region'],\
",DATA_TRANSFORM
2737,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_114 -----df tm---->fig_115],"113	df_tm['continent'] = df_tm.apply(lambda x: obj.fetch_continent(x['Country_Region']), axis = 1)
114	df_tm['world'] = 'world' # in order to have a single root node
115	fig = px.treemap(df_tm, path = ['world', 'continent', 'Country_Region'],\
116	                values = 'ConfirmedCases', color = 'ConfirmedCases',\
",EDA
2738,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_114 -----df tm---->fig_123],"121	fig.show()
122	
123	fig = px.treemap(df_tm, path = ['world', 'continent', 'Country_Region'],\
124	                values = 'Fatalities', color = 'Fatalities',\
",EDA
2739,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_114 -----shape---->df_tm_170],"168	
169	
170	df_tm.shape
171	
",EDA
2740,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[fig_115 -----show---->fig_121],"119	                title = 'Current Share of WorldWide COVID19 Confirmed Cases')
120	
121	fig.show()
122	
",EDA
2741,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[plotly_express -----treemap---->fig_115],"113	df_tm['continent'] = df_tm.apply(lambda x: obj.fetch_continent(x['Country_Region']), axis = 1)
114	df_tm['world'] = 'world' # in order to have a single root node
115	fig = px.treemap(df_tm, path = ['world', 'continent', 'Country_Region'],\
116	                values = 'ConfirmedCases', color = 'ConfirmedCases',\
",EDA
2742,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[plotly_express -----treemap---->fig_123],"121	fig.show()
122	
123	fig = px.treemap(df_tm, path = ['world', 'continent', 'Country_Region'],\
124	                values = 'Fatalities', color = 'Fatalities',\
",EDA
2743,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[fig_121 -----reassign---->fig_123],"121	fig.show()
122	
123	fig = px.treemap(df_tm, path = ['world', 'continent', 'Country_Region'],\
124	                values = 'Fatalities', color = 'Fatalities',\
",EDA
2744,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[fig_123 -----show---->fig_129],"127	                title = 'Current Share of WorldWide COVID19 Fatalities')
128	
129	fig.show()
130	
",EDA
2745,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_world_149 -----groupby---->df_world_150_intermediate_1],"df_train_100 -----copy---->df_world_149
country_obj_194_intermediate_1 -----groupby---->country_obj_194
country_obj_194_intermediate_1 -----sum---->country_obj_194",DATA_TRANSFORM
2746,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_world_150 -----df world---->df_world_152],"150	df_world = df_world.groupby('Date', as_index = False)['ConfirmedCases', \
151	                            'Fatalities'].sum()
152	df_world = add_daily_measures(df_world)
153	df_world['Cases:7-day rolling average'] = df_world['Daily Cases'].\
",DATA_TRANSFORM
2747,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_world_152 -----select---->df_world_153_intermediate_1],"df_world_150 -----df world---->df_world_152
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----rolling---->country_obj_194",DATA_TRANSFORM
2748,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_world_153 -----select---->df_world_155_intermediate_1],"df_world_153_intermediate_2 -----mean---->df_world_153
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----rolling---->country_obj_194",DATA_TRANSFORM
2749,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_world_155 -----iloc---->df_world_157],"155	df_world['Deaths:7-day rolling average'] = df_world['Daily Deaths'].\
156	rolling(7).mean()
157	df_world.iloc[0:7, :]
158	
",EDA
2750,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_170 -----head---->df_tm_172],"170	df_tm.shape
171	
172	df_tm.head()
173	
",EDA
2751,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_172 -----loc---->df_tm_174_intermediate_1],"df_tm_170 -----head---->df_tm_172
country_obj_194_intermediate_1 -----loc---->country_obj_194
country_obj_194_intermediate_1 -----country region---->country_obj_194",DATA_TRANSFORM
2752,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_174 -----loc---->df_tm_176_intermediate_1],"df_tm_174_intermediate_2 -----equal---->df_tm_174
country_obj_194_intermediate_1 -----loc---->country_obj_194
country_obj_194_intermediate_1 -----country region---->country_obj_194",DATA_TRANSFORM
2753,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_176 -----loc---->idx_178_intermediate_1],"df_tm_176_intermediate_2 -----equal---->df_tm_176
country_obj_194_intermediate_1 -----loc---->country_obj_194
country_obj_194_intermediate_1 -----drop---->country_obj_194
country_obj_194_intermediate_1 -----select---->country_obj_194",DATA_TRANSFORM
2754,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_176 -----drop---->df_tm_182],"180	
181	
182	df_tm.drop(index = idx, inplace =True)
183	
",DATA_TRANSFORM
2755,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[idx_178 -----idx---->idx_179],"177	
178	idx = df_tm.loc[(df_tm['Country_Region'] == 'Congo (Kinshasa)'), :].index
179	idx
180	
",DATA_TRANSFORM
2756,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_182 -----iloc---->df_tm_184],"182	df_tm.drop(index = idx, inplace =True)
183	
184	df_tm.iloc[87:95, :]
185	
",DATA_TRANSFORM
2757,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[country_obj_194 -----country obj---->continent_code_195],"193	
194	country_obj = pycountry.countries.get(name = 'Congo')
195	continent_code = pc.country_alpha2_to_continent_code(country_obj.alpha_2)
196	continent_code
",DATA_TRANSFORM
2758,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[pycountry -----countries---->country_obj_194_intermediate_1],"country_obj_194_intermediate_1 -----countries---->country_obj_194
country_obj_194_intermediate_1 -----get---->country_obj_194",DATA_TRANSFORM
2759,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[continent_code_195 -----continent code---->continent_code_196],"194	country_obj = pycountry.countries.get(name = 'Congo')
195	continent_code = pc.country_alpha2_to_continent_code(country_obj.alpha_2)
196	continent_code
197	
",DATA_TRANSFORM
2760,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[pycountry_convert -----country alpha2 to continent code---->continent_code_195],"193	
194	country_obj = pycountry.countries.get(name = 'Congo')
195	continent_code = pc.country_alpha2_to_continent_code(country_obj.alpha_2)
196	continent_code
",DATA_TRANSFORM
2761,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[train_date_min_22_intermediate_1 -----min---->train_date_min_22],"df_train_15 -----select---->train_date_min_22_intermediate_1
country_obj_194_intermediate_1 -----min---->country_obj_194",DATA_TRANSFORM
2762,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[train_date_max_23_intermediate_1 -----max---->train_date_max_23],"df_train_15 -----select---->train_date_max_23_intermediate_1
country_obj_194_intermediate_1 -----max---->country_obj_194",DATA_TRANSFORM
2763,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[test_date_min_27_intermediate_1 -----min---->test_date_min_27],"df_test_20 -----select---->test_date_min_27_intermediate_1
country_obj_194_intermediate_1 -----min---->country_obj_194",DATA_TRANSFORM
2764,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[test_date_max_28_intermediate_1 -----max---->test_date_max_28],"df_test_20 -----select---->test_date_max_28_intermediate_1
country_obj_194_intermediate_1 -----max---->country_obj_194",EDA
2765,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[date_102_intermediate_1 -----max---->date_102],"df_tm_101 -----date---->date_102_intermediate_1
country_obj_194_intermediate_1 -----max---->country_obj_194
country_obj_194_intermediate_1 -----equal---->country_obj_194",DATA_TRANSFORM
2766,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_103_intermediate_1 -----select---->df_tm_103_intermediate_2],"df_tm_101 -----filter---->df_tm_103_intermediate_1
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----equal---->country_obj_194",DATA_TRANSFORM
2767,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_103_intermediate_2 -----equal---->df_tm_103],"df_tm_103_intermediate_1 -----select---->df_tm_103_intermediate_2
country_obj_194_intermediate_1 -----equal---->country_obj_194
country_obj_194_intermediate_1 -----province state---->country_obj_194",DATA_TRANSFORM
2768,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_106_intermediate_1 -----fillna---->df_tm_106],"df_tm_103 -----province state---->df_tm_106_intermediate_1
country_obj_194_intermediate_1 -----fillna---->country_obj_194
country_obj_194_intermediate_1 -----apply---->country_obj_194",DATA_TRANSFORM
2769,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_world_150_intermediate_1 -----sum---->df_world_150],"df_world_149 -----groupby---->df_world_150_intermediate_1
country_obj_194_intermediate_1 -----sum---->country_obj_194
country_obj_194_intermediate_1 -----df world---->country_obj_194",DATA_TRANSFORM
2770,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_world_153_intermediate_1 -----rolling---->df_world_153_intermediate_2],"df_world_152 -----select---->df_world_153_intermediate_1
country_obj_194_intermediate_1 -----rolling---->country_obj_194
country_obj_194_intermediate_1 -----mean---->country_obj_194",DATA_TRANSFORM
2771,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_world_153_intermediate_2 -----mean---->df_world_153],"df_world_153_intermediate_1 -----rolling---->df_world_153_intermediate_2
country_obj_194_intermediate_1 -----mean---->country_obj_194
country_obj_194_intermediate_1 -----select---->country_obj_194",DATA_TRANSFORM
2772,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_world_155_intermediate_1 -----rolling---->df_world_155_intermediate_2],"df_world_153 -----select---->df_world_155_intermediate_1
country_obj_194_intermediate_1 -----rolling---->country_obj_194
country_obj_194_intermediate_1 -----mean---->country_obj_194",DATA_TRANSFORM
2773,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_world_155_intermediate_2 -----mean---->df_world_155],"df_world_155_intermediate_1 -----rolling---->df_world_155_intermediate_2
country_obj_194_intermediate_1 -----mean---->country_obj_194
country_obj_194_intermediate_1 -----iloc---->country_obj_194",DATA_TRANSFORM
2774,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_174_intermediate_1 -----country region---->df_tm_174_intermediate_2],"df_tm_172 -----loc---->df_tm_174_intermediate_1
country_obj_194_intermediate_1 -----country region---->country_obj_194
country_obj_194_intermediate_1 -----equal---->country_obj_194",DATA_TRANSFORM
2775,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_174_intermediate_2 -----equal---->df_tm_174],"df_tm_174_intermediate_1 -----country region---->df_tm_174_intermediate_2
country_obj_194_intermediate_1 -----equal---->country_obj_194
country_obj_194_intermediate_1 -----loc---->country_obj_194",DATA_TRANSFORM
2776,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_176_intermediate_1 -----country region---->df_tm_176_intermediate_2],"df_tm_174 -----loc---->df_tm_176_intermediate_1
country_obj_194_intermediate_1 -----country region---->country_obj_194
country_obj_194_intermediate_1 -----equal---->country_obj_194",DATA_TRANSFORM
2777,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[df_tm_176_intermediate_2 -----equal---->df_tm_176],"df_tm_176_intermediate_1 -----country region---->df_tm_176_intermediate_2
country_obj_194_intermediate_1 -----equal---->country_obj_194
country_obj_194_intermediate_1 -----loc---->country_obj_194
country_obj_194_intermediate_1 -----drop---->country_obj_194",DATA_TRANSFORM
2778,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[idx_178_intermediate_1 -----select---->idx_178_intermediate_2],"df_tm_176 -----loc---->idx_178_intermediate_1
country_obj_194_intermediate_1 -----select---->country_obj_194
country_obj_194_intermediate_1 -----equal---->country_obj_194",DATA_TRANSFORM
2779,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[idx_178_intermediate_2 -----equal---->idx_178_intermediate_3],"idx_178_intermediate_1 -----select---->idx_178_intermediate_2
country_obj_194_intermediate_1 -----equal---->country_obj_194
country_obj_194_intermediate_1 -----index---->country_obj_194",DATA_TRANSFORM
2780,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[idx_178_intermediate_3 -----index---->idx_178],"idx_178_intermediate_2 -----equal---->idx_178_intermediate_3
country_obj_194_intermediate_1 -----index---->country_obj_194
country_obj_194_intermediate_1 -----idx---->country_obj_194",DATA_TRANSFORM
2781,000163e196a27c8905b260b03b42d5facfd482fd.execution_graph,[country_obj_194_intermediate_1 -----get---->country_obj_194],"pycountry -----countries---->country_obj_194_intermediate_1
country_obj_194_intermediate_1 -----get---->country_obj_194
country_obj_194_intermediate_1 -----country obj---->country_obj_194",DATA_TRANSFORM
2782,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[x_3 -----add---->u_6],"4	h = parse(""h"")
5	
6	u = (x+4)**3
7	
",DATA_TRANSFORM
2783,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[pymbolic -----parse---->x_3],"1	from pymbolic import parse
2	
3	x = parse(""x"")
4	h = parse(""h"")
",DATA_TRANSFORM
2784,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[pymbolic -----parse---->h_4],"2	
3	x = parse(""x"")
4	h = parse(""h"")
5	
",DATA_TRANSFORM
2785,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[pymbolic -----parse---->h_8],"6	u = (x+4)**3
7	
8	h = parse(""h"")
9	
",DATA_TRANSFORM
2786,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[h_4 -----reassign---->h_8],"6	u = (x+4)**3
7	
8	h = parse(""h"")
9	
",DATA_TRANSFORM
2787,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[u_6 -----mult---->expr_10_intermediate_1],"x_3 -----add---->u_6
expr_10_intermediate_1 -----mult---->expr_10
expr_10_intermediate_1 -----pow---->expr_10",DATA_TRANSFORM
2788,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[h_8 -----mult---->expr_10_intermediate_1],"pymbolic -----parse---->h_8
h_4 -----reassign---->h_8
expr_10_intermediate_1 -----mult---->expr_10
expr_10_intermediate_1 -----pow---->expr_10",DATA_TRANSFORM
2789,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[expr_10 -----expr---->expr_data_24],"22	import pickle
23	
24	expr_data = pickle.dumps(expr)
25	
",DATA_EXPORT
2790,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[expr_10 -----expr---->ec_49],"47	ec = ExpressionCompiler()
48	
49	ec.compile(expr)
50	
",MODEL_TRAIN
2791,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[expr_10 -----expr---->ec_51],"49	ec.compile(expr)
50	
51	ec.compile(expr)
52	
",MODEL_TRAIN
2792,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[pymbolic.mapper.graphviz -----graphviz mapper---->gvm_17],"15	from pymbolic.mapper.graphviz import GraphvizMapper
16	
17	gvm = GraphvizMapper()
18	gvm(expr)
",ENVIRONMENT
2793,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[expr_data_24 -----expr data---->expr2_28],"26	print(type(expr_data), len(expr_data))
27	
28	expr2 = pickle.loads(expr_data)
29	
",DATA_IMPORT_EXTRACTION
2794,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[pickle -----dumps---->expr_data_24],"22	import pickle
23	
24	expr_data = pickle.dumps(expr)
25	
",DATA_EXPORT
2795,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[pickle -----loads---->expr2_28],"26	print(type(expr_data), len(expr_data))
27	
28	expr2 = pickle.loads(expr_data)
29	
",DATA_IMPORT_EXTRACTION
2796,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[ec_47 -----compile---->ec_49],"47	ec = ExpressionCompiler()
48	
49	ec.compile(expr)
50	
",MODEL_TRAIN
2797,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[ExpressionCompiler -----expression compiler---->ec_47],"45	        return ccm(expr)
46	
47	ec = ExpressionCompiler()
48	
",MODEL_TRAIN
2798,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[ec_49 -----compile---->ec_51],"49	ec.compile(expr)
50	
51	ec.compile(expr)
52	
",MODEL_TRAIN
2799,00016440ef969e6ad86073d9314974f703d962e0.execution_graph,[expr_10_intermediate_1 -----pow---->expr_10],"u_6 -----mult---->expr_10_intermediate_1
h_8 -----mult---->expr_10_intermediate_1
expr_10_intermediate_1 -----pow---->expr_10
expr_10_intermediate_1 -----expr---->expr_10
expr_10_intermediate_1 -----expr---->expr_10
expr_10_intermediate_1 -----expr---->expr_10",DATA_TRANSFORM
2800,00017118c6cc51af6b97b52bc789b547f8d5d392.execution_graph,[astropy.units -----quantity---->res_4],"2	
3	
4	res = u.Quantity(3514.56625402, unit='Angstrom')
5	print(res)
",DATA_TRANSFORM
2801,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[data_12 -----drop---->X_16],"14	print(data.head())
15	
16	X = data.drop('PRICE',axis=1)
17	Y = data['PRICE']
",MODEL_TRAIN
2802,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[data_12 -----select---->Y_17],"15	
16	X = data.drop('PRICE',axis=1)
17	Y = data['PRICE']
18	print(X.head())
",MODEL_TRAIN
2803,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[pandas -----read csv---->data_12],"10	
11	column_names = [""CRIM"", ""ZN"", ""INDUS"", ""CHAS"", ""NOX"", ""RM"", ""AGE"", ""DIS"", ""RAD"", ""TAX"", ""PTRATIO"", ""B"", ""LSTAT"", ""PRICE""]
12	data = pd.read_csv(""../input/boston-housing.csv"", header=None, delimiter=r""\s+"", names=column_names)
13	
",DATA_IMPORT_EXTRACTION
2804,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_16 -----x---->X_train_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",MODEL_TRAIN
2805,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_16 -----x---->X_test_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",MODEL_EVALUATION
2806,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_16 -----x---->Y_train_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",MODEL_TRAIN
2807,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_16 -----x---->Y_test_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",MODEL_EVALUATION
2808,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[Y_17 -----y---->X_train_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",MODEL_TRAIN
2809,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[Y_17 -----y---->X_test_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",MODEL_EVALUATION
2810,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[Y_17 -----y---->Y_train_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",MODEL_TRAIN
2811,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[Y_17 -----y---->Y_test_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",MODEL_EVALUATION
2812,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_train_21 -----x train---->lr_25],"23	
24	lr = LinearRegression() 
25	lr.fit(X_train, Y_train)
26	
",MODEL_TRAIN
2813,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_train_21 -----x train---->rr_35],"33	
34	rr = Ridge(alpha=0.5)
35	rr.fit(X_train, Y_train)
36	
",MODEL_TRAIN
2814,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_train_21 -----x train---->train_score_44],"42	print('RMSE', sqrt(metrics.mean_squared_error(Y_test,Y_predRR)))
43	
44	train_score=lr.score(X_train, Y_train)
45	test_score=lr.score(X_test, Y_test)
",MODEL_EVALUATION
2815,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_train_21 -----x train---->Ridge_train_score_47],"45	test_score=lr.score(X_test, Y_test)
46	
47	Ridge_train_score = rr.score(X_train, Y_train)
48	Ridge_test_score = rr.score(X_test, Y_test)
",MODEL_EVALUATION
2816,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[sklearn.model_selection -----train test split---->X_train_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",DATA_TRANSFORM
2817,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[sklearn.model_selection -----train test split---->X_test_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",DATA_TRANSFORM
2818,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[sklearn.model_selection -----train test split---->Y_train_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",DATA_TRANSFORM
2819,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[sklearn.model_selection -----train test split---->Y_test_21],"19	print(Y.head())
20	
21	X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)
22	print(X_test.shape, Y_test.shape)
",DATA_TRANSFORM
2820,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_test_21 -----x test---->Y_pred_27],"25	lr.fit(X_train, Y_train)
26	
27	Y_pred = lr.predict(X_test)
28	
",MODEL_EVALUATION
2821,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_test_21 -----x test---->Y_predRR_37],"35	rr.fit(X_train, Y_train)
36	
37	Y_predRR = rr.predict(X_test)
38	
",MODEL_EVALUATION
2822,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_test_21 -----x test---->test_score_45],"43	
44	train_score=lr.score(X_train, Y_train)
45	test_score=lr.score(X_test, Y_test)
46	
",MODEL_EVALUATION
2823,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[X_test_21 -----x test---->Ridge_test_score_48],"46	
47	Ridge_train_score = rr.score(X_train, Y_train)
48	Ridge_test_score = rr.score(X_test, Y_test)
49	
",MODEL_EVALUATION
2824,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[Y_train_21 -----y train---->lr_25],"23	
24	lr = LinearRegression() 
25	lr.fit(X_train, Y_train)
26	
",MODEL_TRAIN
2825,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[Y_train_21 -----y train---->rr_35],"33	
34	rr = Ridge(alpha=0.5)
35	rr.fit(X_train, Y_train)
36	
",MODEL_TRAIN
2826,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[Y_train_21 -----y train---->train_score_44],"42	print('RMSE', sqrt(metrics.mean_squared_error(Y_test,Y_predRR)))
43	
44	train_score=lr.score(X_train, Y_train)
45	test_score=lr.score(X_test, Y_test)
",MODEL_EVALUATION
2827,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[Y_train_21 -----y train---->Ridge_train_score_47],"45	test_score=lr.score(X_test, Y_test)
46	
47	Ridge_train_score = rr.score(X_train, Y_train)
48	Ridge_test_score = rr.score(X_test, Y_test)
",MODEL_EVALUATION
2828,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[Y_test_21 -----y test---->test_score_45],"43	
44	train_score=lr.score(X_train, Y_train)
45	test_score=lr.score(X_test, Y_test)
46	
",MODEL_EVALUATION
2829,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[Y_test_21 -----y test---->Ridge_test_score_48],"46	
47	Ridge_train_score = rr.score(X_train, Y_train)
48	Ridge_test_score = rr.score(X_test, Y_test)
49	
",MODEL_EVALUATION
2830,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[lr_24 -----fit---->lr_25],"23	
24	lr = LinearRegression() 
25	lr.fit(X_train, Y_train)
26	
",MODEL_TRAIN
2831,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[sklearn.linear_model -----linear regression---->lr_24],"22	print(X_test.shape, Y_test.shape)
23	
24	lr = LinearRegression() 
25	lr.fit(X_train, Y_train)
",ENVIRONMENT
2832,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[sklearn.linear_model -----ridge---->rr_34],"32	print('RMSE', sqrt(metrics.mean_squared_error(Y_test,Y_pred)))
33	
34	rr = Ridge(alpha=0.5)
35	rr.fit(X_train, Y_train)
",ENVIRONMENT
2833,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[lr_25 -----predict---->Y_pred_27],"25	lr.fit(X_train, Y_train)
26	
27	Y_pred = lr.predict(X_test)
28	
",MODEL_EVALUATION
2834,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[lr_25 -----score---->train_score_44],"42	print('RMSE', sqrt(metrics.mean_squared_error(Y_test,Y_predRR)))
43	
44	train_score=lr.score(X_train, Y_train)
45	test_score=lr.score(X_test, Y_test)
",MODEL_EVALUATION
2835,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[lr_25 -----score---->test_score_45],"43	
44	train_score=lr.score(X_train, Y_train)
45	test_score=lr.score(X_test, Y_test)
46	
",MODEL_EVALUATION
2836,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[rr_34 -----fit---->rr_35],"33	
34	rr = Ridge(alpha=0.5)
35	rr.fit(X_train, Y_train)
36	
",MODEL_TRAIN
2837,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[rr_35 -----predict---->Y_predRR_37],"35	rr.fit(X_train, Y_train)
36	
37	Y_predRR = rr.predict(X_test)
38	
",MODEL_EVALUATION
2838,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[rr_35 -----score---->Ridge_train_score_47],"45	test_score=lr.score(X_test, Y_test)
46	
47	Ridge_train_score = rr.score(X_train, Y_train)
48	Ridge_test_score = rr.score(X_test, Y_test)
",MODEL_EVALUATION
2839,000171c69cd5e710e1d4826b66a05e8d9ad47579.execution_graph,[rr_35 -----score---->Ridge_test_score_48],"46	
47	Ridge_train_score = rr.score(X_train, Y_train)
48	Ridge_test_score = rr.score(X_test, Y_test)
49	
",MODEL_EVALUATION
2840,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_58 -----data---->model_89],"87	
88	model = KMeans(2) # instantiate a model with two centers
89	model.fit(data)
90	preds = model.predict(data) # fit and predict
",MODEL_TRAIN
2841,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_58 -----data---->preds_90],"88	model = KMeans(2) # instantiate a model with two centers
89	model.fit(data)
90	preds = model.predict(data) # fit and predict
91	preds
",MODEL_EVALUATION
2842,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_58 -----data---->plot_clusters_113],"111	    ax.tick_params(width = 2)
112	    
113	plot_clusters(data, preds,n_clusters)
114	
",EDA
2843,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_58 -----select---->data_120_intermediate_1],"data_165_intermediate_4 -----data---->data_165
data_165_intermediate_4 -----data---->data_165
data_165_intermediate_4 -----data---->data_165
data_165_intermediate_4 -----select---->data_165
data_165_intermediate_4 -----mean---->data_165",DATA_TRANSFORM
2844,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[a_72 -----a---->q1_dict_78],"77	
78	q1_dict = {
79	'number of missing values': a ,# letter here,
80	'the mean 5k time in minutes': c, # letter here,    
",EDA
2845,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[a_72 -----reassign---->a_154],"152	
153	# options
154	a = 'We should always use normalizing'
155	b = 'We should always scale our variables between 0 and 1.'
",NOT_INTERESTING
2846,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[b_73 -----b---->q1_dict_78],"80	'the mean 5k time in minutes': c, # letter here,    
81	'the mean test score as a raw value': e, # letter here,
82	'number of individuals in the dataset': b# letter here
83	}
",DATA_TRANSFORM
2847,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[b_73 -----reassign---->b_155],"153	# options
154	a = 'We should always use normalizing'
155	b = 'We should always scale our variables between 0 and 1.'
156	c = 'Variable scale will frequently influence your results, so it is important to standardize for all of these algorithms.'
",ENVIRONMENT
2848,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[c_74 -----c---->q1_dict_78],"78	q1_dict = {
79	'number of missing values': a ,# letter here,
80	'the mean 5k time in minutes': c, # letter here,    
81	'the mean test score as a raw value': e, # letter here,
",DATA_TRANSFORM
2849,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[c_74 -----reassign---->c_156],"154	a = 'We should always use normalizing'
155	b = 'We should always scale our variables between 0 and 1.'
156	c = 'Variable scale will frequently influence your results, so it is important to standardize for all of these algorithms.'
157	d = 'Scaling will not change the results of your output.'
",ENVIRONMENT
2850,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[d_75 -----reassign---->d_157],"155	b = 'We should always scale our variables between 0 and 1.'
156	c = 'Variable scale will frequently influence your results, so it is important to standardize for all of these algorithms.'
157	d = 'Scaling will not change the results of your output.'
158	
",NOT_INTERESTING
2851,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[e_76 -----e---->q1_dict_78],"79	'number of missing values': a ,# letter here,
80	'the mean 5k time in minutes': c, # letter here,    
81	'the mean test score as a raw value': e, # letter here,
82	'number of individuals in the dataset': b# letter here
",EDA
2852,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[q1_dict_78 -----q1 dict---->t_86],"84	
85	# check your answer against ours here
86	t.check_q1(q1_dict)
87	
",MODEL_EVALUATION
2853,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[tests2 -----check q1---->t_86],"84	
85	# check your answer against ours here
86	t.check_q1(q1_dict)
87	
",MODEL_EVALUATION
2854,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[tests2 -----check q5---->t_163],"161	
162	# check your answer against ours here
163	t.check_q5(best_option)
164	
",MODEL_EVALUATION
2855,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[model_88 -----fit---->model_89],"87	
88	model = KMeans(2) # instantiate a model with two centers
89	model.fit(data)
90	preds = model.predict(data) # fit and predict
",MODEL_TRAIN
2856,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[sklearn.cluster -----kmeans---->model_88],"86	t.check_q1(q1_dict)
87	
88	model = KMeans(2) # instantiate a model with two centers
89	model.fit(data)
",ENVIRONMENT
2857,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[sklearn.cluster -----kmeans---->model_127],"125	data2.head()
126	
127	model = KMeans(2) # instantiate a model with two centers
128	model.fit(data2)# fit and predict
",MODEL_TRAIN
2858,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[sklearn.cluster -----kmeans---->model_170],"168	
169	data3=data.drop(['5k_Time','Raw_Test_Score','5k_time_sec'],axis=1)
170	model = KMeans(2) # instantiate a model with two centers
171	model.fit(data3)# fit and predict
",ENVIRONMENT
2859,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[model_89 -----predict---->preds_90],"88	model = KMeans(2) # instantiate a model with two centers
89	model.fit(data)
90	preds = model.predict(data) # fit and predict
91	preds
",MODEL_EVALUATION
2860,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[model_89 -----reassign---->model_127],"125	data2.head()
126	
127	model = KMeans(2) # instantiate a model with two centers
128	model.fit(data2)# fit and predict
",MODEL_TRAIN
2861,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[preds_90 -----preds---->preds_91],"89	model.fit(data)
90	preds = model.predict(data) # fit and predict
91	preds
92	
",DATA_TRANSFORM
2862,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[preds_91 -----preds---->plot_clusters_113],"111	    ax.tick_params(width = 2)
112	    
113	plot_clusters(data, preds,n_clusters)
114	
",EDA
2863,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[preds_91 -----reassign---->preds_129],"127	model = KMeans(2) # instantiate a model with two centers
128	model.fit(data2)# fit and predict
129	preds =model.predict(data2)
130	
",NOT_INTERESTING
2864,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[n_clusters_94 -----n clusters---->plot_clusters_113],"111	    ax.tick_params(width = 2)
112	    
113	plot_clusters(data, preds,n_clusters)
114	
",EDA
2865,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[n_clusters_94 -----n clusters---->plot_clusters2_151],"149	    ax.tick_params(width = 2)
150	    
151	plot_clusters2(data2, preds,n_clusters)
152	
",HYPERPARAMETER_TUNING
2866,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[n_clusters_94 -----n clusters---->plot_clusters2_195],"193	    ax.tick_params(width = 2)
194	    
195	plot_clusters2(data3, preds,n_clusters)
196	
",HYPERPARAMETER_TUNING
2867,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_120 -----select---->data_121_intermediate_1],"data_120_intermediate_4 -----div---->data_120
data_165_intermediate_4 -----select---->data_165
data_165_intermediate_4 -----mult---->data_165",DATA_TRANSFORM
2868,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_121 -----drop---->data2_122],"120	data['test_scaled'] = (data['Raw_Test_Score']  - data['Raw_Test_Score'].mean() )/data['Raw_Test_Score'].std()# standardized test scores
121	data['5k_time_sec'] = data['5k_Time']*60.0  # times in seconds
122	data2=data.drop(['Raw_Test_Score','5k_Time'],axis=1)
123	data2.describe()
",DATA_TRANSFORM
2869,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_121 -----select---->data_165_intermediate_1],"data_121_intermediate_1 -----mult---->data_121
data_165_intermediate_4 -----drop---->data_165
data_165_intermediate_4 -----select---->data_165
data_165_intermediate_4 -----mean---->data_165",DATA_TRANSFORM
2870,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data2_122 -----describe---->data2_123],"121	data['5k_time_sec'] = data['5k_Time']*60.0  # times in seconds
122	data2=data.drop(['Raw_Test_Score','5k_Time'],axis=1)
123	data2.describe()
124	
",EDA
2871,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data2_123 -----head---->data2_125],"123	data2.describe()
124	
125	data2.head()
126	
",EDA
2872,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data2_125 -----data2---->model_128],"126	
127	model = KMeans(2) # instantiate a model with two centers
128	model.fit(data2)# fit and predict
129	preds =model.predict(data2)
",MODEL_TRAIN
2873,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data2_125 -----data2---->preds_129],"127	model = KMeans(2) # instantiate a model with two centers
128	model.fit(data2)# fit and predict
129	preds =model.predict(data2)
130	
",MODEL_EVALUATION
2874,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data2_125 -----data2---->plot_clusters2_151],"149	    ax.tick_params(width = 2)
150	    
151	plot_clusters2(data2, preds,n_clusters)
152	
",EDA
2875,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[model_127 -----fit---->model_128],"126	
127	model = KMeans(2) # instantiate a model with two centers
128	model.fit(data2)# fit and predict
129	preds =model.predict(data2)
",MODEL_TRAIN
2876,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[model_128 -----predict---->preds_129],"127	model = KMeans(2) # instantiate a model with two centers
128	model.fit(data2)# fit and predict
129	preds =model.predict(data2)
130	
",MODEL_EVALUATION
2877,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[model_128 -----reassign---->model_170],"168	
169	data3=data.drop(['5k_Time','Raw_Test_Score','5k_time_sec'],axis=1)
170	model = KMeans(2) # instantiate a model with two centers
171	model.fit(data3)# fit and predict
",MODEL_TRAIN
2878,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[preds_129 -----preds---->plot_clusters2_151],"149	    ax.tick_params(width = 2)
150	    
151	plot_clusters2(data2, preds,n_clusters)
152	
",EDA
2879,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[preds_129 -----reassign---->preds_172],"170	model = KMeans(2) # instantiate a model with two centers
171	model.fit(data3)# fit and predict
172	preds =model.predict(data3)
173	data3.describe()
",NOT_INTERESTING
2880,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[plot_clusters2_151 -----plot clusters2---->plot_clusters2_195],"193	    ax.tick_params(width = 2)
194	    
195	plot_clusters2(data3, preds,n_clusters)
196	
",EDA
2881,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[c_156 -----c---->best_option_159],"157	d = 'Scaling will not change the results of your output.'
158	
159	best_option = c # best answer variable here
160	
",ENVIRONMENT
2882,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[best_option_159 -----best option---->t_163],"161	
162	# check your answer against ours here
163	t.check_q5(best_option)
164	
",MODEL_EVALUATION
2883,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_165 -----head---->data_167],"165	data['5k_time_scaled']=(data['5k_time_sec']  - data['5k_time_sec'].mean() )/data['5k_time_sec'].std()
166	
167	data.head()
168	
",DATA_TRANSFORM
2884,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_167 -----drop---->data3_169],"167	data.head()
168	
169	data3=data.drop(['5k_Time','Raw_Test_Score','5k_time_sec'],axis=1)
170	model = KMeans(2) # instantiate a model with two centers
",DATA_TRANSFORM
2885,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data3_169 -----data3---->model_171],"169	data3=data.drop(['5k_Time','Raw_Test_Score','5k_time_sec'],axis=1)
170	model = KMeans(2) # instantiate a model with two centers
171	model.fit(data3)# fit and predict
172	preds =model.predict(data3)
",MODEL_TRAIN
2886,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data3_169 -----data3---->preds_172],"170	model = KMeans(2) # instantiate a model with two centers
171	model.fit(data3)# fit and predict
172	preds =model.predict(data3)
173	data3.describe()
",MODEL_EVALUATION
2887,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data3_169 -----describe---->data3_173],"171	model.fit(data3)# fit and predict
172	preds =model.predict(data3)
173	data3.describe()
174	
",EDA
2888,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[model_170 -----fit---->model_171],"169	data3=data.drop(['5k_Time','Raw_Test_Score','5k_time_sec'],axis=1)
170	model = KMeans(2) # instantiate a model with two centers
171	model.fit(data3)# fit and predict
172	preds =model.predict(data3)
",MODEL_TRAIN
2889,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[model_171 -----predict---->preds_172],"170	model = KMeans(2) # instantiate a model with two centers
171	model.fit(data3)# fit and predict
172	preds =model.predict(data3)
173	data3.describe()
",MODEL_EVALUATION
2890,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[preds_172 -----preds---->plot_clusters2_195],"193	    ax.tick_params(width = 2)
194	    
195	plot_clusters2(data3, preds,n_clusters)
196	
",EDA
2891,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data3_173 -----data3---->plot_clusters2_195],"193	    ax.tick_params(width = 2)
194	    
195	plot_clusters2(data3, preds,n_clusters)
196	
",EDA
2892,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_120_intermediate_1 -----mean---->data_120_intermediate_2],"data_58 -----select---->data_120_intermediate_1
data_165_intermediate_4 -----mean---->data_165
data_165_intermediate_4 -----sub---->data_165",EDA
2893,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_120_intermediate_2 -----sub---->data_120_intermediate_3],"data_120_intermediate_1 -----mean---->data_120_intermediate_2
data_165_intermediate_4 -----sub---->data_165
data_165_intermediate_4 -----std---->data_165",DATA_TRANSFORM
2894,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_120_intermediate_3 -----std---->data_120_intermediate_4],"data_120_intermediate_2 -----sub---->data_120_intermediate_3
data_165_intermediate_4 -----std---->data_165
data_165_intermediate_4 -----div---->data_165",DATA_TRANSFORM
2895,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_120_intermediate_4 -----div---->data_120],"data_120_intermediate_3 -----std---->data_120_intermediate_4
data_165_intermediate_4 -----div---->data_165
data_165_intermediate_4 -----select---->data_165",DATA_TRANSFORM
2896,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_121_intermediate_1 -----mult---->data_121],"data_120 -----select---->data_121_intermediate_1
data_165_intermediate_4 -----mult---->data_165
data_165_intermediate_4 -----drop---->data_165
data_165_intermediate_4 -----select---->data_165",DATA_TRANSFORM
2897,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_165_intermediate_1 -----mean---->data_165_intermediate_2],"data_121 -----select---->data_165_intermediate_1
data_165_intermediate_4 -----mean---->data_165
data_165_intermediate_4 -----sub---->data_165",DATA_TRANSFORM
2898,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_165_intermediate_2 -----sub---->data_165_intermediate_3],"data_165_intermediate_1 -----mean---->data_165_intermediate_2
data_165_intermediate_4 -----sub---->data_165
data_165_intermediate_4 -----std---->data_165",DATA_TRANSFORM
2899,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_165_intermediate_3 -----std---->data_165_intermediate_4],"data_165_intermediate_2 -----sub---->data_165_intermediate_3
data_165_intermediate_4 -----std---->data_165
data_165_intermediate_4 -----div---->data_165",DATA_TRANSFORM
2900,0001799bbce20ac730077e1ed35b5e8f0d60c07c.execution_graph,[data_165_intermediate_4 -----div---->data_165],"data_165_intermediate_3 -----std---->data_165_intermediate_4
data_165_intermediate_4 -----div---->data_165
data_165_intermediate_4 -----head---->data_165",DATA_TRANSFORM
2901,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[pandas -----series---->units_of_assessment_9],"7	from tqdm import tqdm
8	
9	units_of_assessment = pd.Series(['Clinical Medicine', 'Public Health, Health Services and Primary Care',
10	        'Allied Health Professions, Dentistry, Nursing and Pharmacy',
",DATA_TRANSFORM
2902,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[pandas -----series---->uoa_report_count_30],"28	        'Communication, Cultural and Media Studies, Library and Information Management'])
29	
30	uoa_report_count = pd.Series([383,163,343,317,257,126,171,125,181,210,251,120,126,51,240,
31	            142,235,98,411,216,166,187,97,80,215,122,69,190,281,263,59,98,75,231,194,159])
",DATA_TRANSFORM
2903,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[pandas -----data frame---->query_df_33],"31	            142,235,98,411,216,166,187,97,80,215,122,69,190,281,263,59,98,75,231,194,159])
32	
33	query_df = pd.DataFrame({'unit of assessment': units_of_assessment, 'number of studies': uoa_report_count})
34	
",DATA_TRANSFORM
2904,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[query_df_33 -----select---->query_df_45_intermediate_1],"pandas -----data frame---->query_df_33
plt_62_intermediate_1 -----select---->plt_62
plt_62_intermediate_1 -----div---->plt_62",DATA_TRANSFORM
2905,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[query_uoa_37 -----loop---->query_uoa_44_intermediate_1],"loop_query_uoa_37_branch_query_uoa_42_query_uoa_44 -----restart_loop---->query_uoa_37
plt_62_intermediate_1 -----loop---->plt_62
plt_62_intermediate_1 -----append---->plt_62
plt_62_intermediate_1 -----append---->plt_62",NOT_INTERESTING
2906,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[query_uoa_37 -----append---->query_uoa_42],"40	    search_hit = html.fromstring(data.content).xpath('//span[@id=\""MainContent_lblTagHits\""]/text()')
41	    if search_hit == []:
42	        query_uoa.append(0)
43	    else:
",DATA_TRANSFORM
2907,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[query_uoa_44 -----end_if---->branch_query_uoa_42_query_uoa_44],"
",DATA_IMPORT_EXTRACTION
2908,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[data_39 -----data---->search_hit_40],"38	for uoa in tqdm(range(1,37)):
39	    data = requests.get('https://impact.ref.ac.uk/casestudies/Results.aspx?UoA='+str(uoa)+'&val='+'\""'+query+'\""')
40	    search_hit = html.fromstring(data.content).xpath('//span[@id=\""MainContent_lblTagHits\""]/text()')
41	    if search_hit == []:
",DATA_IMPORT_EXTRACTION
2909,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[requests -----get---->data_39],"37	query_uoa = []
38	for uoa in tqdm(range(1,37)):
39	    data = requests.get('https://impact.ref.ac.uk/casestudies/Results.aspx?UoA='+str(uoa)+'&val='+'\""'+query+'\""')
40	    search_hit = html.fromstring(data.content).xpath('//span[@id=\""MainContent_lblTagHits\""]/text()')
",MODEL_TRAIN
2910,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[lxml -----html---->search_hit_40_intermediate_1],"plt_62_intermediate_1 -----html---->plt_62
plt_62_intermediate_1 -----fromstring---->plt_62",DATA_IMPORT_EXTRACTION
2911,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[query_uoa_42 -----end_if---->branch_query_uoa_42_query_uoa_44],"
",DATA_TRANSFORM
2912,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[branch_query_uoa_42_query_uoa_44 -----end_loop---->loop_query_uoa_37_branch_query_uoa_42_query_uoa_44],"
",DATA_IMPORT_EXTRACTION
2913,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[loop_query_uoa_37_branch_query_uoa_42_query_uoa_44 -----restart_loop---->query_uoa_37],"
",NOT_INTERESTING
2914,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[loop_query_uoa_37_branch_query_uoa_42_query_uoa_44 -----div---->query_df_45],"43	    else:
44	        query_uoa.append(int(search_hit[0]))
45	query_df['%coverage'] = query_uoa/query_df['number of studies']*100
46	
",DATA_TRANSFORM
2915,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[query_df_45 -----select---->y_axis_48],"46	
47	x_pos = np.arange(len(query_df['unit of assessment']))
48	y_axis = query_df['%coverage']
49	color = ['orange']*9 + ['purple']*8 + ['darkturquoise']*10+ ['red']*9
",DATA_TRANSFORM
2916,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[query_df_45 -----query df---->plt_56],"54	plt.figure(figsize=(10,10))
55	plt.bar(x_pos, y_axis, color=color, align='center')
56	plt.xticks(x_pos, query_df['unit of assessment'], rotation='vertical')
57	plt.ylabel('%coverage')
",EDA
2917,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[x_pos_47 -----x pos---->plt_55],"53	panel_four = mpatches.Patch(color='red', label='Humanities')
54	plt.figure(figsize=(10,10))
55	plt.bar(x_pos, y_axis, color=color, align='center')
56	plt.xticks(x_pos, query_df['unit of assessment'], rotation='vertical')
",EDA
2918,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[x_pos_47 -----x pos---->plt_56],"54	plt.figure(figsize=(10,10))
55	plt.bar(x_pos, y_axis, color=color, align='center')
56	plt.xticks(x_pos, query_df['unit of assessment'], rotation='vertical')
57	plt.ylabel('%coverage')
",EDA
2919,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[numpy -----arange---->x_pos_47],"45	query_df['%coverage'] = query_uoa/query_df['number of studies']*100
46	
47	x_pos = np.arange(len(query_df['unit of assessment']))
48	y_axis = query_df['%coverage']
",EDA
2920,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[y_axis_48 -----y axis---->plt_55],"53	panel_four = mpatches.Patch(color='red', label='Humanities')
54	plt.figure(figsize=(10,10))
55	plt.bar(x_pos, y_axis, color=color, align='center')
56	plt.xticks(x_pos, query_df['unit of assessment'], rotation='vertical')
",EDA
2921,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib.patches -----patch---->panel_one_50],"48	y_axis = query_df['%coverage']
49	color = ['orange']*9 + ['purple']*8 + ['darkturquoise']*10+ ['red']*9
50	panel_one = mpatches.Patch(color='orange', label='Medicine & Natural Sciences')
51	panel_two = mpatches.Patch(color='purple', label='Maths & Engineering')
",EDA
2922,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib.patches -----patch---->panel_two_51],"49	color = ['orange']*9 + ['purple']*8 + ['darkturquoise']*10+ ['red']*9
50	panel_one = mpatches.Patch(color='orange', label='Medicine & Natural Sciences')
51	panel_two = mpatches.Patch(color='purple', label='Maths & Engineering')
52	panel_three = mpatches.Patch(color='darkturquoise', label='Social Sciences')
",EDA
2923,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib.patches -----patch---->panel_three_52],"50	panel_one = mpatches.Patch(color='orange', label='Medicine & Natural Sciences')
51	panel_two = mpatches.Patch(color='purple', label='Maths & Engineering')
52	panel_three = mpatches.Patch(color='darkturquoise', label='Social Sciences')
53	panel_four = mpatches.Patch(color='red', label='Humanities')
",EDA
2924,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib.patches -----patch---->panel_four_53],"51	panel_two = mpatches.Patch(color='purple', label='Maths & Engineering')
52	panel_three = mpatches.Patch(color='darkturquoise', label='Social Sciences')
53	panel_four = mpatches.Patch(color='red', label='Humanities')
54	plt.figure(figsize=(10,10))
",EDA
2925,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib -----plt---->plt_54_intermediate_1],"plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----figure---->plt_62",EDA
2926,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib -----plt---->plt_55_intermediate_1],"plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----bar---->plt_62",EDA
2927,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib -----plt---->plt_56_intermediate_1],"plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----xticks---->plt_62",EDA
2928,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib -----plt---->plt_57_intermediate_1],"plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----ylabel---->plt_62",EDA
2929,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib -----plt---->plt_58_intermediate_1],"plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----title---->plt_62",EDA
2930,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib -----plt---->plt_59_intermediate_1],"plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----axis---->plt_62",EDA
2931,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib -----plt---->plt_60_intermediate_1],"plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----legend---->plt_62",EDA
2932,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[matplotlib -----plt---->plt_62_intermediate_1],"plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----plt---->plt_62
plt_62_intermediate_1 -----show---->plt_62",EDA
2933,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[query_df_45_intermediate_1 -----div---->query_df_45],"query_df_33 -----select---->query_df_45_intermediate_1
plt_62_intermediate_1 -----div---->plt_62
plt_62_intermediate_1 -----select---->plt_62
plt_62_intermediate_1 -----query df---->plt_62",DATA_TRANSFORM
2934,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[query_uoa_44_intermediate_1 -----append---->query_uoa_44],"query_uoa_37 -----loop---->query_uoa_44_intermediate_1
plt_62_intermediate_1 -----append---->plt_62
plt_62_intermediate_1 -----end_if---->plt_62",DATA_TRANSFORM
2935,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[search_hit_40_intermediate_1 -----fromstring---->search_hit_40_intermediate_2],"lxml -----html---->search_hit_40_intermediate_1
plt_62_intermediate_1 -----fromstring---->plt_62
plt_62_intermediate_1 -----xpath---->plt_62",DATA_IMPORT_EXTRACTION
2936,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[search_hit_40_intermediate_2 -----xpath---->search_hit_40],"search_hit_40_intermediate_1 -----fromstring---->search_hit_40_intermediate_2
plt_62_intermediate_1 -----xpath---->plt_62",DATA_IMPORT_EXTRACTION
2937,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[plt_54_intermediate_1 -----figure---->plt_54],"matplotlib -----plt---->plt_54_intermediate_1
plt_62_intermediate_1 -----figure---->plt_62",EDA
2938,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[plt_55_intermediate_1 -----bar---->plt_55],"matplotlib -----plt---->plt_55_intermediate_1
plt_62_intermediate_1 -----bar---->plt_62",EDA
2939,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[plt_56_intermediate_1 -----xticks---->plt_56],"matplotlib -----plt---->plt_56_intermediate_1
plt_62_intermediate_1 -----xticks---->plt_62",EDA
2940,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[plt_57_intermediate_1 -----ylabel---->plt_57],"matplotlib -----plt---->plt_57_intermediate_1
plt_62_intermediate_1 -----ylabel---->plt_62",EDA
2941,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[plt_58_intermediate_1 -----title---->plt_58],"matplotlib -----plt---->plt_58_intermediate_1
plt_62_intermediate_1 -----title---->plt_62",EDA
2942,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[plt_59_intermediate_1 -----axis---->plt_59],"matplotlib -----plt---->plt_59_intermediate_1
plt_62_intermediate_1 -----axis---->plt_62",EDA
2943,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[plt_60_intermediate_1 -----legend---->plt_60],"matplotlib -----plt---->plt_60_intermediate_1
plt_62_intermediate_1 -----legend---->plt_62",EDA
2944,000179ff24ca7c2e7cc148a6da67ab2c63114e42.execution_graph,[plt_62_intermediate_1 -----show---->plt_62],"matplotlib -----plt---->plt_62_intermediate_1
plt_62_intermediate_1 -----show---->plt_62",EDA
2945,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[N_6 -----n---->y_8],"6	N=101
7	L=1.0
8	y=np.linspace(-L,L,N)
9	dy=2*L/(N-1)
",ENVIRONMENT
2946,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[N_6 -----sub---->dy_9],"7	L=1.0
8	y=np.linspace(-L,L,N)
9	dy=2*L/(N-1)
10	
",ENVIRONMENT
2947,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[N_6 -----n---->D2_v_24],"22	    D2_v[0,0], D2_v[-1,-1] = (-7/4)/dy**2, (-7/4)/dy**2
23	    return D2_v
24	D2_v(N,dy)
25	
",DATA_TRANSFORM
2948,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[N_6 -----n---->D4_v_39],"37	    D4_v[0,0], D4_v[1,0], D4_v[-2,-1], D4_v[-1,-1]= 5/dy**4, (-15/4)/dy**4, (-15/4)/dy**4, 5/dy**4
38	    return D4_v
39	D4_v(N,dy)
40	
",ENVIRONMENT
2949,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[N_6 -----n---->L_v_58],"56	    return L
57	y2=y[2:-2]
58	L_v(N,y2,dy,500,0.3)
59	
",ENVIRONMENT
2950,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[L_7 -----l---->y_8],"6	N=101
7	L=1.0
8	y=np.linspace(-L,L,N)
9	dy=2*L/(N-1)
",ENVIRONMENT
2951,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[L_7 -----mult---->dy_9],"7	L=1.0
8	y=np.linspace(-L,L,N)
9	dy=2*L/(N-1)
10	
",ENVIRONMENT
2952,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[L_7 -----l---->pyplot_127],"125	            color='C16', linestyle='-',linewidth=3)
126	pyplot.legend(loc='upper left')
127	pyplot.xlim(-L,L)
128	pyplot.ylim(-0.15,0.45)
",EDA
2953,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[y_8 -----slice---->y2_57],"55	    L=np.dot(Dinv,(-1j*alpha*np.dot(U,(D2v-A2))+D2U*alpha*1j+(D4v-2*(alpha**2)*D2v+A4)/R))
56	    return L
57	y2=y[2:-2]
58	L_v(N,y2,dy,500,0.3)
",DATA_TRANSFORM
2954,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[y_8 -----slice---->y2_60],"58	L_v(N,y2,dy,500,0.3)
59	
60	y2=y[2:-2]
61	v0=0.02*(1+np.cos(np.pi*y2))
",DATA_TRANSFORM
2955,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[y_8 -----y---->pyplot_124],"122	pyplot.xlabel('Position')
123	pyplot.ylabel('Amplitude de la Pertubation')
124	pyplot.plot(y,vh_p, label='Perturbation',
125	            color='C16', linestyle='-',linewidth=3)
",EDA
2956,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[numpy -----linspace---->y_8],"6	N=101
7	L=1.0
8	y=np.linspace(-L,L,N)
9	dy=2*L/(N-1)
",DATA_TRANSFORM
2957,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[numpy -----empty---->v_11],"9	dy=2*L/(N-1)
10	
11	v=np.empty(N-4)
12	
",DATA_TRANSFORM
2958,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[numpy -----cos---->v0_61],"59	
60	y2=y[2:-2]
61	v0=0.02*(1+np.cos(np.pi*y2))
62	V0=v0
",DATA_TRANSFORM
2959,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[numpy -----linalg---->Dec_106_intermediate_1],"pyplot_151_intermediate_1 -----linspace---->pyplot_151
pyplot_151_intermediate_1 -----empty---->pyplot_151
pyplot_151_intermediate_1 -----cos---->pyplot_151
pyplot_151_intermediate_1 -----linalg---->pyplot_151
pyplot_151_intermediate_1 -----argmax---->pyplot_151
pyplot_151_intermediate_1 -----transpose---->pyplot_151
pyplot_151_intermediate_1 -----empty---->pyplot_151
pyplot_151_intermediate_1 -----real---->pyplot_151
pyplot_151_intermediate_1 -----insert---->pyplot_151
pyplot_151_intermediate_1 -----insert---->pyplot_151
pyplot_151_intermediate_1 -----svd---->pyplot_151",DATA_TRANSFORM
2960,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[numpy -----argmax---->C_107],"105	
106	Dec=np.linalg.svd(propa(nt,alpha))
107	C=np.argmax(Dec[1]) #On repère la colonne de vh liée à cette valeur singulière
108	vh=np.transpose(np.conj(Dec[2])) #On rétablit vh pour sa future utilisation
",DATA_TRANSFORM
2961,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[numpy -----transpose---->vh_108],"106	Dec=np.linalg.svd(propa(nt,alpha))
107	C=np.argmax(Dec[1]) #On repère la colonne de vh liée à cette valeur singulière
108	vh=np.transpose(np.conj(Dec[2])) #On rétablit vh pour sa future utilisation
109	vh_p=np.empty(N-4)
",DATA_TRANSFORM
2962,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[numpy -----empty---->vh_p_109],"107	C=np.argmax(Dec[1]) #On repère la colonne de vh liée à cette valeur singulière
108	vh=np.transpose(np.conj(Dec[2])) #On rétablit vh pour sa future utilisation
109	vh_p=np.empty(N-4)
110	for i in range(0,N-4): #Nous sélectionnons le valeurs réelles du vecteur d'entrée
",DATA_TRANSFORM
2963,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[numpy -----real---->vh_p_111],"109	vh_p=np.empty(N-4)
110	for i in range(0,N-4): #Nous sélectionnons le valeurs réelles du vecteur d'entrée
111	    vh_p[i]=np.real(vh[i,C])
112	
",DATA_TRANSFORM
2964,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[numpy -----insert---->vh_p_116],"114	v1=1/4*v[2]
115	v99=1/4*v[1]
116	vh_p=np.insert(vh_p,0,[0,v1],axis=0)
117	vh_p=np.insert(vh_p,N-2,[v99,0],axis=0)
",DATA_TRANSFORM
2965,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[numpy -----insert---->vh_p_117],"115	v99=1/4*v[1]
116	vh_p=np.insert(vh_p,0,[0,v1],axis=0)
117	vh_p=np.insert(vh_p,N-2,[v99,0],axis=0)
118	
",DATA_TRANSFORM
2966,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[dy_9 -----dy---->D2_v_24],"22	    D2_v[0,0], D2_v[-1,-1] = (-7/4)/dy**2, (-7/4)/dy**2
23	    return D2_v
24	D2_v(N,dy)
25	
",DATA_TRANSFORM
2967,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[dy_9 -----dy---->D4_v_39],"37	    D4_v[0,0], D4_v[1,0], D4_v[-2,-1], D4_v[-1,-1]= 5/dy**4, (-15/4)/dy**4, (-15/4)/dy**4, 5/dy**4
38	    return D4_v
39	D4_v(N,dy)
40	
",DATA_TRANSFORM
2968,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[dy_9 -----dy---->L_v_58],"56	    return L
57	y2=y[2:-2]
58	L_v(N,y2,dy,500,0.3)
59	
",DATA_TRANSFORM
2969,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[v_11 -----select---->v1_114_intermediate_1],"numpy -----empty---->v_11
pyplot_151_intermediate_1 -----select---->pyplot_151
pyplot_151_intermediate_1 -----select---->pyplot_151
pyplot_151_intermediate_1 -----mult---->pyplot_151",DATA_TRANSFORM
2970,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[v_11 -----select---->v99_115_intermediate_1],"numpy -----empty---->v_11
pyplot_151_intermediate_1 -----select---->pyplot_151
pyplot_151_intermediate_1 -----select---->pyplot_151
pyplot_151_intermediate_1 -----mult---->pyplot_151",DATA_TRANSFORM
2971,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[y2_57 -----y2---->L_v_58],"56	    return L
57	y2=y[2:-2]
58	L_v(N,y2,dy,500,0.3)
59	
",DATA_TRANSFORM
2972,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[y2_57 -----reassign---->y2_60],"58	L_v(N,y2,dy,500,0.3)
59	
60	y2=y[2:-2]
61	v0=0.02*(1+np.cos(np.pi*y2))
",DATA_TRANSFORM
2973,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[v0_61 -----v0---->V0_62],"60	y2=y[2:-2]
61	v0=0.02*(1+np.cos(np.pi*y2))
62	V0=v0
63	R, alpha = 500, 0.3
",ENVIRONMENT
2974,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[nt_65 -----nt---->check_answer_97],"95	        print(""Error"")
96	
97	check_answer(nt,0.5,8)
98	
",MODEL_EVALUATION
2975,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[Dec_106 -----dec---->C_107],"105	
106	Dec=np.linalg.svd(propa(nt,alpha))
107	C=np.argmax(Dec[1]) #On repère la colonne de vh liée à cette valeur singulière
108	vh=np.transpose(np.conj(Dec[2])) #On rétablit vh pour sa future utilisation
",DATA_TRANSFORM
2976,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[vh_108 -----vh---->vh_p_111],"109	vh_p=np.empty(N-4)
110	for i in range(0,N-4): #Nous sélectionnons le valeurs réelles du vecteur d'entrée
111	    vh_p[i]=np.real(vh[i,C])
112	
",DATA_TRANSFORM
2977,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[vh_p_109 -----loop---->vh_p_111],"
",DATA_TRANSFORM
2978,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[vh_p_111 -----end_loop---->loop_vh_p_109_vh_p_111],"
",DATA_TRANSFORM
2979,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[loop_vh_p_109_vh_p_111 -----restart_loop---->vh_p_109],"
",HYPERPARAMETER_TUNING
2980,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[loop_vh_p_109_vh_p_111 -----vh p---->vh_p_116],"114	v1=1/4*v[2]
115	v99=1/4*v[1]
116	vh_p=np.insert(vh_p,0,[0,v1],axis=0)
117	vh_p=np.insert(vh_p,N-2,[v99,0],axis=0)
",DATA_TRANSFORM
2981,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[vh_p_116 -----vh p---->vh_p_117],"115	v99=1/4*v[1]
116	vh_p=np.insert(vh_p,0,[0,v1],axis=0)
117	vh_p=np.insert(vh_p,N-2,[v99,0],axis=0)
118	
",DATA_TRANSFORM
2982,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[vh_p_117 -----vh p---->pyplot_124],"122	pyplot.xlabel('Position')
123	pyplot.ylabel('Amplitude de la Pertubation')
124	pyplot.plot(y,vh_p, label='Perturbation',
125	            color='C16', linestyle='-',linewidth=3)
",EDA
2983,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_120_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----figure---->pyplot_151",EDA
2984,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_121_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----title---->pyplot_151",EDA
2985,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_122_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----xlabel---->pyplot_151",EDA
2986,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_123_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----ylabel---->pyplot_151",EDA
2987,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_124_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----plot---->pyplot_151",EDA
2988,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_126_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----legend---->pyplot_151",EDA
2989,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_127_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----xlim---->pyplot_151",EDA
2990,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_128_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----ylim---->pyplot_151",EDA
2991,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_129_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----grid---->pyplot_151",EDA
2992,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_143_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----figure---->pyplot_151",EDA
2993,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_144_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----title---->pyplot_151",EDA
2994,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_145_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----xlabel---->pyplot_151",EDA
2995,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_146_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----ylabel---->pyplot_151",EDA
2996,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_147_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----plot---->pyplot_151",EDA
2997,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_148_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----xlim---->pyplot_151",EDA
2998,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_149_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----ylim---->pyplot_151",EDA
2999,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_150_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----legend---->pyplot_151",EDA
3000,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[matplotlib -----pyplot---->pyplot_151_intermediate_1],"pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----pyplot---->pyplot_151
pyplot_151_intermediate_1 -----grid---->pyplot_151",EDA
3001,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[a_141 -----a---->pyplot_147],"145	pyplot.xlabel('\alpha')
146	pyplot.ylabel('Valeur de l\'Amplification')
147	pyplot.plot(a[1],a[2],label='Amplification',color='C16', linestyle='-',linewidth=3)
148	pyplot.xlim(0,5.0)
",EDA
3002,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[Dec_106_intermediate_1 -----svd---->Dec_106],"numpy -----linalg---->Dec_106_intermediate_1
pyplot_151_intermediate_1 -----svd---->pyplot_151
pyplot_151_intermediate_1 -----dec---->pyplot_151",DATA_TRANSFORM
3003,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[v1_114_intermediate_1 -----mult---->v1_114],"v_11 -----select---->v1_114_intermediate_1
pyplot_151_intermediate_1 -----mult---->pyplot_151",MODEL_TRAIN
3004,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[v99_115_intermediate_1 -----mult---->v99_115],"v_11 -----select---->v99_115_intermediate_1
pyplot_151_intermediate_1 -----mult---->pyplot_151",DATA_TRANSFORM
3005,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_120_intermediate_1 -----figure---->pyplot_120],"matplotlib -----pyplot---->pyplot_120_intermediate_1
pyplot_151_intermediate_1 -----figure---->pyplot_151",EDA
3006,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_121_intermediate_1 -----title---->pyplot_121],"matplotlib -----pyplot---->pyplot_121_intermediate_1
pyplot_151_intermediate_1 -----title---->pyplot_151",EDA
3007,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_122_intermediate_1 -----xlabel---->pyplot_122],"matplotlib -----pyplot---->pyplot_122_intermediate_1
pyplot_151_intermediate_1 -----xlabel---->pyplot_151",EDA
3008,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_123_intermediate_1 -----ylabel---->pyplot_123],"matplotlib -----pyplot---->pyplot_123_intermediate_1
pyplot_151_intermediate_1 -----ylabel---->pyplot_151",EDA
3009,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_124_intermediate_1 -----plot---->pyplot_124],"matplotlib -----pyplot---->pyplot_124_intermediate_1
pyplot_151_intermediate_1 -----plot---->pyplot_151",EDA
3010,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_126_intermediate_1 -----legend---->pyplot_126],"matplotlib -----pyplot---->pyplot_126_intermediate_1
pyplot_151_intermediate_1 -----legend---->pyplot_151",EDA
3011,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_127_intermediate_1 -----xlim---->pyplot_127],"matplotlib -----pyplot---->pyplot_127_intermediate_1
pyplot_151_intermediate_1 -----xlim---->pyplot_151",EDA
3012,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_128_intermediate_1 -----ylim---->pyplot_128],"matplotlib -----pyplot---->pyplot_128_intermediate_1
pyplot_151_intermediate_1 -----ylim---->pyplot_151",EDA
3013,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_129_intermediate_1 -----grid---->pyplot_129],"matplotlib -----pyplot---->pyplot_129_intermediate_1
pyplot_151_intermediate_1 -----grid---->pyplot_151",EDA
3014,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_143_intermediate_1 -----figure---->pyplot_143],"matplotlib -----pyplot---->pyplot_143_intermediate_1
pyplot_151_intermediate_1 -----figure---->pyplot_151",EDA
3015,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_144_intermediate_1 -----title---->pyplot_144],"matplotlib -----pyplot---->pyplot_144_intermediate_1
pyplot_151_intermediate_1 -----title---->pyplot_151",EDA
3016,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_145_intermediate_1 -----xlabel---->pyplot_145],"matplotlib -----pyplot---->pyplot_145_intermediate_1
pyplot_151_intermediate_1 -----xlabel---->pyplot_151",EDA
3017,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_146_intermediate_1 -----ylabel---->pyplot_146],"matplotlib -----pyplot---->pyplot_146_intermediate_1
pyplot_151_intermediate_1 -----ylabel---->pyplot_151",EDA
3018,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_147_intermediate_1 -----plot---->pyplot_147],"matplotlib -----pyplot---->pyplot_147_intermediate_1
pyplot_151_intermediate_1 -----plot---->pyplot_151",EDA
3019,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_148_intermediate_1 -----xlim---->pyplot_148],"matplotlib -----pyplot---->pyplot_148_intermediate_1
pyplot_151_intermediate_1 -----xlim---->pyplot_151",EDA
3020,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_149_intermediate_1 -----ylim---->pyplot_149],"matplotlib -----pyplot---->pyplot_149_intermediate_1
pyplot_151_intermediate_1 -----ylim---->pyplot_151",EDA
3021,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_150_intermediate_1 -----legend---->pyplot_150],"matplotlib -----pyplot---->pyplot_150_intermediate_1
pyplot_151_intermediate_1 -----legend---->pyplot_151",EDA
3022,0001864f1f5bb461a01515e4ee4c3d3b92a33897.execution_graph,[pyplot_151_intermediate_1 -----grid---->pyplot_151],"matplotlib -----pyplot---->pyplot_151_intermediate_1
pyplot_151_intermediate_1 -----grid---->pyplot_151",EDA
3023,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[SITE_8 -----reassign---->SITE_9],"7	from datetime import datetime
8	SITE = StackAPI(""stackoverflow"")
9	SITE.max_pages=1
10	
",ENVIRONMENT
3024,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[stackapi -----stack api---->SITE_8],"6	from stackapi import StackAPI
7	from datetime import datetime
8	SITE = StackAPI(""stackoverflow"")
9	SITE.max_pages=1
",DATA_IMPORT_EXTRACTION
3025,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[SITE_9 -----fetch---->questions_13],"11	# your code here
12	#The questions part 
13	questions = SITE.fetch('questions', fromdate=datetime(2020, 4, 1), todate=datetime(2020, 5, 1))
14	questions
",DATA_IMPORT_EXTRACTION
3026,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[SITE_9 -----fetch---->answers_17],"15	
16	#The answers part 
17	answers = SITE.fetch('answers', fromdate=datetime(2020, 4, 1), todate=datetime(2020, 5, 1))
18	answers
",DATA_IMPORT_EXTRACTION
3027,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[SITE_9 -----fetch---->questions_23],"21	# your code here
22	
23	questions = SITE.fetch(""questions"", date=datetime(2020, 5, 20), tagged=""python"", sort=""votes"", min=5)
24	questions
",DATA_IMPORT_EXTRACTION
3028,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[SITE_9 -----fetch---->answers_27],"25	
26	# your code here
27	answers = SITE.fetch(""answers"", id_s = [""6784""])
28	answers
",DATA_IMPORT_EXTRACTION
3029,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[questions_13 -----questions---->questions_14],"12	#The questions part 
13	questions = SITE.fetch('questions', fromdate=datetime(2020, 4, 1), todate=datetime(2020, 5, 1))
14	questions
15	
",DATA_IMPORT_EXTRACTION
3030,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[questions_14 -----reassign---->questions_23],"21	# your code here
22	
23	questions = SITE.fetch(""questions"", date=datetime(2020, 5, 20), tagged=""python"", sort=""votes"", min=5)
24	questions
",DATA_IMPORT_EXTRACTION
3031,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[answers_17 -----answers---->answers_18],"16	#The answers part 
17	answers = SITE.fetch('answers', fromdate=datetime(2020, 4, 1), todate=datetime(2020, 5, 1))
18	answers
19	
",DATA_IMPORT_EXTRACTION
3032,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[answers_18 -----reassign---->answers_27],"25	
26	# your code here
27	answers = SITE.fetch(""answers"", id_s = [""6784""])
28	answers
",DATA_IMPORT_EXTRACTION
3033,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[questions_23 -----questions---->questions_24],"22	
23	questions = SITE.fetch(""questions"", date=datetime(2020, 5, 20), tagged=""python"", sort=""votes"", min=5)
24	questions
25	
",DATA_IMPORT_EXTRACTION
3034,000188687bc3df445d82dc3c0cad14f17a58c0b0.execution_graph,[answers_27 -----answers---->answers_28],"26	# your code here
27	answers = SITE.fetch(""answers"", id_s = [""6784""])
28	answers
29	
",DATA_TRANSFORM
3035,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[env_67 -----observation space---->state_size_68_intermediate_1],"gym -----make---->env_67
loop_env_67_env_78 -----restart_loop---->env_67
agent_92_intermediate_1 -----observation space---->agent_92
agent_92_intermediate_1 -----action space---->agent_92
agent_92_intermediate_1 -----loop---->agent_92
agent_92_intermediate_1 -----reset---->agent_92
agent_92_intermediate_1 -----shape---->agent_92",ENVIRONMENT
3036,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[env_67 -----action space---->action_size_69_intermediate_1],"gym -----make---->env_67
loop_env_67_env_78 -----restart_loop---->env_67
agent_92_intermediate_1 -----observation space---->agent_92
agent_92_intermediate_1 -----action space---->agent_92
agent_92_intermediate_1 -----loop---->agent_92
agent_92_intermediate_1 -----reset---->agent_92
agent_92_intermediate_1 -----n---->agent_92",ENVIRONMENT
3037,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[env_67 -----loop---->env_78_intermediate_1],"gym -----make---->env_67
loop_env_67_env_78 -----restart_loop---->env_67
agent_92_intermediate_1 -----observation space---->agent_92
agent_92_intermediate_1 -----action space---->agent_92
agent_92_intermediate_1 -----loop---->agent_92
agent_92_intermediate_1 -----reset---->agent_92
agent_92_intermediate_1 -----render---->agent_92",ENVIRONMENT
3038,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[env_67 -----reset---->state_75],"73	    
74	    for e in range(EPISODES):
75	        state = env.reset()
76	        state = np.reshape(state,[1,state_size])
",ENVIRONMENT
3039,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[gym -----make---->env_67],"65	    
66	if __name__ == ""__main__"":
67	    env = gym.make('CartPole-v1')
68	    state_size = env.observation_space.shape[0]
",ENVIRONMENT
3040,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[state_size_68 -----state size---->agent_70],"68	    state_size = env.observation_space.shape[0]
69	    action_size = env.action_space.n
70	    agent = DQNAgent(state_size,action_size)
71	    done = False
",ENVIRONMENT
3041,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[action_size_69 -----action size---->agent_70],"68	    state_size = env.observation_space.shape[0]
69	    action_size = env.action_space.n
70	    agent = DQNAgent(state_size,action_size)
71	    done = False
",ENVIRONMENT
3042,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[agent_70 -----loop---->agent_83_intermediate_1],"state_size_68 -----state size---->agent_70
action_size_69 -----action size---->agent_70
DQNAgent -----dqnagent---->agent_70
loop_agent_70_agent_92 -----restart_loop---->agent_70
agent_92_intermediate_1 -----loop---->agent_92
agent_92_intermediate_1 -----act---->agent_92
agent_92_intermediate_1 -----remember---->agent_92",MODEL_TRAIN
3043,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[agent_70 -----act---->action_79],"77	        for time in range(500):
78	            env.render()
79	            action = agent.act(state)
80	            next_state,reward,done,_= env.step(action)
",MODEL_TRAIN
3044,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[DQNAgent -----dqnagent---->agent_70],"68	    state_size = env.observation_space.shape[0]
69	    action_size = env.action_space.n
70	    agent = DQNAgent(state_size,action_size)
71	    done = False
",ENVIRONMENT
3045,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[done_71 -----loop---->done_80],"
",MODEL_TRAIN
3046,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[batch_size_72 -----batch size---->agent_90],"88	                break
89	            if len(agent.memory)>batch_size:
90	                agent.replay(batch_size)
91	        if e%10==0:
",MODEL_TRAIN
3047,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[env_78 -----step---->next_state_80],"78	            env.render()
79	            action = agent.act(state)
80	            next_state,reward,done,_= env.step(action)
81	            reward = reward if not done else -10
",ENVIRONMENT
3048,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[env_78 -----step---->reward_80],"78	            env.render()
79	            action = agent.act(state)
80	            next_state,reward,done,_= env.step(action)
81	            reward = reward if not done else -10
",ENVIRONMENT
3049,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[env_78 -----step---->done_80],"78	            env.render()
79	            action = agent.act(state)
80	            next_state,reward,done,_= env.step(action)
81	            reward = reward if not done else -10
",ENVIRONMENT
3050,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[env_78 -----step---->__80],"78	            env.render()
79	            action = agent.act(state)
80	            next_state,reward,done,_= env.step(action)
81	            reward = reward if not done else -10
",ENVIRONMENT
3051,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[env_78 -----end_loop---->loop_env_67_env_78],"
",ENVIRONMENT
3052,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[done_80 -----done---->agent_83],"81	            reward = reward if not done else -10
82	            next_state = np.reshape(next_state,[1,state_size])
83	            agent.remember(state,action,reward,next_state,done)
84	            state = next_state
",MODEL_TRAIN
3053,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[done_80 -----end_loop---->loop_done_71_done_80],"
",MODEL_TRAIN
3054,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[agent_83 -----if---->agent_90_intermediate_1],"done_80 -----done---->agent_83
state_76 -----state---->agent_83
action_79 -----action---->agent_83
reward_81 -----reward---->agent_83
next_state_82 -----next state---->agent_83
agent_83_intermediate_1 -----remember---->agent_83
agent_92_intermediate_1 -----if---->agent_92
agent_92_intermediate_1 -----replay---->agent_92",MODEL_TRAIN
3055,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[state_75 -----state---->state_76],"74	    for e in range(EPISODES):
75	        state = env.reset()
76	        state = np.reshape(state,[1,state_size])
77	        for time in range(500):
",DATA_TRANSFORM
3056,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[state_76 -----loop---->state_84],"
",DATA_TRANSFORM
3057,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[state_76 -----state---->action_79],"77	        for time in range(500):
78	            env.render()
79	            action = agent.act(state)
80	            next_state,reward,done,_= env.step(action)
",MODEL_EVALUATION
3058,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[state_76 -----state---->agent_83],"81	            reward = reward if not done else -10
82	            next_state = np.reshape(next_state,[1,state_size])
83	            agent.remember(state,action,reward,next_state,done)
84	            state = next_state
",MODEL_EVALUATION
3059,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[numpy -----reshape---->state_76],"74	    for e in range(EPISODES):
75	        state = env.reset()
76	        state = np.reshape(state,[1,state_size])
77	        for time in range(500):
",DATA_TRANSFORM
3060,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[numpy -----reshape---->next_state_82],"80	            next_state,reward,done,_= env.step(action)
81	            reward = reward if not done else -10
82	            next_state = np.reshape(next_state,[1,state_size])
83	            agent.remember(state,action,reward,next_state,done)
",DATA_TRANSFORM
3061,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[state_84 -----end_loop---->loop_state_76_state_84],"
",MODEL_TRAIN
3062,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[action_79 -----action---->next_state_80],"78	            env.render()
79	            action = agent.act(state)
80	            next_state,reward,done,_= env.step(action)
81	            reward = reward if not done else -10
",MODEL_TRAIN
3063,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[action_79 -----action---->reward_80],"78	            env.render()
79	            action = agent.act(state)
80	            next_state,reward,done,_= env.step(action)
81	            reward = reward if not done else -10
",MODEL_TRAIN
3064,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[action_79 -----action---->done_80],"78	            env.render()
79	            action = agent.act(state)
80	            next_state,reward,done,_= env.step(action)
81	            reward = reward if not done else -10
",MODEL_TRAIN
3065,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[action_79 -----action---->__80],"78	            env.render()
79	            action = agent.act(state)
80	            next_state,reward,done,_= env.step(action)
81	            reward = reward if not done else -10
",MODEL_TRAIN
3066,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[action_79 -----action---->agent_83],"81	            reward = reward if not done else -10
82	            next_state = np.reshape(next_state,[1,state_size])
83	            agent.remember(state,action,reward,next_state,done)
84	            state = next_state
",MODEL_TRAIN
3067,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[next_state_80 -----next state---->next_state_82],"80	            next_state,reward,done,_= env.step(action)
81	            reward = reward if not done else -10
82	            next_state = np.reshape(next_state,[1,state_size])
83	            agent.remember(state,action,reward,next_state,done)
",DATA_TRANSFORM
3068,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[reward_80 -----if---->reward_81],"79	            action = agent.act(state)
80	            next_state,reward,done,_= env.step(action)
81	            reward = reward if not done else -10
82	            next_state = np.reshape(next_state,[1,state_size])
",MODEL_TRAIN
3069,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[reward_81 -----reward---->agent_83],"81	            reward = reward if not done else -10
82	            next_state = np.reshape(next_state,[1,state_size])
83	            agent.remember(state,action,reward,next_state,done)
84	            state = next_state
",MODEL_TRAIN
3070,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[next_state_82 -----next state---->agent_83],"81	            reward = reward if not done else -10
82	            next_state = np.reshape(next_state,[1,state_size])
83	            agent.remember(state,action,reward,next_state,done)
84	            state = next_state
",MODEL_TRAIN
3071,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[next_state_82 -----next state---->state_84],"82	            next_state = np.reshape(next_state,[1,state_size])
83	            agent.remember(state,action,reward,next_state,done)
84	            state = next_state
85	            if done:
",DATA_TRANSFORM
3072,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[agent_90 -----if---->agent_92_intermediate_1],"batch_size_72 -----batch size---->agent_90
agent_90_intermediate_1 -----replay---->agent_90
agent_92_intermediate_1 -----if---->agent_92
agent_92_intermediate_1 -----save---->agent_92",MODEL_TRAIN
3073,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[loop_state_76_state_84 -----restart_loop---->state_76],"
",ENVIRONMENT
3074,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[agent_92 -----end_loop---->loop_agent_70_agent_92],"
",MODEL_TRAIN
3075,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[loop_env_67_env_78 -----restart_loop---->env_67],"
",ENVIRONMENT
3076,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[loop_done_71_done_80 -----restart_loop---->done_71],"
",MODEL_TRAIN
3077,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[loop_agent_70_agent_92 -----restart_loop---->agent_70],"
",MODEL_TRAIN
3078,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[state_size_68_intermediate_1 -----shape---->state_size_68],"env_67 -----observation space---->state_size_68_intermediate_1
agent_92_intermediate_1 -----shape---->agent_92
agent_92_intermediate_1 -----state size---->agent_92",ENVIRONMENT
3079,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[action_size_69_intermediate_1 -----n---->action_size_69],"env_67 -----action space---->action_size_69_intermediate_1
agent_92_intermediate_1 -----n---->agent_92
agent_92_intermediate_1 -----action size---->agent_92",ENVIRONMENT
3080,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[env_78_intermediate_1 -----render---->env_78],"env_67 -----loop---->env_78_intermediate_1
agent_92_intermediate_1 -----render---->agent_92
agent_92_intermediate_1 -----step---->agent_92
agent_92_intermediate_1 -----step---->agent_92
agent_92_intermediate_1 -----step---->agent_92
agent_92_intermediate_1 -----step---->agent_92
agent_92_intermediate_1 -----end_loop---->agent_92",ENVIRONMENT
3081,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[agent_83_intermediate_1 -----remember---->agent_83],"agent_70 -----loop---->agent_83_intermediate_1
agent_92_intermediate_1 -----remember---->agent_92
agent_92_intermediate_1 -----if---->agent_92",MODEL_TRAIN
3082,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[agent_90_intermediate_1 -----replay---->agent_90],"agent_83 -----if---->agent_90_intermediate_1
agent_92_intermediate_1 -----replay---->agent_92
agent_92_intermediate_1 -----if---->agent_92",MODEL_TRAIN
3083,00018a1c7d7de9b70b66800eba1d673c6c92c70a.execution_graph,[agent_92_intermediate_1 -----save---->agent_92],"agent_90 -----if---->agent_92_intermediate_1
agent_92_intermediate_1 -----save---->agent_92
agent_92_intermediate_1 -----end_loop---->agent_92",MODEL_TRAIN
3084,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[parameters_206 -----parameters---->default_prob_233],"231	    return A3
232	
233	default_prob = get_probability(parameters, X_test)[1,:]
234	
",MODEL_EVALUATION
3085,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[default_prob_233 -----default prob---->TPR_259],"257	t = np.linspace(0.0, 1.0, n)
258	for i in range(n):
259	    TPR[i,0], FPR[i,0] = get_ROC(default_prob,t[i],Y_test[1,:])
260	
",MODEL_EVALUATION
3086,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[default_prob_233 -----default prob---->FPR_259],"257	t = np.linspace(0.0, 1.0, n)
258	for i in range(n):
259	    TPR[i,0], FPR[i,0] = get_ROC(default_prob,t[i],Y_test[1,:])
260	
",MODEL_EVALUATION
3087,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[n_254 -----n---->t_257],"255	TPR = np.zeros((n,1))
256	FPR = np.zeros((n,1))
257	t = np.linspace(0.0, 1.0, n)
258	for i in range(n):
",MODEL_EVALUATION
3088,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[TPR_255 -----loop---->TPR_259],"
",MODEL_EVALUATION
3089,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[numpy -----zeros---->TPR_255],"253	
254	n = 200
255	TPR = np.zeros((n,1))
256	FPR = np.zeros((n,1))
",MODEL_EVALUATION
3090,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[numpy -----zeros---->FPR_256],"254	n = 200
255	TPR = np.zeros((n,1))
256	FPR = np.zeros((n,1))
257	t = np.linspace(0.0, 1.0, n)
",MODEL_EVALUATION
3091,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[numpy -----linspace---->t_257],"255	TPR = np.zeros((n,1))
256	FPR = np.zeros((n,1))
257	t = np.linspace(0.0, 1.0, n)
258	for i in range(n):
",MODEL_EVALUATION
3092,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[FPR_256 -----loop---->FPR_259],"
",MODEL_EVALUATION
3093,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[t_257 -----t---->TPR_259],"257	t = np.linspace(0.0, 1.0, n)
258	for i in range(n):
259	    TPR[i,0], FPR[i,0] = get_ROC(default_prob,t[i],Y_test[1,:])
260	
",MODEL_EVALUATION
3094,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[t_257 -----t---->FPR_259],"257	t = np.linspace(0.0, 1.0, n)
258	for i in range(n):
259	    TPR[i,0], FPR[i,0] = get_ROC(default_prob,t[i],Y_test[1,:])
260	
",MODEL_EVALUATION
3095,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[TPR_259 -----end_loop---->loop_TPR_255_TPR_259],"
",MODEL_EVALUATION
3096,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[FPR_259 -----end_loop---->loop_FPR_256_FPR_259],"
",MODEL_EVALUATION
3097,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[loop_TPR_255_TPR_259 -----restart_loop---->TPR_255],"
",MODEL_EVALUATION
3098,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[loop_TPR_255_TPR_259 -----tpr---->plt_262],"260	
261	plt.figure(figsize=(5,5))
262	plt.plot(FPR, TPR)
263	
",MODEL_EVALUATION
3099,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[loop_FPR_256_FPR_259 -----restart_loop---->FPR_256],"
",MODEL_EVALUATION
3100,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[loop_FPR_256_FPR_259 -----fpr---->plt_262],"260	
261	plt.figure(figsize=(5,5))
262	plt.plot(FPR, TPR)
263	
",MODEL_EVALUATION
3101,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[matplotlib.pyplot -----figure---->plt_261],"259	    TPR[i,0], FPR[i,0] = get_ROC(default_prob,t[i],Y_test[1,:])
260	
261	plt.figure(figsize=(5,5))
262	plt.plot(FPR, TPR)
",ENVIRONMENT
3102,00018e1e799b97ff056e9b79b51b80c9d7f98115.execution_graph,[matplotlib.pyplot -----plot---->plt_262],"260	
261	plt.figure(figsize=(5,5))
262	plt.plot(FPR, TPR)
263	
",MODEL_EVALUATION
3103,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[features_27 -----features---->features_train_28],"26	
27	features, labels = load_iris(return_X_y=True)
28	features_train,features_test, labels_train, labels_test = train_test_split(features, labels, random_state=42, shuffle=True)
29	
",DATA_TRANSFORM
3104,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[features_27 -----features---->features_test_28],"26	
27	features, labels = load_iris(return_X_y=True)
28	features_train,features_test, labels_train, labels_test = train_test_split(features, labels, random_state=42, shuffle=True)
29	
",DATA_TRANSFORM
3105,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[features_27 -----features---->labels_train_28],"26	
27	features, labels = load_iris(return_X_y=True)
28	features_train,features_test, labels_train, labels_test = train_test_split(features, labels, random_state=42, shuffle=True)
29	
",DATA_TRANSFORM
3106,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[features_27 -----features---->labels_test_28],"26	
27	features, labels = load_iris(return_X_y=True)
28	features_train,features_test, labels_train, labels_test = train_test_split(features, labels, random_state=42, shuffle=True)
29	
",DATA_TRANSFORM
3107,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[labels_27 -----labels---->features_train_28],"26	
27	features, labels = load_iris(return_X_y=True)
28	features_train,features_test, labels_train, labels_test = train_test_split(features, labels, random_state=42, shuffle=True)
29	
",DATA_TRANSFORM
3108,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[labels_27 -----labels---->features_test_28],"26	
27	features, labels = load_iris(return_X_y=True)
28	features_train,features_test, labels_train, labels_test = train_test_split(features, labels, random_state=42, shuffle=True)
29	
",DATA_TRANSFORM
3109,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[labels_27 -----labels---->labels_train_28],"26	
27	features, labels = load_iris(return_X_y=True)
28	features_train,features_test, labels_train, labels_test = train_test_split(features, labels, random_state=42, shuffle=True)
29	
",DATA_TRANSFORM
3110,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[labels_27 -----labels---->labels_test_28],"26	
27	features, labels = load_iris(return_X_y=True)
28	features_train,features_test, labels_train, labels_test = train_test_split(features, labels, random_state=42, shuffle=True)
29	
",DATA_TRANSFORM
3111,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[features_train_28 -----features train---->model_32],"30	
31	# Training
32	model = Model(features_train.shape[1])
33	optimizer = torch.optim.Adam(model.parameters(), lr=0.01)
",MODEL_TRAIN
3112,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[labels_test_28 -----select---->labels_test_67],"65	np.argmax(model(x_test[0]).detach().numpy(), axis=0)
66	
67	labels_test[0]
68	
",DATA_TRANSFORM
3113,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[model_32 -----model---->pred_57],"55	# Prediction
56	x_test = Variable(torch.from_numpy(features_test)).float()
57	pred = model(x_test)
58	
",MODEL_EVALUATION
3114,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[model_32 -----model---->torch_69],"67	labels_test[0]
68	
69	torch.save(model, ""iris-pytorch.pkl"")
70	
",DATA_EXPORT
3115,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[Model -----model---->model_32],"30	
31	# Training
32	model = Model(features_train.shape[1])
33	optimizer = torch.optim.Adam(model.parameters(), lr=0.01)
",MODEL_TRAIN
3116,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[optimizer_33 -----loop---->optimizer_50_intermediate_1],"torch -----adam---->optimizer_33
loop_optimizer_33_optimizer_52 -----restart_loop---->optimizer_33
pred_59_intermediate_1 -----loop---->pred_59
pred_59_intermediate_1 -----zero grad---->pred_59",MODEL_TRAIN
3117,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[torch -----adam---->optimizer_33],"31	# Training
32	model = Model(features_train.shape[1])
33	optimizer = torch.optim.Adam(model.parameters(), lr=0.01)
34	loss_fn = nn.CrossEntropyLoss()
",MODEL_TRAIN
3118,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[torch -----save---->torch_69],"67	labels_test[0]
68	
69	torch.save(model, ""iris-pytorch.pkl"")
70	
",DATA_EXPORT
3119,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[torch -----load---->saved_model_71],"69	torch.save(model, ""iris-pytorch.pkl"")
70	
71	saved_model = torch.load(""iris-pytorch.pkl"")
72	
",DATA_IMPORT_EXTRACTION
3120,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[torch.nn -----cross entropy loss---->loss_fn_34],"32	model = Model(features_train.shape[1])
33	optimizer = torch.optim.Adam(model.parameters(), lr=0.01)
34	loss_fn = nn.CrossEntropyLoss()
35	epochs = 10
",MODEL_TRAIN
3121,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[x_train_42 -----x train---->y_pred_45],"43	for epoch in range(1, epochs+1):
44	    print (""Epoch #"",epoch)
45	    y_pred = model(x_train)
46	    loss = loss_fn(y_pred, y_train)
",MODEL_TRAIN
3122,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[torch.autograd -----variable---->x_train_42_intermediate_1],"pred_59_intermediate_1 -----variable---->pred_59
pred_59_intermediate_1 -----variable---->pred_59
pred_59_intermediate_1 -----variable---->pred_59
pred_59_intermediate_1 -----float---->pred_59",MODEL_TRAIN
3123,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[torch.autograd -----variable---->y_train_42_intermediate_1],"pred_59_intermediate_1 -----variable---->pred_59
pred_59_intermediate_1 -----variable---->pred_59
pred_59_intermediate_1 -----variable---->pred_59
pred_59_intermediate_1 -----float---->pred_59",MODEL_TRAIN
3124,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[torch.autograd -----variable---->x_test_56_intermediate_1],"pred_59_intermediate_1 -----variable---->pred_59
pred_59_intermediate_1 -----variable---->pred_59
pred_59_intermediate_1 -----variable---->pred_59
pred_59_intermediate_1 -----float---->pred_59",MODEL_EVALUATION
3125,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[y_train_42 -----y train---->loss_46],"44	    print (""Epoch #"",epoch)
45	    y_pred = model(x_train)
46	    loss = loss_fn(y_pred, y_train)
47	    print_(loss.item())
",MODEL_TRAIN
3126,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[optimizer_50 -----step---->optimizer_52],"50	    optimizer.zero_grad()
51	    loss.backward() # Gradients
52	    optimizer.step() # Update
53	
",MODEL_TRAIN
3127,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[y_pred_45 -----y pred---->loss_46],"44	    print (""Epoch #"",epoch)
45	    y_pred = model(x_train)
46	    loss = loss_fn(y_pred, y_train)
47	    print_(loss.item())
",MODEL_TRAIN
3128,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[loss_46 -----backward---->loss_51],"49	    # Zero gradients
50	    optimizer.zero_grad()
51	    loss.backward() # Gradients
52	    optimizer.step() # Update
",MODEL_TRAIN
3129,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[optimizer_52 -----end_loop---->loop_optimizer_33_optimizer_52],"
",MODEL_TRAIN
3130,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[loop_optimizer_33_optimizer_52 -----restart_loop---->optimizer_33],"
",MODEL_TRAIN
3131,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[x_test_56 -----x test---->pred_57],"55	# Prediction
56	x_test = Variable(torch.from_numpy(features_test)).float()
57	pred = model(x_test)
58	
",MODEL_EVALUATION
3132,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[pred_57 -----detach---->pred_59_intermediate_1],"model_32 -----model---->pred_57
x_test_56 -----x test---->pred_57
pred_59_intermediate_1 -----detach---->pred_59
pred_59_intermediate_1 -----numpy---->pred_59",MODEL_EVALUATION
3133,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[pred_59 -----pred---->pred_60],"58	
59	pred = pred.detach().numpy()
60	pred
61	
",MODEL_EVALUATION
3134,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[np_65 -----argmax---->np_73],"71	saved_model = torch.load(""iris-pytorch.pkl"")
72	
73	np.argmax(saved_model(x_test[0]).detach().numpy(), axis=0)
74	
",MODEL_EVALUATION
3135,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[optimizer_50_intermediate_1 -----zero grad---->optimizer_50],"optimizer_33 -----loop---->optimizer_50_intermediate_1
pred_59_intermediate_1 -----zero grad---->pred_59
pred_59_intermediate_1 -----step---->pred_59",MODEL_TRAIN
3136,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[x_train_42_intermediate_1 -----float---->x_train_42_intermediate_2],"torch.autograd -----variable---->x_train_42_intermediate_1
pred_59_intermediate_1 -----float---->pred_59
pred_59_intermediate_1 -----long---->pred_59",DATA_TRANSFORM
3137,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[x_train_42_intermediate_2 -----long---->x_train_42],"x_train_42_intermediate_1 -----float---->x_train_42_intermediate_2
pred_59_intermediate_1 -----long---->pred_59
pred_59_intermediate_1 -----x train---->pred_59",DATA_TRANSFORM
3138,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[y_train_42_intermediate_1 -----float---->y_train_42_intermediate_2],"torch.autograd -----variable---->y_train_42_intermediate_1
pred_59_intermediate_1 -----float---->pred_59
pred_59_intermediate_1 -----long---->pred_59",MODEL_TRAIN
3139,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[y_train_42_intermediate_2 -----long---->y_train_42],"y_train_42_intermediate_1 -----float---->y_train_42_intermediate_2
pred_59_intermediate_1 -----long---->pred_59
pred_59_intermediate_1 -----y train---->pred_59",MODEL_TRAIN
3140,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[x_test_56_intermediate_1 -----float---->x_test_56],"torch.autograd -----variable---->x_test_56_intermediate_1
pred_59_intermediate_1 -----float---->pred_59
pred_59_intermediate_1 -----x test---->pred_59",MODEL_EVALUATION
3141,00019312a03a64db39c8e46516f7b02e063712de.execution_graph,[pred_59_intermediate_1 -----numpy---->pred_59],"pred_57 -----detach---->pred_59_intermediate_1
pred_59_intermediate_1 -----numpy---->pred_59
pred_59_intermediate_1 -----pred---->pred_59",MODEL_EVALUATION
3142,000197f4e908dccfa6bf250d1431b720aebf15bd.execution_graph,[time -----sleep---->time_3],"1	import time
2	
3	time.sleep(0.01)
4	
",NOT_INTERESTING
3143,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_1 -----set---->x_7],"5	liste = [1,2,3,3,1,1,2,2,2] # Aynı elemanı birçok defa  barındıran bir liste
6	
7	x = set(liste) # Veri tipi dönüşümü
8	
",DATA_TRANSFORM
3144,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[liste_5 -----liste---->x_7],"5	liste = [1,2,3,3,1,1,2,2,2] # Aynı elemanı birçok defa  barındıran bir liste
6	
7	x = set(liste) # Veri tipi dönüşümü
8	
",DATA_TRANSFORM
3145,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[liste_5 -----list---->liste_30],"28	x[""Python""]
29	
30	liste = list({1,2,3,4,5})
31	
",DATA_TRANSFORM
3146,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_7 -----x---->x_9],"7	x = set(liste) # Veri tipi dönüşümü
8	
9	x # Aynı elemanlar tek bir elemana indirgendi.
10	
",DATA_TRANSFORM
3147,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_9 -----set---->x_11],"9	x # Aynı elemanlar tek bir elemana indirgendi.
10	
11	x = set(""Python Programlama Dili"")  # Aynı karakterler tek bir karaktere indirgendi.
12	
",DATA_TRANSFORM
3148,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_11 -----x---->x_13],"11	x = set(""Python Programlama Dili"")  # Aynı karakterler tek bir karaktere indirgendi.
12	
13	x
14	
",DATA_TRANSFORM
3149,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_13 -----reassign---->x_15],"13	x
14	
15	x = {""Python"",""Php"",""Python""}
16	
",DATA_TRANSFORM
3150,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_15 -----x---->x_17],"15	x = {""Python"",""Php"",""Python""}
16	
17	x # Aynı elemanlar teke indirgendi.
18	
",DATA_TRANSFORM
3151,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_17 -----reassign---->x_19],"17	x # Aynı elemanlar teke indirgendi.
18	
19	x = {""Python"",""Php"",""Java"",""C"",""Javascript""}
20	
",DATA_TRANSFORM
3152,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_19 -----x---->x_24],"22	    print(i) 
23	
24	x
25	
",DATA_TRANSFORM
3153,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_24 -----select---->x_26],"24	x
25	
26	x[0]
27	
",DATA_TRANSFORM
3154,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_26 -----select---->x_28],"26	x[0]
27	
28	x[""Python""]
29	
",DATA_TRANSFORM
3155,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_28 -----reassign---->x_34],"32	liste[0]
33	
34	x = {1,2,3}
35	
",DATA_TRANSFORM
3156,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[liste_30 -----select---->liste_32],"30	liste = list({1,2,3,4,5})
31	
32	liste[0]
33	
",DATA_TRANSFORM
3157,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_34 -----add---->x_36],"34	x = {1,2,3}
35	
36	x.add(4)
37	
",DATA_TRANSFORM
3158,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_36 -----x---->x_38],"36	x.add(4)
37	
38	x
39	
",DATA_TRANSFORM
3159,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_38 -----add---->x_40],"38	x
39	
40	x.add(4) # Tekrar eklenmiyor.
41	
",DATA_TRANSFORM
3160,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[x_40 -----x---->x_42],"40	x.add(4) # Tekrar eklenmiyor.
41	
42	x
43	
",DATA_TRANSFORM
3161,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_44 -----difference---->küme1_47],"45	küme2 = {1,2,23,34,-1}
46	
47	küme1.difference(küme2)
48	
",DATA_TRANSFORM
3162,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_45 -----küme2---->küme1_47],"45	küme2 = {1,2,23,34,-1}
46	
47	küme1.difference(küme2)
48	
",DATA_TRANSFORM
3163,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_45 -----difference---->küme2_49],"47	küme1.difference(küme2)
48	
49	küme2.difference(küme1)
50	
",DATA_TRANSFORM
3164,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_47 -----küme1---->küme2_49],"47	küme1.difference(küme2)
48	
49	küme2.difference(küme1)
50	
",DATA_TRANSFORM
3165,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_47 -----küme1---->küme1_51],"49	küme2.difference(küme1)
50	
51	küme1
52	
",DATA_TRANSFORM
3166,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_49 -----küme2---->küme2_55],"53	küme1
54	
55	küme2
56	
",DATA_TRANSFORM
3167,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_51 -----küme1---->küme1_53],"51	küme1
52	
53	küme1
54	
",DATA_TRANSFORM
3168,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_53 -----difference update---->küme1_57],"55	küme2
56	
57	küme1.difference_update(küme2)
58	
",DATA_TRANSFORM
3169,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_55 -----küme2---->küme1_57],"55	küme2
56	
57	küme1.difference_update(küme2)
58	
",DATA_TRANSFORM
3170,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_55 -----reassign---->küme2_72],"70	
71	küme1 = {1,2,3,10,34,100,-2}
72	küme2 = {1,2,23,34,-1}
73	
",DATA_TRANSFORM
3171,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_57 -----küme1---->küme1_59],"57	küme1.difference_update(küme2)
58	
59	küme1 # Farka göre güncellendi.
60	
",DATA_TRANSFORM
3172,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_59 -----reassign---->küme1_61],"59	küme1 # Farka göre güncellendi.
60	
61	küme1 = {1,2,3,4,5,6}
62	
",DATA_TRANSFORM
3173,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_61 -----discard---->küme1_63],"61	küme1 = {1,2,3,4,5,6}
62	
63	küme1.discard(2)
64	
",DATA_TRANSFORM
3174,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_63 -----küme1---->küme1_65],"63	küme1.discard(2)
64	
65	küme1
66	
",DATA_TRANSFORM
3175,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_65 -----discard---->küme1_67],"65	küme1
66	
67	küme1.discard(10)
68	
",DATA_TRANSFORM
3176,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_67 -----küme1---->küme1_69],"67	küme1.discard(10)
68	
69	küme1
70	
",MODEL_TRAIN
3177,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_69 -----reassign---->küme1_71],"69	küme1
70	
71	küme1 = {1,2,3,10,34,100,-2}
72	küme2 = {1,2,23,34,-1}
",DATA_TRANSFORM
3178,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_71 -----intersection---->küme1_74],"72	küme2 = {1,2,23,34,-1}
73	
74	küme1.intersection(küme2)
75	
",DATA_TRANSFORM
3179,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_72 -----küme2---->küme1_74],"72	küme2 = {1,2,23,34,-1}
73	
74	küme1.intersection(küme2)
75	
",DATA_TRANSFORM
3180,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_72 -----reassign---->küme2_77],"75	
76	küme1 = {1,2,3,10,34,100,-2}
77	küme2 = {1,2,23,34,-1}
78	
",NOT_INTERESTING
3181,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_74 -----reassign---->küme1_76],"74	küme1.intersection(küme2)
75	
76	küme1 = {1,2,3,10,34,100,-2}
77	küme2 = {1,2,23,34,-1}
",DATA_TRANSFORM
3182,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_76 -----intersection update---->küme1_79],"77	küme2 = {1,2,23,34,-1}
78	
79	küme1.intersection_update(küme2)
80	
",DATA_TRANSFORM
3183,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_77 -----küme2---->küme1_79],"77	küme2 = {1,2,23,34,-1}
78	
79	küme1.intersection_update(küme2)
80	
",DATA_TRANSFORM
3184,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_77 -----reassign---->küme2_84],"82	
83	küme1 = {1,2,3,10,34,100,-2}
84	küme2 = {1,2,23,34,-1}
85	küme3 = {30,40,50}
",NOT_INTERESTING
3185,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_79 -----küme1---->küme1_81],"79	küme1.intersection_update(küme2)
80	
81	küme1
82	
",DATA_TRANSFORM
3186,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_81 -----reassign---->küme1_83],"81	küme1
82	
83	küme1 = {1,2,3,10,34,100,-2}
84	küme2 = {1,2,23,34,-1}
",DATA_TRANSFORM
3187,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_83 -----isdisjoint---->küme1_87],"85	küme3 = {30,40,50}
86	
87	küme1.isdisjoint(küme2)
88	
",DATA_TRANSFORM
3188,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_84 -----küme2---->küme1_87],"85	küme3 = {30,40,50}
86	
87	küme1.isdisjoint(küme2)
88	
",EDA
3189,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_84 -----reassign---->küme2_92],"90	
91	küme1 = {1,2,3}
92	küme2 = {1,2,3,4}
93	küme3 = {5,6,7}
",EDA
3190,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme3_85 -----küme3---->küme1_89],"87	küme1.isdisjoint(küme2)
88	
89	küme1.isdisjoint(küme3)
90	
",EDA
3191,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme3_85 -----reassign---->küme3_93],"91	küme1 = {1,2,3}
92	küme2 = {1,2,3,4}
93	küme3 = {5,6,7}
94	
",DATA_TRANSFORM
3192,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_87 -----isdisjoint---->küme1_89],"87	küme1.isdisjoint(küme2)
88	
89	küme1.isdisjoint(küme3)
90	
",EDA
3193,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_89 -----reassign---->küme1_91],"89	küme1.isdisjoint(küme3)
90	
91	küme1 = {1,2,3}
92	küme2 = {1,2,3,4}
",DATA_TRANSFORM
3194,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_91 -----issubset---->küme1_95],"93	küme3 = {5,6,7}
94	
95	küme1.issubset(küme2)
96	
",DATA_TRANSFORM
3195,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_92 -----küme2---->küme1_95],"93	küme3 = {5,6,7}
94	
95	küme1.issubset(küme2)
96	
",DATA_TRANSFORM
3196,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_92 -----reassign---->küme2_100],"98	
99	küme1 = {1,2,3,10,34,100,-2}
100	küme2 = {1,2,23,34,-1}
101	
",DATA_TRANSFORM
3197,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme3_93 -----küme3---->küme1_97],"95	küme1.issubset(küme2)
96	
97	küme1.issubset(küme3)
98	
",EDA
3198,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_95 -----issubset---->küme1_97],"95	küme1.issubset(küme2)
96	
97	küme1.issubset(küme3)
98	
",NOT_INTERESTING
3199,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_97 -----reassign---->küme1_99],"97	küme1.issubset(küme3)
98	
99	küme1 = {1,2,3,10,34,100,-2}
100	küme2 = {1,2,23,34,-1}
",DATA_TRANSFORM
3200,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_99 -----union---->küme1_102],"100	küme2 = {1,2,23,34,-1}
101	
102	küme1.union(küme2)
103	
",DATA_TRANSFORM
3201,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_100 -----küme2---->küme1_102],"100	küme2 = {1,2,23,34,-1}
101	
102	küme1.union(küme2)
103	
",DATA_TRANSFORM
3202,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_100 -----reassign---->küme2_105],"103	
104	küme1 = {1,2,3,10,34,100,-2}
105	küme2 = {1,2,23,34,-1}
106	
",DATA_TRANSFORM
3203,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_102 -----reassign---->küme1_104],"102	küme1.union(küme2)
103	
104	küme1 = {1,2,3,10,34,100,-2}
105	küme2 = {1,2,23,34,-1}
",DATA_TRANSFORM
3204,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_104 -----update---->küme1_107],"105	küme2 = {1,2,23,34,-1}
106	
107	küme1.update(küme2)
108	
",DATA_TRANSFORM
3205,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme2_105 -----küme2---->küme1_107],"105	küme2 = {1,2,23,34,-1}
106	
107	küme1.update(küme2)
108	
",DATA_TRANSFORM
3206,00019978b2de4e96e30cd1786b1b32d895797878.execution_graph,[küme1_107 -----küme1---->küme1_109],"107	küme1.update(küme2)
108	
109	küme1
110	
",DATA_TRANSFORM
3207,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[df_9 -----select---->BAC_11],"9	df = pd.read_pickle('all_banks')
10	
11	BAC = df['BAC']
12	C = df['C']
",EDA
3208,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[df_9 -----select---->C_12],"10	
11	BAC = df['BAC']
12	C = df['C']
13	GS = df['GS']
",EDA
3209,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[df_9 -----select---->GS_13],"11	BAC = df['BAC']
12	C = df['C']
13	GS = df['GS']
14	JPM = df['JPM']
",DATA_IMPORT_EXTRACTION
3210,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[df_9 -----select---->JPM_14],"12	C = df['C']
13	GS = df['GS']
14	JPM = df['JPM']
15	MS = df['MS']
",EDA
3211,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[df_9 -----select---->MS_15],"13	GS = df['GS']
14	JPM = df['JPM']
15	MS = df['MS']
16	WFC = df['WFC']
",EDA
3212,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[df_9 -----select---->WFC_16],"14	JPM = df['JPM']
15	MS = df['MS']
16	WFC = df['WFC']
17	
",EDA
3213,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[df_9 -----df---->df_18],"16	WFC = df['WFC']
17	
18	df
19	
",DATA_IMPORT_EXTRACTION
3214,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[pandas -----read pickle---->df_9],"7	end = datetime.datetime(2016, 1, 1)
8	
9	df = pd.read_pickle('all_banks')
10	
",DATA_IMPORT_EXTRACTION
3215,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[pandas -----data frame---->returns_34],"32	
33	
34	returns = pd.DataFrame()
35	
",DATA_TRANSFORM
3216,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_11 -----select---->BAC_95_intermediate_1],"df_9 -----select---->BAC_11
BAC_115_intermediate_2 -----select---->BAC_115
BAC_115_intermediate_2 -----loc---->BAC_115",EDA
3217,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[MS_15 -----select---->MS_113_intermediate_1],"df_9 -----select---->MS_15
BAC_115_intermediate_2 -----select---->BAC_115
BAC_115_intermediate_2 -----loc---->BAC_115",EDA
3218,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[df_18 -----df---->bank_stocks_22],"20	tickers = ['BAC', 'C', 'GS', 'JPM', 'MS', 'WFC']
21	
22	bank_stocks=df
23	
",DATA_EXPORT
3219,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[bank_stocks_22 -----reassign---->bank_stocks_24],"22	bank_stocks=df
23	
24	bank_stocks.columns.names = ['Bank Ticker','Stock Info']
25	
",DATA_TRANSFORM
3220,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[bank_stocks_24 -----head---->bank_stocks_26],"24	bank_stocks.columns.names = ['Bank Ticker','Stock Info']
25	
26	bank_stocks.head()
27	
",DATA_TRANSFORM
3221,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[bank_stocks_26 -----xs---->bank_stocks_30_intermediate_1],"bank_stocks_24 -----head---->bank_stocks_26
BAC_115_intermediate_2 -----xs---->BAC_115
BAC_115_intermediate_2 -----max---->BAC_115",DATA_TRANSFORM
3222,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[bank_stocks_30 -----bank stocks[t]---->returns_39],"37	
38	for t in tickers:
39	    returns[t+' Return'] = bank_stocks[t]['Close'].pct_change()
40	
",DATA_TRANSFORM
3223,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[bank_stocks_30 -----xs---->bank_stocks_87_intermediate_1],"bank_stocks_30_intermediate_1 -----max---->bank_stocks_30
BAC_115_intermediate_2 -----bank stocks[t]---->BAC_115
BAC_115_intermediate_2 -----xs---->BAC_115
BAC_115_intermediate_2 -----plot---->BAC_115",DATA_TRANSFORM
3224,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[returns_34 -----loop---->returns_39_intermediate_1],"pandas -----data frame---->returns_34
loop_returns_34_returns_39 -----restart_loop---->returns_34
BAC_115_intermediate_2 -----loop---->BAC_115
BAC_115_intermediate_2 -----pct change---->BAC_115",DATA_TRANSFORM
3225,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[returns_39 -----end_loop---->loop_returns_34_returns_39],"
",DATA_TRANSFORM
3226,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[loop_returns_34_returns_39 -----restart_loop---->returns_34],"
",DATA_TRANSFORM
3227,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[loop_returns_34_returns_39 -----head---->returns_41],"39	    returns[t+' Return'] = bank_stocks[t]['Close'].pct_change()
40	
41	returns.head()
42	
",DATA_TRANSFORM
3228,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[returns_41 -----returns---->sns_48],"46	
47	import seaborn as sns
48	sns.pairplot(returns[1:])
49	
",EDA
3229,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[returns_41 -----idxmin---->returns_52],"50	
51	
52	returns.idxmin()
53	
",EDA
3230,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[seaborn -----pairplot---->sns_48],"46	
47	import seaborn as sns
48	sns.pairplot(returns[1:])
49	
",EDA
3231,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[seaborn -----distplot---->sns_70],"68	
69	
70	sns.distplot(returns.loc['2015-01-01':'2015-12-31']['MS Return'], color='green', bins =100)
71	
",EDA
3232,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[seaborn -----distplot---->sns_74],"72	
73	
74	sns.distplot(returns.loc['2008-01-01':'2008-12-31']['C Return'], color='red', bins=100)
75	
",EDA
3233,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[seaborn -----set style---->sns_80],"78	import matplotlib.pyplot as plt
79	import seaborn as sns
80	sns.set_style('whitegrid')
81	
",EDA
3234,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[seaborn -----heatmap---->sns_101],"99	
100	
101	sns.heatmap(bank_stocks.xs(key='Close', axis=1, level='Stock Info').corr(), annot=True)
102	
",EDA
3235,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[seaborn -----clustermap---->sns_105],"103	
104	
105	sns.clustermap(data=bank_stocks.xs(key='Close', axis=1, level='Stock Info').corr(), cmap='coolwarm', annot=True)
106	
",EDA
3236,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[returns_52 -----idxmax---->returns_54],"52	returns.idxmin()
53	
54	returns.idxmax()
55	
",EDA
3237,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[returns_54 -----std---->returns_61],"59	
60	# time period
61	returns.std()
62	
",EDA
3238,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[returns_61 -----loc---->returns_64_intermediate_1],"returns_54 -----std---->returns_61
BAC_115_intermediate_2 -----loc---->BAC_115
BAC_115_intermediate_2 -----std---->BAC_115",EDA
3239,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[returns_64 -----returns---->sns_70],"68	
69	
70	sns.distplot(returns.loc['2015-01-01':'2015-12-31']['MS Return'], color='green', bins =100)
71	
",EDA
3240,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[returns_64 -----returns---->sns_74],"72	
73	
74	sns.distplot(returns.loc['2008-01-01':'2008-12-31']['C Return'], color='red', bins=100)
75	
",EDA
3241,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[cufflinks -----go offline---->cf_85],"83	import plotly as py
84	import cufflinks as cf
85	cf.go_offline()
86	
",ENVIRONMENT
3242,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_95 -----select---->BAC_96_intermediate_1],"BAC_95_intermediate_4 -----plot---->BAC_95
BAC_115_intermediate_2 -----select---->BAC_115
BAC_115_intermediate_2 -----loc---->BAC_115",DATA_TRANSFORM
3243,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_96 -----select---->BAC_111_intermediate_1],"BAC_96_intermediate_2 -----plot---->BAC_96
BAC_115_intermediate_2 -----select---->BAC_115
BAC_115_intermediate_2 -----loc---->BAC_115",EDA
3244,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[matplotlib.pyplot -----legend---->plt_97],"95	BAC['Close'].loc['2008-01-01':'2009-01-01'].rolling(window=30).mean().plot(label='30 Day Avg')
96	BAC['Close'].loc['2008-01-01':'2009-01-01'].plot(figsize=(12,6), color='green')
97	plt.legend()
98	
",EDA
3245,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_111 -----select---->BAC_115_intermediate_1],"BAC_111_intermediate_2 -----iplot---->BAC_111
BAC_115_intermediate_2 -----select---->BAC_115
BAC_115_intermediate_2 -----loc---->BAC_115",DATA_TRANSFORM
3246,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_95_intermediate_1 -----loc---->BAC_95_intermediate_2],"BAC_11 -----select---->BAC_95_intermediate_1
BAC_115_intermediate_2 -----loc---->BAC_115
BAC_115_intermediate_2 -----rolling---->BAC_115",DATA_TRANSFORM
3247,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_95_intermediate_2 -----rolling---->BAC_95_intermediate_3],"BAC_95_intermediate_1 -----loc---->BAC_95_intermediate_2
BAC_115_intermediate_2 -----rolling---->BAC_115
BAC_115_intermediate_2 -----mean---->BAC_115",DATA_TRANSFORM
3248,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_95_intermediate_3 -----mean---->BAC_95_intermediate_4],"BAC_95_intermediate_2 -----rolling---->BAC_95_intermediate_3
BAC_115_intermediate_2 -----mean---->BAC_115
BAC_115_intermediate_2 -----plot---->BAC_115",DATA_TRANSFORM
3249,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_95_intermediate_4 -----plot---->BAC_95],"BAC_95_intermediate_3 -----mean---->BAC_95_intermediate_4
BAC_115_intermediate_2 -----plot---->BAC_115
BAC_115_intermediate_2 -----select---->BAC_115",EDA
3250,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[MS_113_intermediate_1 -----loc---->MS_113_intermediate_2],"MS_15 -----select---->MS_113_intermediate_1
BAC_115_intermediate_2 -----loc---->BAC_115
BAC_115_intermediate_2 -----ta plot---->BAC_115",EDA
3251,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[MS_113_intermediate_2 -----ta plot---->MS_113],"MS_113_intermediate_1 -----loc---->MS_113_intermediate_2
BAC_115_intermediate_2 -----ta plot---->BAC_115",EDA
3252,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[bank_stocks_30_intermediate_1 -----max---->bank_stocks_30],"bank_stocks_26 -----xs---->bank_stocks_30_intermediate_1
BAC_115_intermediate_2 -----max---->BAC_115
BAC_115_intermediate_2 -----bank stocks[t]---->BAC_115
BAC_115_intermediate_2 -----xs---->BAC_115",DATA_TRANSFORM
3253,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[bank_stocks_87_intermediate_1 -----plot---->bank_stocks_87_intermediate_2],"bank_stocks_30 -----xs---->bank_stocks_87_intermediate_1
BAC_115_intermediate_2 -----plot---->BAC_115
BAC_115_intermediate_2 -----line---->BAC_115",EDA
3254,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[bank_stocks_87_intermediate_2 -----line---->bank_stocks_87],"bank_stocks_87_intermediate_1 -----plot---->bank_stocks_87_intermediate_2
BAC_115_intermediate_2 -----line---->BAC_115",EDA
3255,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[returns_39_intermediate_1 -----pct change---->returns_39],"returns_34 -----loop---->returns_39_intermediate_1
BAC_115_intermediate_2 -----pct change---->BAC_115
BAC_115_intermediate_2 -----end_loop---->BAC_115",DATA_TRANSFORM
3256,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[returns_64_intermediate_1 -----std---->returns_64],"returns_61 -----loc---->returns_64_intermediate_1
BAC_115_intermediate_2 -----std---->BAC_115
BAC_115_intermediate_2 -----returns---->BAC_115
BAC_115_intermediate_2 -----returns---->BAC_115",EDA
3257,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_96_intermediate_1 -----loc---->BAC_96_intermediate_2],"BAC_95 -----select---->BAC_96_intermediate_1
BAC_115_intermediate_2 -----loc---->BAC_115
BAC_115_intermediate_2 -----plot---->BAC_115",DATA_TRANSFORM
3258,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_96_intermediate_2 -----plot---->BAC_96],"BAC_96_intermediate_1 -----loc---->BAC_96_intermediate_2
BAC_115_intermediate_2 -----plot---->BAC_115
BAC_115_intermediate_2 -----select---->BAC_115",EDA
3259,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_111_intermediate_1 -----loc---->BAC_111_intermediate_2],"BAC_96 -----select---->BAC_111_intermediate_1
BAC_115_intermediate_2 -----loc---->BAC_115
BAC_115_intermediate_2 -----iplot---->BAC_115",EDA
3260,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_111_intermediate_2 -----iplot---->BAC_111],"BAC_111_intermediate_1 -----loc---->BAC_111_intermediate_2
BAC_115_intermediate_2 -----iplot---->BAC_115
BAC_115_intermediate_2 -----select---->BAC_115",EDA
3261,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_115_intermediate_1 -----loc---->BAC_115_intermediate_2],"BAC_111 -----select---->BAC_115_intermediate_1
BAC_115_intermediate_2 -----loc---->BAC_115
BAC_115_intermediate_2 -----ta plot---->BAC_115",DATA_TRANSFORM
3262,00019b0d2ec3c08fd9c975bf7b2265cc83886248.execution_graph,[BAC_115_intermediate_2 -----ta plot---->BAC_115],"BAC_115_intermediate_1 -----loc---->BAC_115_intermediate_2
BAC_115_intermediate_2 -----ta plot---->BAC_115",DATA_TRANSFORM
3263,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[model_12 -----predict---->preds_21],"19	
20	begin = time.clock()
21	preds = model.predict(x)
22	print('Predicted:', decode_predictions(preds))
",MODEL_EVALUATION
3264,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[keras -----applications---->model_12_intermediate_1],"x_16_intermediate_1 -----applications---->x_16
x_16_intermediate_1 -----vgg16---->x_16",ENVIRONMENT
3265,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[img_path_14 -----img path---->img_15],"13	
14	img_path = '../dataset/animal/cat.jpg'
15	img = image.load_img(img_path, target_size=(224, 224))
16	x = image.img_to_array(img)
",DATA_IMPORT_EXTRACTION
3266,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[img_15 -----img---->x_16],"14	img_path = '../dataset/animal/cat.jpg'
15	img = image.load_img(img_path, target_size=(224, 224))
16	x = image.img_to_array(img)
17	x = np.expand_dims(x, axis=0)
",DATA_IMPORT_EXTRACTION
3267,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[keras.preprocessing -----image---->img_15_intermediate_1],"x_16_intermediate_1 -----image---->x_16
x_16_intermediate_1 -----image---->x_16
x_16_intermediate_1 -----load img---->x_16",DATA_IMPORT_EXTRACTION
3268,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[keras.preprocessing -----image---->x_16_intermediate_1],"x_16_intermediate_1 -----image---->x_16
x_16_intermediate_1 -----image---->x_16
x_16_intermediate_1 -----img to array---->x_16",DATA_TRANSFORM
3269,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[x_16 -----x---->x_17],"15	img = image.load_img(img_path, target_size=(224, 224))
16	x = image.img_to_array(img)
17	x = np.expand_dims(x, axis=0)
18	x = preprocess_input(x)
",DATA_TRANSFORM
3270,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[x_17 -----x---->x_18],"16	x = image.img_to_array(img)
17	x = np.expand_dims(x, axis=0)
18	x = preprocess_input(x)
19	
",DATA_TRANSFORM
3271,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[numpy -----expand dims---->x_17],"15	img = image.load_img(img_path, target_size=(224, 224))
16	x = image.img_to_array(img)
17	x = np.expand_dims(x, axis=0)
18	x = preprocess_input(x)
",DATA_TRANSFORM
3272,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[x_18 -----x---->preds_21],"19	
20	begin = time.clock()
21	preds = model.predict(x)
22	print('Predicted:', decode_predictions(preds))
",MODEL_EVALUATION
3273,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[keras.applications.vgg16 -----preprocess input---->x_18],"16	x = image.img_to_array(img)
17	x = np.expand_dims(x, axis=0)
18	x = preprocess_input(x)
19	
",MODEL_EVALUATION
3274,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[time -----clock---->begin_20],"18	x = preprocess_input(x)
19	
20	begin = time.clock()
21	preds = model.predict(x)
",ENVIRONMENT
3275,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[model_12_intermediate_1 -----vgg16---->model_12],"keras -----applications---->model_12_intermediate_1
x_16_intermediate_1 -----vgg16---->x_16
x_16_intermediate_1 -----predict---->x_16",ENVIRONMENT
3276,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[img_15_intermediate_1 -----load img---->img_15],"keras.preprocessing -----image---->img_15_intermediate_1
x_16_intermediate_1 -----load img---->x_16
x_16_intermediate_1 -----img---->x_16",DATA_IMPORT_EXTRACTION
3277,00019e50c5f53365025cb1b47543ecbc01b394ee.execution_graph,[x_16_intermediate_1 -----img to array---->x_16],"keras.preprocessing -----image---->x_16_intermediate_1
x_16_intermediate_1 -----img to array---->x_16
x_16_intermediate_1 -----x---->x_16",DATA_TRANSFORM
3278,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[talks_6 -----talks---->talks_7],"5	
6	talks = pd.read_csv(""talks.tsv"", sep=""\t"", header=0)
7	talks
8	
",DATA_IMPORT_EXTRACTION
3279,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[pandas -----read csv---->talks_6],"4	
5	
6	talks = pd.read_csv(""talks.tsv"", sep=""\t"", header=0)
7	talks
",DATA_IMPORT_EXTRACTION
3280,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_filename_25 -----md filename---->md_filename_59],"57	        
58	        
59	    md_filename = os.path.basename(md_filename)
60	    #print(md)
",MISSING
3281,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[html_filename_26 -----add---->md_37],"35	        md += 'type: ""Talk""\n'
36	    
37	    md += ""permalink: /talks/"" + html_filename + ""\n""
38	    
",DATA_TRANSFORM
3282,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_29 -----add---->md_30],"28	    
29	    md = ""---\ntitle: \""""   + item.title + '""\n'
30	    md += ""collection: talks"" + ""\n""
31	    
",DATA_TRANSFORM
3283,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_30 -----if---->md_33_intermediate_1],"md_29 -----add---->md_30
md_filename_59_intermediate_1 -----if---->md_filename_59
md_filename_59_intermediate_1 -----else---->md_filename_59
md_filename_59_intermediate_1 -----add---->md_filename_59",DATA_TRANSFORM
3284,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_30 -----else---->md_35_intermediate_1],"md_29 -----add---->md_30
md_filename_59_intermediate_1 -----if---->md_filename_59
md_filename_59_intermediate_1 -----else---->md_filename_59
md_filename_59_intermediate_1 -----add---->md_filename_59",DATA_TRANSFORM
3285,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_33 -----add---->md_37],"
",DATA_TRANSFORM
3286,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_35 -----add---->md_37],"
",DATA_TRANSFORM
3287,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_37 -----if---->md_40_intermediate_1],"html_filename_26 -----add---->md_37
md_33 -----add---->md_37
md_35 -----add---->md_37
md_filename_59_intermediate_1 -----if---->md_filename_59
md_filename_59_intermediate_1 -----add---->md_filename_59",DATA_TRANSFORM
3288,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_40 -----if---->md_43_intermediate_1],"md_40_intermediate_1 -----add---->md_40
md_filename_59_intermediate_1 -----if---->md_filename_59
md_filename_59_intermediate_1 -----add---->md_filename_59",DATA_TRANSFORM
3289,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_43 -----if---->md_46_intermediate_1],"md_43_intermediate_2 -----str---->md_43
md_filename_59_intermediate_1 -----if---->md_filename_59
md_filename_59_intermediate_1 -----add---->md_filename_59",NOT_INTERESTING
3290,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_46 -----add---->md_48],"46	        md += 'location: ""' + str(item.location) + '""\n'
47	           
48	    md += ""---\n""
49	    
",DATA_TRANSFORM
3291,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_48 -----if---->md_52_intermediate_1],"md_46 -----add---->md_48
md_filename_59_intermediate_1 -----if---->md_filename_59
md_filename_59_intermediate_1 -----add---->md_filename_59",DATA_TRANSFORM
3292,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_52 -----if---->md_56_intermediate_1],"md_52_intermediate_1 -----add---->md_52
md_filename_59_intermediate_1 -----if---->md_filename_59
md_filename_59_intermediate_1 -----add---->md_filename_59",DATA_TRANSFORM
3293,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_56 -----md---->f_63],"61	    
62	    with open(""../_talks/"" + md_filename, 'w') as f:
63	        f.write(md)
64	
",DATA_EXPORT
3294,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[os -----path---->md_filename_59_intermediate_1],"md_filename_59_intermediate_1 -----path---->md_filename_59
md_filename_59_intermediate_1 -----basename---->md_filename_59",DATA_TRANSFORM
3295,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_33_intermediate_1 -----add---->md_33],"md_30 -----if---->md_33_intermediate_1
md_filename_59_intermediate_1 -----add---->md_filename_59
md_filename_59_intermediate_1 -----add---->md_filename_59",DATA_TRANSFORM
3296,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_35_intermediate_1 -----add---->md_35],"md_30 -----else---->md_35_intermediate_1
md_filename_59_intermediate_1 -----add---->md_filename_59
md_filename_59_intermediate_1 -----add---->md_filename_59",DATA_TRANSFORM
3297,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_40_intermediate_1 -----add---->md_40],"md_37 -----if---->md_40_intermediate_1
md_filename_59_intermediate_1 -----add---->md_filename_59
md_filename_59_intermediate_1 -----if---->md_filename_59",DATA_TRANSFORM
3298,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_43_intermediate_1 -----add---->md_43_intermediate_2],"md_40 -----if---->md_43_intermediate_1
md_filename_59_intermediate_1 -----add---->md_filename_59
md_filename_59_intermediate_1 -----str---->md_filename_59",DATA_TRANSFORM
3299,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_43_intermediate_2 -----str---->md_43],"md_43_intermediate_1 -----add---->md_43_intermediate_2
md_filename_59_intermediate_1 -----str---->md_filename_59
md_filename_59_intermediate_1 -----if---->md_filename_59",DATA_TRANSFORM
3300,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_46_intermediate_1 -----add---->md_46_intermediate_2],"md_43 -----if---->md_46_intermediate_1
md_filename_59_intermediate_1 -----add---->md_filename_59
md_filename_59_intermediate_1 -----str---->md_filename_59",DATA_TRANSFORM
3301,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_46_intermediate_2 -----str---->md_46],"md_46_intermediate_1 -----add---->md_46_intermediate_2
md_filename_59_intermediate_1 -----str---->md_filename_59
md_filename_59_intermediate_1 -----add---->md_filename_59",DATA_TRANSFORM
3302,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_52_intermediate_1 -----add---->md_52],"md_48 -----if---->md_52_intermediate_1
md_filename_59_intermediate_1 -----add---->md_filename_59
md_filename_59_intermediate_1 -----if---->md_filename_59",DATA_TRANSFORM
3303,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_56_intermediate_1 -----add---->md_56],"md_52 -----if---->md_56_intermediate_1
md_filename_59_intermediate_1 -----add---->md_filename_59
md_filename_59_intermediate_1 -----md---->md_filename_59",DATA_TRANSFORM
3304,0001abd6658c87dedd01255a1f147ed23b77d68f.execution_graph,[md_filename_59_intermediate_1 -----basename---->md_filename_59],"os -----path---->md_filename_59_intermediate_1
md_filename_59_intermediate_1 -----basename---->md_filename_59",DATA_TRANSFORM
3305,0001ae927afb280b92ef85b93cd28a7d7676f513.execution_graph,[hide_me_6 -----hide me---->hide_me_30],"28	<form action=""javascript:code_toggle()""><input style=""opacity:0"" type=""submit"" value=""Click here to toggle on/off the raw code.""></form>''')
29	
30	hide_me
31	def square(x):
",EDA
3306,0001ae927afb280b92ef85b93cd28a7d7676f513.execution_graph,[IPython.display -----html---->HTML_7],"5	
6	hide_me = ''
7	HTML('''<script>
8	code_show=true; 
",ENVIRONMENT
3307,0001ae927afb280b92ef85b93cd28a7d7676f513.execution_graph,[hide_me_30 -----hide me---->hide_me_34],"32	    return x * x
33	
34	hide_me
35	interact(square, x=10);
",EDA
3308,0001ae927afb280b92ef85b93cd28a7d7676f513.execution_graph,[hide_me_34 -----hide me---->hide_me_37],"35	interact(square, x=10);
36	
37	hide_me
38	interact(square, x=(0, 100, 10));
",EDA
3309,0001ae927afb280b92ef85b93cd28a7d7676f513.execution_graph,[ipywidgets -----interact---->interact_35],"33	
34	hide_me
35	interact(square, x=10);
36	
",ENVIRONMENT
3310,0001ae927afb280b92ef85b93cd28a7d7676f513.execution_graph,[ipywidgets -----interact---->interact_38],"36	
37	hide_me
38	interact(square, x=(0, 100, 10));
39	
",EDA
3311,0001ae927afb280b92ef85b93cd28a7d7676f513.execution_graph,[ipywidgets -----interact---->interact_45],"43	
44	hide_me
45	interact(friends, name='Sam', number=(5, 10));
46	
",EDA
3312,0001ae927afb280b92ef85b93cd28a7d7676f513.execution_graph,[ipywidgets -----interact---->interact_48],"46	
47	hide_me
48	interact(friends, name='Sam', number={'One': 1, 'Five': 5, 'Ten': 10});
",EDA
3313,0001ae927afb280b92ef85b93cd28a7d7676f513.execution_graph,[hide_me_37 -----hide me---->hide_me_40],"38	interact(square, x=(0, 100, 10));
39	
40	hide_me
41	def friends(name, number):
",EDA
3314,0001ae927afb280b92ef85b93cd28a7d7676f513.execution_graph,[hide_me_40 -----hide me---->hide_me_44],"42	    return '{} has {} friends!'.format(name, number)
43	
44	hide_me
45	interact(friends, name='Sam', number=(5, 10));
",EDA
3315,0001ae927afb280b92ef85b93cd28a7d7676f513.execution_graph,[hide_me_44 -----hide me---->hide_me_47],"45	interact(friends, name='Sam', number=(5, 10));
46	
47	hide_me
48	interact(friends, name='Sam', number={'One': 1, 'Five': 5, 'Ten': 10});
",DATA_TRANSFORM
3316,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_9 -----world map---->world_map_12],"10	
11	# display world map
12	world_map
13	
",EDA
3317,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->world_map_9],"7	
8	# define the world map
9	world_map = folium.Map()
10	
",EDA
3318,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->world_map_15],"13	
14	# define the world map centered around Canada with a low zoom level
15	world_map = folium.Map(location=[56.130, -106.35], zoom_start=4)
16	
",EDA
3319,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->world_map_21],"19	
20	# define the world map centered around Canada with a higher zoom level
21	world_map = folium.Map(location=[56.130, -106.35], zoom_start=8)
22	
",EDA
3320,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->mexico_map_33],"31	
32	# define the world map centered around Canada with a higher zoom level
33	mexico_map = folium.Map(location=[mexico_latitude, mexico_longitude], zoom_start=4)
34	
",EDA
3321,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->world_map_39],"37	
38	# create a Stamen Toner map of the world centered around Canada
39	world_map = folium.Map(location=[56.130, -106.35], zoom_start=4, tiles='Stamen Toner')
40	
",EDA
3322,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->world_map_45],"43	
44	# create a Stamen Toner map of the world centered around Canada
45	world_map = folium.Map(location=[56.130, -106.35], zoom_start=4, tiles='Stamen Terrain')
46	
",EDA
3323,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->world_map_51],"49	
50	# create a world map with a Mapbox Bright style.
51	world_map = folium.Map(tiles='Mapbox Bright')
52	
",EDA
3324,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->mexico_map_63],"61	
62	# define the world map centered around Canada with a higher zoom level
63	mexico_map = folium.Map(location=[mexico_latitude, mexico_longitude], zoom_start=6, tiles='Stamen Terrain')
64	
",EDA
3325,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->sanfran_map_87],"85	
86	# create map and display it
87	sanfran_map = folium.Map(location=[latitude, longitude], zoom_start=12)
88	
",EDA
3326,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->incidents_93_intermediate_1],"threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----features---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----plugins---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----feature group---->threshold_scale_236",EDA
3327,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->incidents_112_intermediate_1],"threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----features---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----plugins---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----feature group---->threshold_scale_236",EDA
3328,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----marker---->folium_133_intermediate_1],"threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----features---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----plugins---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----add to---->threshold_scale_236",EDA
3329,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->sanfran_map_139],"137	
138	# create map and display it
139	sanfran_map = folium.Map(location=[latitude, longitude], zoom_start=12)
140	
",EDA
3330,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----features---->folium_143_intermediate_1],"threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----features---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----plugins---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----circle marker---->threshold_scale_236",EDA
3331,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->sanfran_map_159],"157	
158	# let's start again with a clean copy of the map of San Francisco
159	sanfran_map = folium.Map(location = [latitude, longitude], zoom_start = 12)
160	
",EDA
3332,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----plugins---->incidents_162_intermediate_1],"threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----features---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----plugins---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker cluster---->threshold_scale_236",EDA
3333,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----marker---->folium_166_intermediate_1],"threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----features---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----plugins---->threshold_scale_236
threshold_scale_236_intermediate_1 -----marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----map---->threshold_scale_236
threshold_scale_236_intermediate_1 -----add to---->threshold_scale_236",EDA
3334,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->world_map_212],"210	
211	# create a plain world map
212	world_map = folium.Map(location=[0, 0], zoom_start=2, tiles='Mapbox Bright')
213	
",EDA
3335,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium -----map---->world_map_239],"237	
238	# let Folium determine the scale.
239	world_map = folium.Map(location=[0, 0], zoom_start=2, tiles='Mapbox Bright')
240	world_map.choropleth(
",EDA
3336,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_12 -----reassign---->world_map_15],"13	
14	# define the world map centered around Canada with a low zoom level
15	world_map = folium.Map(location=[56.130, -106.35], zoom_start=4)
16	
",EDA
3337,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_15 -----world map---->world_map_18],"16	
17	# display world map
18	world_map
19	
",EDA
3338,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_18 -----reassign---->world_map_21],"19	
20	# define the world map centered around Canada with a higher zoom level
21	world_map = folium.Map(location=[56.130, -106.35], zoom_start=8)
22	
",EDA
3339,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_21 -----world map---->world_map_24],"22	
23	# display world map
24	world_map
25	
",EDA
3340,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_24 -----reassign---->world_map_39],"37	
38	# create a Stamen Toner map of the world centered around Canada
39	world_map = folium.Map(location=[56.130, -106.35], zoom_start=4, tiles='Stamen Toner')
40	
",EDA
3341,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[mexico_latitude_29 -----reassign---->mexico_latitude_59],"57	
58	# define Mexico's geolocation coordinates
59	mexico_latitude = 23.6345 
60	mexico_longitude = -102.5528
",NOT_INTERESTING
3342,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[mexico_longitude_30 -----reassign---->mexico_longitude_60],"58	# define Mexico's geolocation coordinates
59	mexico_latitude = 23.6345 
60	mexico_longitude = -102.5528
61	
",DATA_TRANSFORM
3343,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[mexico_map_33 -----mexico map---->mexico_map_36],"34	
35	# display world map
36	mexico_map
37	
",EDA
3344,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[mexico_map_36 -----reassign---->mexico_map_63],"61	
62	# define the world map centered around Canada with a higher zoom level
63	mexico_map = folium.Map(location=[mexico_latitude, mexico_longitude], zoom_start=6, tiles='Stamen Terrain')
64	
",DATA_TRANSFORM
3345,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_39 -----world map---->world_map_42],"40	
41	# display map
42	world_map
43	
",EDA
3346,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_42 -----reassign---->world_map_45],"43	
44	# create a Stamen Toner map of the world centered around Canada
45	world_map = folium.Map(location=[56.130, -106.35], zoom_start=4, tiles='Stamen Terrain')
46	
",EDA
3347,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_45 -----world map---->world_map_48],"46	
47	# display map
48	world_map
49	
",EDA
3348,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_48 -----reassign---->world_map_51],"49	
50	# create a world map with a Mapbox Bright style.
51	world_map = folium.Map(tiles='Mapbox Bright')
52	
",EDA
3349,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_51 -----world map---->world_map_54],"52	
53	# display the map
54	world_map
55	
",EDA
3350,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_54 -----reassign---->world_map_212],"210	
211	# create a plain world map
212	world_map = folium.Map(location=[0, 0], zoom_start=2, tiles='Mapbox Bright')
213	
",EDA
3351,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[mexico_map_63 -----mexico map---->mexico_map_66],"64	
65	# display world map
66	mexico_map
67	
",EDA
3352,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_incidents_68 -----head---->df_incidents_72],"70	print('Dataset downloaded and read into a pandas dataframe!')
71	
72	df_incidents.head()
73	
",EDA
3353,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[pandas -----read csv---->df_incidents_68],"66	mexico_map
67	
68	df_incidents = pd.read_csv('https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/DV0101EN/labs/Data_Files/Police_Department_Incidents_-_Previous_Year__2016_.csv')
69	
",DATA_IMPORT_EXTRACTION
3354,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[pandas -----read excel---->df_can_175],"173	sanfran_map
174	
175	df_can = pd.read_excel('https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/DV0101EN/labs/Data_Files/Canada.xlsx',
176	                     sheet_name='Canada by Citizenship',
",DATA_IMPORT_EXTRACTION
3355,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_incidents_72 -----shape---->df_incidents_74],"72	df_incidents.head()
73	
74	df_incidents.shape
75	
",EDA
3356,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_incidents_74 -----iloc---->df_incidents_78],"76	# get the first 100 crimes in the df_incidents dataframe
77	limit = 100
78	df_incidents = df_incidents.iloc[0:limit, :]
79	
",DATA_TRANSFORM
3357,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[limit_77 -----limit---->df_incidents_78],"76	# get the first 100 crimes in the df_incidents dataframe
77	limit = 100
78	df_incidents = df_incidents.iloc[0:limit, :]
79	
",DATA_TRANSFORM
3358,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_incidents_78 -----shape---->df_incidents_80],"78	df_incidents = df_incidents.iloc[0:limit, :]
79	
80	df_incidents.shape
81	
",DATA_TRANSFORM
3359,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_incidents_80 -----df incidents---->latitudes_128],"126	
127	# add pop-up text to each marker on the map
128	latitudes = list(df_incidents.Y)
129	longitudes = list(df_incidents.X)
",DATA_TRANSFORM
3360,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_incidents_80 -----df incidents---->longitudes_129],"127	# add pop-up text to each marker on the map
128	latitudes = list(df_incidents.Y)
129	longitudes = list(df_incidents.X)
130	labels = list(df_incidents.Category)
",DATA_TRANSFORM
3361,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_incidents_80 -----df incidents---->labels_130],"128	latitudes = list(df_incidents.Y)
129	longitudes = list(df_incidents.X)
130	labels = list(df_incidents.Category)
131	
",DATA_TRANSFORM
3362,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[sanfran_map_87 -----sanfran map---->sanfran_map_90],"88	
89	# display the map of San Francisco
90	sanfran_map
91	
",EDA
3363,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[sanfran_map_90 -----add child---->sanfran_map_109],"107	
108	# add incidents to map
109	sanfran_map.add_child(incidents)
110	
",EDA
3364,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[incidents_93 -----loop---->incidents_97_intermediate_1],"loop_incidents_93_incidents_97 -----restart_loop---->incidents_93
incidents_93_intermediate_1 -----feature group---->incidents_93
threshold_scale_236_intermediate_1 -----loop---->threshold_scale_236
threshold_scale_236_intermediate_1 -----add child---->threshold_scale_236",EDA
3365,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[incidents_97 -----end_loop---->loop_incidents_93_incidents_97],"
",DATA_TRANSFORM
3366,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[loop_incidents_93_incidents_97 -----restart_loop---->incidents_93],"
",EDA
3367,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[loop_incidents_93_incidents_97 -----incidents---->sanfran_map_109],"107	
108	# add incidents to map
109	sanfran_map.add_child(incidents)
110	
",EDA
3368,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[loop_incidents_93_incidents_97 -----reassign---->incidents_112],"110	
111	# instantiate a feature group for the incidents in the dataframe
112	incidents = folium.map.FeatureGroup()
113	
",EDA
3369,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[sanfran_map_109 -----sanfran map---->folium_133],"131	
132	for lat, lng, label in zip(latitudes, longitudes, labels):
133	    folium.Marker([lat, lng], popup=label).add_to(sanfran_map)    
134	    
",EDA
3370,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[sanfran_map_109 -----add child---->sanfran_map_136],"134	    
135	# add incidents to map
136	sanfran_map.add_child(incidents)
137	
",EDA
3371,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[incidents_112 -----loop---->incidents_116_intermediate_1],"loop_incidents_93_incidents_97 -----reassign---->incidents_112
loop_incidents_112_incidents_116 -----restart_loop---->incidents_112
incidents_112_intermediate_1 -----feature group---->incidents_112
threshold_scale_236_intermediate_1 -----loop---->threshold_scale_236
threshold_scale_236_intermediate_1 -----add child---->threshold_scale_236",EDA
3372,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[incidents_116 -----end_loop---->loop_incidents_112_incidents_116],"
",EDA
3373,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[loop_incidents_112_incidents_116 -----restart_loop---->incidents_112],"
",EDA
3374,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[loop_incidents_112_incidents_116 -----incidents---->sanfran_map_136],"134	    
135	# add incidents to map
136	sanfran_map.add_child(incidents)
137	
",EDA
3375,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[loop_incidents_112_incidents_116 -----reassign---->incidents_162],"160	
161	# instantiate a mark cluster object for the incidents in the dataframe
162	incidents = plugins.MarkerCluster().add_to(sanfran_map)
163	
",EDA
3376,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium_133 -----loop---->folium_143],"
",EDA
3377,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[sanfran_map_136 -----reassign---->sanfran_map_139],"137	
138	# create map and display it
139	sanfran_map = folium.Map(location=[latitude, longitude], zoom_start=12)
140	
",EDA
3378,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[sanfran_map_139 -----sanfran map---->folium_143],"141	# loop through the 100 crimes and add each to the map
142	for lat, lng, label in zip(df_incidents.Y, df_incidents.X, df_incidents.Category):
143	    folium.features.CircleMarker(
144	        [lat, lng],
",EDA
3379,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[sanfran_map_139 -----sanfran map---->sanfran_map_154],"152	
153	# show map
154	sanfran_map
155	
",ENVIRONMENT
3380,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium_143 -----end_loop---->loop_folium_133_folium_143],"
",EDA
3381,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[loop_folium_133_folium_143 -----restart_loop---->folium_133],"
",EDA
3382,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[loop_folium_133_folium_143 -----loop---->folium_166],"
",EDA
3383,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[sanfran_map_154 -----reassign---->sanfran_map_159],"157	
158	# let's start again with a clean copy of the map of San Francisco
159	sanfran_map = folium.Map(location = [latitude, longitude], zoom_start = 12)
160	
",ENVIRONMENT
3384,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[sanfran_map_159 -----sanfran map---->incidents_162],"160	
161	# instantiate a mark cluster object for the incidents in the dataframe
162	incidents = plugins.MarkerCluster().add_to(sanfran_map)
163	
",EDA
3385,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[sanfran_map_159 -----sanfran map---->sanfran_map_173],"171	
172	# display map
173	sanfran_map
174	
",EDA
3386,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[incidents_162 -----incidents---->folium_166],"164	# loop through the dataframe and add each data point to the mark cluster
165	for lat, lng, label, in zip(df_incidents.Y, df_incidents.X, df_incidents.Category):
166	    folium.Marker(
167	        location=[lat, lng],
",EDA
3387,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium_166 -----end_loop---->loop_loop_folium_133_folium_143_folium_166],"
",EDA
3388,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[loop_loop_folium_133_folium_143_folium_166 -----restart_loop---->loop_folium_133_folium_143],"
",EDA
3389,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_can_175 -----head---->df_can_182],"180	print('Data downloaded and read into a dataframe!')
181	
182	df_can.head()
183	
",EDA
3390,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_can_182 -----drop---->df_can_188],"186	
187	# clean up the dataset to remove unnecessary columns (eg. REG) 
188	df_can.drop(['AREA','REG','DEV','Type','Coverage'], axis=1, inplace=True)
189	
",DATA_TRANSFORM
3391,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_can_188 -----rename---->df_can_191],"189	
190	# let's rename the columns so that they make sense
191	df_can.rename(columns={'OdName':'Country', 'AreaName':'Continent','RegName':'Region'}, inplace=True)
192	
",DATA_TRANSFORM
3392,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_can_191 -----list---->df_can_194],"192	
193	# for sake of consistency, let's also make all column labels of type string
194	df_can.columns = list(map(str, df_can.columns))
195	
",DATA_TRANSFORM
3393,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_can_194 -----sum---->df_can_197],"195	
196	# add total column
197	df_can['Total'] = df_can.sum(axis=1)
198	
",DATA_TRANSFORM
3394,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[df_can_197 -----head---->df_can_203],"201	print ('data dimensions:', df_can.shape)
202	
203	df_can.head()
204	
",EDA
3395,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_geo_209 -----reassign---->world_geo_229],"227	world_map
228	
229	world_geo = r'world_countries.json'
230	
",NOT_INTERESTING
3396,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_212 -----choropleth---->world_map_215],"213	
214	# generate choropleth map using the total immigration of each country to Canada from 1980 to 2013
215	world_map.choropleth(
216	    geo_data=world_geo,
",EDA
3397,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_215 -----world map---->world_map_227],"225	
226	# display map
227	world_map
228	
",EDA
3398,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_227 -----reassign---->world_map_239],"237	
238	# let Folium determine the scale.
239	world_map = folium.Map(location=[0, 0], zoom_start=2, tiles='Mapbox Bright')
240	world_map.choropleth(
",EDA
3399,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[threshold_scale_232 -----tolist---->threshold_scale_235],"233	                              df_can['Total'].max(),
234	                              6, dtype=int)
235	threshold_scale = threshold_scale.tolist() # change the numpy array to a list
236	threshold_scale[-1] = threshold_scale[-1] + 1 # make sure that the last value of the list is greater than the maximum immigration
",DATA_TRANSFORM
3400,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[numpy -----linspace---->threshold_scale_232],"230	
231	# create a numpy array of length 6 and has linear spacing from the minium total immigration to the maximum total immigration
232	threshold_scale = np.linspace(df_can['Total'].min(),
233	                              df_can['Total'].max(),
",DATA_TRANSFORM
3401,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[threshold_scale_235 -----threshold scale[-1]---->threshold_scale_236_intermediate_1],"threshold_scale_232 -----tolist---->threshold_scale_235
threshold_scale_236_intermediate_1 -----threshold scale[-1]---->threshold_scale_236
threshold_scale_236_intermediate_1 -----add---->threshold_scale_236",DATA_TRANSFORM
3402,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_239 -----choropleth---->world_map_240],"238	# let Folium determine the scale.
239	world_map = folium.Map(location=[0, 0], zoom_start=2, tiles='Mapbox Bright')
240	world_map.choropleth(
241	    geo_data=world_geo,
",EDA
3403,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[world_map_240 -----world map---->world_map_252],"250	    reset=True
251	)
252	world_map
",EDA
3404,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[incidents_93_intermediate_1 -----feature group---->incidents_93],"folium -----map---->incidents_93_intermediate_1
threshold_scale_236_intermediate_1 -----feature group---->threshold_scale_236
threshold_scale_236_intermediate_1 -----loop---->threshold_scale_236",EDA
3405,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[incidents_112_intermediate_1 -----feature group---->incidents_112],"folium -----map---->incidents_112_intermediate_1
threshold_scale_236_intermediate_1 -----feature group---->threshold_scale_236
threshold_scale_236_intermediate_1 -----loop---->threshold_scale_236",EDA
3406,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium_133_intermediate_1 -----add to---->folium_133],"folium -----marker---->folium_133_intermediate_1
threshold_scale_236_intermediate_1 -----add to---->threshold_scale_236
threshold_scale_236_intermediate_1 -----loop---->threshold_scale_236",EDA
3407,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium_143_intermediate_1 -----circle marker---->folium_143_intermediate_2],"folium -----features---->folium_143_intermediate_1
threshold_scale_236_intermediate_1 -----circle marker---->threshold_scale_236
threshold_scale_236_intermediate_1 -----add to---->threshold_scale_236",EDA
3408,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium_143_intermediate_2 -----add to---->folium_143],"folium_143_intermediate_1 -----circle marker---->folium_143_intermediate_2
threshold_scale_236_intermediate_1 -----add to---->threshold_scale_236
threshold_scale_236_intermediate_1 -----end_loop---->threshold_scale_236",EDA
3409,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[incidents_162_intermediate_1 -----marker cluster---->incidents_162_intermediate_2],"folium -----plugins---->incidents_162_intermediate_1
threshold_scale_236_intermediate_1 -----marker cluster---->threshold_scale_236
threshold_scale_236_intermediate_1 -----add to---->threshold_scale_236",EDA
3410,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[incidents_162_intermediate_2 -----add to---->incidents_162],"incidents_162_intermediate_1 -----marker cluster---->incidents_162_intermediate_2
threshold_scale_236_intermediate_1 -----add to---->threshold_scale_236
threshold_scale_236_intermediate_1 -----incidents---->threshold_scale_236",EDA
3411,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[folium_166_intermediate_1 -----add to---->folium_166],"folium -----marker---->folium_166_intermediate_1
threshold_scale_236_intermediate_1 -----add to---->threshold_scale_236
threshold_scale_236_intermediate_1 -----end_loop---->threshold_scale_236",EDA
3412,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[incidents_97_intermediate_1 -----add child---->incidents_97],"incidents_93 -----loop---->incidents_97_intermediate_1
threshold_scale_236_intermediate_1 -----add child---->threshold_scale_236
threshold_scale_236_intermediate_1 -----end_loop---->threshold_scale_236",DATA_TRANSFORM
3413,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[incidents_116_intermediate_1 -----add child---->incidents_116],"incidents_112 -----loop---->incidents_116_intermediate_1
threshold_scale_236_intermediate_1 -----add child---->threshold_scale_236
threshold_scale_236_intermediate_1 -----end_loop---->threshold_scale_236",EDA
3414,0001af825ab7ac58d6e5d600df113ab877c2e712.execution_graph,[threshold_scale_236_intermediate_1 -----add---->threshold_scale_236],"threshold_scale_235 -----threshold scale[-1]---->threshold_scale_236_intermediate_1
threshold_scale_236_intermediate_1 -----add---->threshold_scale_236",DATA_TRANSFORM
3415,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[names_20 -----reassign---->names_52],"50	#Second Lesson
51	
52	names = ['Bob','Jessica','Mary','John','Mel']
53	
",ENVIRONMENT
3416,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[BabyDataSet_23 -----baby data set---->df_25],"23	BabyDataSet  = list(zip(names, births))
24	
25	df = pd.DataFrame(BabyDataSet, columns=[""Name"", ""YearOfBirth""])
26	
",DATA_EXPORT
3417,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_25 -----to csv---->df_27],"25	df = pd.DataFrame(BabyDataSet, columns=[""Name"", ""YearOfBirth""])
26	
27	df.to_csv(""./Data/pandas/BabyNameYear.csv"", index= False, header= False)
28	
",DATA_EXPORT
3418,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[pandas -----data frame---->df_25],"23	BabyDataSet  = list(zip(names, births))
24	
25	df = pd.DataFrame(BabyDataSet, columns=[""Name"", ""YearOfBirth""])
26	
",DATA_TRANSFORM
3419,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[pandas -----read csv---->df_29],"27	df.to_csv(""./Data/pandas/BabyNameYear.csv"", index= False, header= False)
28	
29	df = pd.read_csv(""./Data/pandas/BabyNameYear.csv"", header = None, names = [""Name"", ""BirthYear""])
30	
",DATA_IMPORT_EXTRACTION
3420,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[pandas -----data frame---->dataSet_64],"62	dataArray = list(zip(name1000, births1000))
63	
64	dataSet = pd.DataFrame(dataArray)
65	
",DATA_TRANSFORM
3421,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_27 -----reassign---->df_29],"27	df.to_csv(""./Data/pandas/BabyNameYear.csv"", index= False, header= False)
28	
29	df = pd.read_csv(""./Data/pandas/BabyNameYear.csv"", header = None, names = [""Name"", ""BirthYear""])
30	
",DATA_IMPORT_EXTRACTION
3422,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_29 -----birth year---->df_35_intermediate_1],"pandas -----read csv---->df_29
df_27 -----reassign---->df_29
births1000_60_intermediate_1 -----birth year---->births1000_60
births1000_60_intermediate_1 -----dtype---->births1000_60",DATA_TRANSFORM
3423,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[location_32 -----location---->os_33],"31	import os
32	location= ""./Data/pandas/BabyNameYear.csv""
33	os.remove(location)
34	
",NOT_INTERESTING
3424,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[os -----remove---->os_33],"31	import os
32	location= ""./Data/pandas/BabyNameYear.csv""
33	os.remove(location)
34	
",ENVIRONMENT
3425,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_35 -----sort values---->df_37_intermediate_1],"df_35_intermediate_1 -----dtype---->df_35
births1000_60_intermediate_1 -----sort values---->births1000_60
births1000_60_intermediate_1 -----birth year---->births1000_60",DATA_TRANSFORM
3426,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_37 -----head---->df_39],"37	df.sort_values(""Name"", ascending= False).BirthYear.max()
38	
39	df.head()
40	
",EDA
3427,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_39 -----select---->df_41_intermediate_1],"df_37 -----head---->df_39
births1000_60_intermediate_1 -----select---->births1000_60
births1000_60_intermediate_1 -----plot---->births1000_60",EDA
3428,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_41 -----select---->MaxValue_42_intermediate_1],"df_41_intermediate_1 -----plot---->df_41
births1000_60_intermediate_1 -----select---->births1000_60
births1000_60_intermediate_1 -----select---->births1000_60
births1000_60_intermediate_1 -----max---->births1000_60",EDA
3429,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_41 -----select---->MaxName_43_intermediate_1],"df_41_intermediate_1 -----plot---->df_41
births1000_60_intermediate_1 -----select---->births1000_60
births1000_60_intermediate_1 -----select---->births1000_60
births1000_60_intermediate_1 -----birth year---->births1000_60
births1000_60_intermediate_1 -----equal---->births1000_60",EDA
3430,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[MaxValue_42 -----max value---->MaxName_43_intermediate_1],"MaxValue_42_intermediate_1 -----max---->MaxValue_42
births1000_60_intermediate_1 -----max value---->births1000_60
births1000_60_intermediate_1 -----max value---->births1000_60
births1000_60_intermediate_1 -----birth year---->births1000_60
births1000_60_intermediate_1 -----equal---->births1000_60",EDA
3431,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[MaxValue_42 -----max value---->Text_44],"42	MaxValue = df['BirthYear'].max()
43	MaxName = df[""Name""][df.BirthYear == MaxValue]
44	Text = str(MaxValue) + "" - "" + MaxName
45	plt.annotate(Text, xy=(1, MaxValue), xytext=(8, 0), 
",EDA
3432,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[MaxName_43 -----max name---->Text_44_intermediate_1],"MaxName_43_intermediate_1 -----equal---->MaxName_43
MaxName_43_intermediate_2 -----equal---->MaxName_43
births1000_60_intermediate_1 -----max name---->births1000_60
births1000_60_intermediate_1 -----add---->births1000_60",EDA
3433,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[Text_44 -----text---->plt_45],"43	MaxName = df[""Name""][df.BirthYear == MaxValue]
44	Text = str(MaxValue) + "" - "" + MaxName
45	plt.annotate(Text, xy=(1, MaxValue), xytext=(8, 0), 
46	                 xycoords=('axes fraction', 'data'), textcoords='offset points')
",EDA
3434,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[matplotlib.pyplot -----annotate---->plt_45],"43	MaxName = df[""Name""][df.BirthYear == MaxValue]
44	Text = str(MaxValue) + "" - "" + MaxName
45	plt.annotate(Text, xy=(1, MaxValue), xytext=(8, 0), 
46	                 xycoords=('axes fraction', 'data'), textcoords='offset points')
",EDA
3435,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,"[names_52 -----names[randint(0,4)]---->name1000_58]","56	random.seed(31)
57	
58	name1000 = [names[randint(0,4)] for i in range(1000)]
59	
",DATA_TRANSFORM
3436,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[random -----seed---->random_56],"54	from random import randint
55	import random
56	random.seed(31)
57	
",ENVIRONMENT
3437,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[random -----randint---->name1000_58_intermediate_1],"births1000_60_intermediate_1 -----seed---->births1000_60
births1000_60_intermediate_1 -----randint---->births1000_60
births1000_60_intermediate_1 -----randint---->births1000_60
births1000_60_intermediate_1 -----range---->births1000_60",MODEL_TRAIN
3438,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[random -----randint---->births1000_60_intermediate_1],"births1000_60_intermediate_1 -----seed---->births1000_60
births1000_60_intermediate_1 -----randint---->births1000_60
births1000_60_intermediate_1 -----randint---->births1000_60
births1000_60_intermediate_1 -----range---->births1000_60",MODEL_TRAIN
3439,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[dataArray_62 -----data array---->dataSet_64],"62	dataArray = list(zip(name1000, births1000))
63	
64	dataSet = pd.DataFrame(dataArray)
65	
",DATA_TRANSFORM
3440,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[dataSet_64 -----data set---->dataSet_66],"64	dataSet = pd.DataFrame(dataArray)
65	
66	dataSet
67	
",DATA_TRANSFORM
3441,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_35_intermediate_1 -----dtype---->df_35],"df_29 -----birth year---->df_35_intermediate_1
births1000_60_intermediate_1 -----dtype---->births1000_60
births1000_60_intermediate_1 -----sort values---->births1000_60",EDA
3442,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_37_intermediate_1 -----birth year---->df_37_intermediate_2],"df_35 -----sort values---->df_37_intermediate_1
births1000_60_intermediate_1 -----birth year---->births1000_60
births1000_60_intermediate_1 -----max---->births1000_60",EDA
3443,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_37_intermediate_2 -----max---->df_37],"df_37_intermediate_1 -----birth year---->df_37_intermediate_2
births1000_60_intermediate_1 -----max---->births1000_60
births1000_60_intermediate_1 -----head---->births1000_60",EDA
3444,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[df_41_intermediate_1 -----plot---->df_41],"df_39 -----select---->df_41_intermediate_1
births1000_60_intermediate_1 -----plot---->births1000_60
births1000_60_intermediate_1 -----select---->births1000_60
births1000_60_intermediate_1 -----select---->births1000_60",EDA
3445,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[MaxValue_42_intermediate_1 -----max---->MaxValue_42],"df_41 -----select---->MaxValue_42_intermediate_1
births1000_60_intermediate_1 -----max---->births1000_60
births1000_60_intermediate_1 -----max value---->births1000_60
births1000_60_intermediate_1 -----max value---->births1000_60",EDA
3446,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[MaxName_43_intermediate_1 -----birth year---->MaxName_43_intermediate_2],"df_41 -----select---->MaxName_43_intermediate_1
MaxValue_42 -----max value---->MaxName_43_intermediate_1
births1000_60_intermediate_1 -----birth year---->births1000_60
births1000_60_intermediate_1 -----equal---->births1000_60
births1000_60_intermediate_1 -----equal---->births1000_60",EDA
3447,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[MaxName_43_intermediate_1 -----equal---->MaxName_43],"df_41 -----select---->MaxName_43_intermediate_1
MaxValue_42 -----max value---->MaxName_43_intermediate_1
births1000_60_intermediate_1 -----birth year---->births1000_60
births1000_60_intermediate_1 -----equal---->births1000_60
births1000_60_intermediate_1 -----max name---->births1000_60",EDA
3448,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[MaxName_43_intermediate_2 -----equal---->MaxName_43],"MaxName_43_intermediate_1 -----birth year---->MaxName_43_intermediate_2
births1000_60_intermediate_1 -----equal---->births1000_60
births1000_60_intermediate_1 -----max name---->births1000_60",EDA
3449,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[Text_44_intermediate_1 -----add---->Text_44],"MaxName_43 -----max name---->Text_44_intermediate_1
births1000_60_intermediate_1 -----add---->births1000_60
births1000_60_intermediate_1 -----text---->births1000_60",EDA
3450,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[name1000_58_intermediate_1 -----range---->name1000_58],"random -----randint---->name1000_58_intermediate_1
births1000_60_intermediate_1 -----range---->births1000_60",MORE_CONTEXT_NEEDED
3451,0001b3dad7fe1cc05c5bfca67bf9b8a2902e7a16.execution_graph,[births1000_60_intermediate_1 -----range---->births1000_60],"random -----randint---->births1000_60_intermediate_1
births1000_60_intermediate_1 -----range---->births1000_60",MODEL_TRAIN
3452,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[N_109 -----n---->adaptive_110],"108	""""""
109	N = 1000
110	adaptive = [run_trial(adaptive_weight_pick) for _x in xrange(N)]
111	even = [run_trial(even_split_weight_pick) for _x in xrange(N)]
",DATA_TRANSFORM
3453,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[N_109 -----n---->even_111],"109	N = 1000
110	adaptive = [run_trial(adaptive_weight_pick) for _x in xrange(N)]
111	even = [run_trial(even_split_weight_pick) for _x in xrange(N)]
112	
",HYPERPARAMETER_TUNING
3454,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_110 -----adaptive---->adaptive_x_114],"112	
113	# pull out means to compare
114	adaptive_x = [item[0] for item in adaptive]
115	adaptive_trial = [item[1] for item in adaptive]
",DATA_TRANSFORM
3455,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_110 -----adaptive---->adaptive_trial_115],"113	# pull out means to compare
114	adaptive_x = [item[0] for item in adaptive]
115	adaptive_trial = [item[1] for item in adaptive]
116	# pull out trial counts to compare
",DATA_TRANSFORM
3456,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[even_111 -----even---->even_x_117],"115	adaptive_trial = [item[1] for item in adaptive]
116	# pull out trial counts to compare
117	even_x = [item[0] for item in even]
118	even_trial = [item[1] for item in even]
",DATA_TRANSFORM
3457,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[even_111 -----even---->even_trial_118],"116	# pull out trial counts to compare
117	even_x = [item[0] for item in even]
118	even_trial = [item[1] for item in even]
119	
",DATA_TRANSFORM
3458,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_x_114 -----adaptive x---->x_pvalue_121],"119	
120	# Conclusion
121	x_pvalue = sp.stats.ttest_ind(adaptive_x, even_x).pvalue
122	trial_pvalue = sp.stats.ttest_ind(adaptive_trial, even_trial).pvalue
",EDA
3459,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_x_114 -----adaptive x---->adaptive_greater_129],"127	adaptive_sigificant = x_pvalue < 0.05
128	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=x_pvalue))
129	adaptive_greater = np.mean(adaptive_x) > np.mean(even_x)
130	print(""Is adaptive returning higher?          {r} (A: {a} to E: {b})"".format(r=(adaptive_greater), a=np.mean(adaptive_x), b=np.mean(even_x)))
",DATA_TRANSFORM
3460,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_x_114 -----adaptive x---->x_pvalue_160],"158	even_x_with_extension = even_x + [get_variant_B() for _x in xrange(difference_in_trial_length)]
159	
160	x_pvalue = sp.stats.ttest_ind(adaptive_x, even_x_with_extension).pvalue
161	print('\n----------')
",EDA
3461,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_x_114 -----adaptive x---->adaptive_greater_165],"163	adaptive_sigificant = x_pvalue < 0.05
164	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=x_pvalue))
165	adaptive_greater = np.mean(adaptive_x) > np.mean(even_x)
166	print(""Is adaptive returning higher?          {r} (A: {a} to E: {b})"".format(r=(adaptive_greater), a=np.mean(adaptive_x), b=np.mean(even_x_with_extension)))
",EDA
3462,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_trial_115 -----adaptive trial---->trial_pvalue_122],"120	# Conclusion
121	x_pvalue = sp.stats.ttest_ind(adaptive_x, even_x).pvalue
122	trial_pvalue = sp.stats.ttest_ind(adaptive_trial, even_trial).pvalue
123	
",MODEL_EVALUATION
3463,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_trial_115 -----adaptive trial---->adaptive_greater_137],"135	adaptive_sigificant = trial_pvalue < 0.05
136	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=trial_pvalue))
137	adaptive_greater = np.mean(adaptive_trial) > np.mean(even_trial)
138	print(""Is adaptive longer?                    {r} (A: {a} to E: {b})"".format(r=(adaptive_greater), a=np.mean(adaptive_trial), b=np.mean(even_trial)))
",MODEL_EVALUATION
3464,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[even_x_117 -----even x---->x_pvalue_121],"119	
120	# Conclusion
121	x_pvalue = sp.stats.ttest_ind(adaptive_x, even_x).pvalue
122	trial_pvalue = sp.stats.ttest_ind(adaptive_trial, even_trial).pvalue
",EDA
3465,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[even_x_117 -----even x---->adaptive_greater_129],"127	adaptive_sigificant = x_pvalue < 0.05
128	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=x_pvalue))
129	adaptive_greater = np.mean(adaptive_x) > np.mean(even_x)
130	print(""Is adaptive returning higher?          {r} (A: {a} to E: {b})"".format(r=(adaptive_greater), a=np.mean(adaptive_x), b=np.mean(even_x)))
",MODEL_EVALUATION
3466,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[even_x_117 -----get variant b---->even_x_with_extension_158_intermediate_1],"even_111 -----even---->even_x_117
pd_149_intermediate_1 -----even x---->pd_149
pd_149_intermediate_1 -----even x---->pd_149
pd_149_intermediate_1 -----get variant b---->pd_149
pd_149_intermediate_1 -----even x---->pd_149
pd_149_intermediate_1 -----xrange---->pd_149",DATA_TRANSFORM
3467,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[even_x_117 -----even x---->adaptive_greater_165],"163	adaptive_sigificant = x_pvalue < 0.05
164	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=x_pvalue))
165	adaptive_greater = np.mean(adaptive_x) > np.mean(even_x)
166	print(""Is adaptive returning higher?          {r} (A: {a} to E: {b})"".format(r=(adaptive_greater), a=np.mean(adaptive_x), b=np.mean(even_x_with_extension)))
",MODEL_EVALUATION
3468,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[even_trial_118 -----even trial---->trial_pvalue_122],"120	# Conclusion
121	x_pvalue = sp.stats.ttest_ind(adaptive_x, even_x).pvalue
122	trial_pvalue = sp.stats.ttest_ind(adaptive_trial, even_trial).pvalue
123	
",MODEL_EVALUATION
3469,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[even_trial_118 -----even trial---->adaptive_greater_137],"135	adaptive_sigificant = trial_pvalue < 0.05
136	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=trial_pvalue))
137	adaptive_greater = np.mean(adaptive_trial) > np.mean(even_trial)
138	print(""Is adaptive longer?                    {r} (A: {a} to E: {b})"".format(r=(adaptive_greater), a=np.mean(adaptive_trial), b=np.mean(even_trial)))
",MODEL_EVALUATION
3470,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[x_pvalue_121 -----less than---->adaptive_sigificant_127],"125	print('----------')
126	print(""Requirement 2: Exploring trial mean return."")
127	adaptive_sigificant = x_pvalue < 0.05
128	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=x_pvalue))
",MODEL_EVALUATION
3471,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[x_pvalue_121 -----reassign---->x_pvalue_160],"158	even_x_with_extension = even_x + [get_variant_B() for _x in xrange(difference_in_trial_length)]
159	
160	x_pvalue = sp.stats.ttest_ind(adaptive_x, even_x_with_extension).pvalue
161	print('\n----------')
",MODEL_EVALUATION
3472,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[scipy -----stats---->x_pvalue_121_intermediate_1],"pd_149_intermediate_1 -----stats---->pd_149
pd_149_intermediate_1 -----stats---->pd_149
pd_149_intermediate_1 -----stats---->pd_149
pd_149_intermediate_1 -----ttest ind---->pd_149",EDA
3473,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[scipy -----stats---->trial_pvalue_122_intermediate_1],"pd_149_intermediate_1 -----stats---->pd_149
pd_149_intermediate_1 -----stats---->pd_149
pd_149_intermediate_1 -----stats---->pd_149
pd_149_intermediate_1 -----ttest ind---->pd_149",EDA
3474,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[scipy -----stats---->x_pvalue_160_intermediate_1],"pd_149_intermediate_1 -----stats---->pd_149
pd_149_intermediate_1 -----stats---->pd_149
pd_149_intermediate_1 -----stats---->pd_149
pd_149_intermediate_1 -----ttest ind---->pd_149",EDA
3475,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[trial_pvalue_122 -----less than---->adaptive_sigificant_135],"133	print('----------')
134	print(""Requirement 3: Exploring trial length."")
135	adaptive_sigificant = trial_pvalue < 0.05
136	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=trial_pvalue))
",MODEL_EVALUATION
3476,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_sigificant_127 -----reassign---->adaptive_sigificant_135],"133	print('----------')
134	print(""Requirement 3: Exploring trial length."")
135	adaptive_sigificant = trial_pvalue < 0.05
136	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=trial_pvalue))
",MODEL_EVALUATION
3477,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_greater_129 -----reassign---->adaptive_greater_137],"135	adaptive_sigificant = trial_pvalue < 0.05
136	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=trial_pvalue))
137	adaptive_greater = np.mean(adaptive_trial) > np.mean(even_trial)
138	print(""Is adaptive longer?                    {r} (A: {a} to E: {b})"".format(r=(adaptive_greater), a=np.mean(adaptive_trial), b=np.mean(even_trial)))
",MODEL_EVALUATION
3478,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[numpy -----mean---->adaptive_greater_129],"127	adaptive_sigificant = x_pvalue < 0.05
128	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=x_pvalue))
129	adaptive_greater = np.mean(adaptive_x) > np.mean(even_x)
130	print(""Is adaptive returning higher?          {r} (A: {a} to E: {b})"".format(r=(adaptive_greater), a=np.mean(adaptive_x), b=np.mean(even_x)))
",EDA
3479,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[numpy -----mean---->adaptive_greater_137],"135	adaptive_sigificant = trial_pvalue < 0.05
136	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=trial_pvalue))
137	adaptive_greater = np.mean(adaptive_trial) > np.mean(even_trial)
138	print(""Is adaptive longer?                    {r} (A: {a} to E: {b})"".format(r=(adaptive_greater), a=np.mean(adaptive_trial), b=np.mean(even_trial)))
",EDA
3480,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[numpy -----mean---->adaptive_greater_165],"163	adaptive_sigificant = x_pvalue < 0.05
164	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=x_pvalue))
165	adaptive_greater = np.mean(adaptive_x) > np.mean(even_x)
166	print(""Is adaptive returning higher?          {r} (A: {a} to E: {b})"".format(r=(adaptive_greater), a=np.mean(adaptive_x), b=np.mean(even_x_with_extension)))
",EDA
3481,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_sigificant_135 -----reassign---->adaptive_sigificant_163],"161	print('\n----------')
162	print(""Conclusion: Exploring trial mean return."")
163	adaptive_sigificant = x_pvalue < 0.05
164	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=x_pvalue))
",MODEL_EVALUATION
3482,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[adaptive_greater_137 -----reassign---->adaptive_greater_165],"163	adaptive_sigificant = x_pvalue < 0.05
164	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=x_pvalue))
165	adaptive_greater = np.mean(adaptive_x) > np.mean(even_x)
166	print(""Is adaptive returning higher?          {r} (A: {a} to E: {b})"".format(r=(adaptive_greater), a=np.mean(adaptive_x), b=np.mean(even_x_with_extension)))
",MODEL_EVALUATION
3483,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[pandas -----data frame---->pd_143_intermediate_1],"pd_149_intermediate_1 -----data frame---->pd_149
pd_149_intermediate_1 -----data frame---->pd_149
pd_149_intermediate_1 -----hist---->pd_149",DATA_TRANSFORM
3484,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[pandas -----data frame---->pd_149_intermediate_1],"pd_149_intermediate_1 -----data frame---->pd_149
pd_149_intermediate_1 -----data frame---->pd_149
pd_149_intermediate_1 -----hist---->pd_149",DATA_TRANSFORM
3485,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[difference_in_trial_length_157 -----difference in trial length---->even_x_with_extension_158],"156	'''
157	difference_in_trial_length = int(np.mean(adaptive_trial) - np.mean(even_trial))
158	even_x_with_extension = even_x + [get_variant_B() for _x in xrange(difference_in_trial_length)]
159	
",EDA
3486,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[even_x_with_extension_158 -----even x with extension---->x_pvalue_160],"158	even_x_with_extension = even_x + [get_variant_B() for _x in xrange(difference_in_trial_length)]
159	
160	x_pvalue = sp.stats.ttest_ind(adaptive_x, even_x_with_extension).pvalue
161	print('\n----------')
",EDA
3487,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[x_pvalue_160 -----less than---->adaptive_sigificant_163],"161	print('\n----------')
162	print(""Conclusion: Exploring trial mean return."")
163	adaptive_sigificant = x_pvalue < 0.05
164	print(""Is adaptive statistically significant? {r} (pvalue: {p})"".format(r=(adaptive_sigificant), p=x_pvalue))
",MODEL_EVALUATION
3488,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[even_x_with_extension_158_intermediate_1 -----xrange---->even_x_with_extension_158_intermediate_2],"even_x_117 -----get variant b---->even_x_with_extension_158_intermediate_1
pd_149_intermediate_1 -----xrange---->pd_149
pd_149_intermediate_1 -----add---->pd_149",MODEL_EVALUATION
3489,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[even_x_with_extension_158_intermediate_2 -----add---->even_x_with_extension_158],"even_x_with_extension_158_intermediate_1 -----xrange---->even_x_with_extension_158_intermediate_2
pd_149_intermediate_1 -----add---->pd_149
pd_149_intermediate_1 -----even x with extension---->pd_149",DATA_TRANSFORM
3490,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[x_pvalue_121_intermediate_1 -----ttest ind---->x_pvalue_121_intermediate_2],"scipy -----stats---->x_pvalue_121_intermediate_1
pd_149_intermediate_1 -----ttest ind---->pd_149
pd_149_intermediate_1 -----pvalue---->pd_149",EDA
3491,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[x_pvalue_121_intermediate_2 -----pvalue---->x_pvalue_121],"x_pvalue_121_intermediate_1 -----ttest ind---->x_pvalue_121_intermediate_2
pd_149_intermediate_1 -----pvalue---->pd_149
pd_149_intermediate_1 -----less than---->pd_149
pd_149_intermediate_1 -----reassign---->pd_149",MODEL_EVALUATION
3492,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[trial_pvalue_122_intermediate_1 -----ttest ind---->trial_pvalue_122_intermediate_2],"scipy -----stats---->trial_pvalue_122_intermediate_1
pd_149_intermediate_1 -----ttest ind---->pd_149
pd_149_intermediate_1 -----pvalue---->pd_149",MODEL_EVALUATION
3493,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[trial_pvalue_122_intermediate_2 -----pvalue---->trial_pvalue_122],"trial_pvalue_122_intermediate_1 -----ttest ind---->trial_pvalue_122_intermediate_2
pd_149_intermediate_1 -----pvalue---->pd_149
pd_149_intermediate_1 -----less than---->pd_149",MODEL_EVALUATION
3494,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[x_pvalue_160_intermediate_1 -----ttest ind---->x_pvalue_160_intermediate_2],"scipy -----stats---->x_pvalue_160_intermediate_1
pd_149_intermediate_1 -----ttest ind---->pd_149
pd_149_intermediate_1 -----pvalue---->pd_149",MODEL_EVALUATION
3495,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[x_pvalue_160_intermediate_2 -----pvalue---->x_pvalue_160],"x_pvalue_160_intermediate_1 -----ttest ind---->x_pvalue_160_intermediate_2
pd_149_intermediate_1 -----pvalue---->pd_149
pd_149_intermediate_1 -----less than---->pd_149",MODEL_EVALUATION
3496,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[pd_143_intermediate_1 -----hist---->pd_143],"pandas -----data frame---->pd_143_intermediate_1
pd_149_intermediate_1 -----hist---->pd_149",EDA
3497,0001b6b82fe03b3102e6701a17ed619d00a8bd5f.execution_graph,[pd_149_intermediate_1 -----hist---->pd_149],"pandas -----data frame---->pd_149_intermediate_1
pd_149_intermediate_1 -----hist---->pd_149",EDA
3498,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[sys -----path---->sys_13_intermediate_1],"eta0_52_intermediate_1 -----path---->eta0_52
eta0_52_intermediate_1 -----append---->eta0_52",ENVIRONMENT
3499,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[mnist_helpers -----mnist training---->X_train_untransformed_20],"18	from kernel import Fourier
19	
20	X_train_untransformed, y_train = mnist_training(shuffled=False) 
21	X_train = np.load('../notebooks/data/X_transformed_by_50_components.npy')
",DATA_IMPORT_EXTRACTION
3500,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[mnist_helpers -----mnist training---->y_train_20],"18	from kernel import Fourier
19	
20	X_train_untransformed, y_train = mnist_training(shuffled=False) 
21	X_train = np.load('../notebooks/data/X_transformed_by_50_components.npy')
",DATA_IMPORT_EXTRACTION
3501,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[mnist_helpers -----mnist testing---->X_test_untransformed_23],"21	X_train = np.load('../notebooks/data/X_transformed_by_50_components.npy')
22	
23	X_test_untransformed, y_test = mnist_testing(shuffled=False)
24	X_test = np.load('../notebooks/data/X_test_transformed_by_50_components.npy')
",DATA_IMPORT_EXTRACTION
3502,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[mnist_helpers -----mnist testing---->y_test_23],"21	X_train = np.load('../notebooks/data/X_transformed_by_50_components.npy')
22	
23	X_test_untransformed, y_test = mnist_testing(shuffled=False)
24	X_test = np.load('../notebooks/data/X_test_transformed_by_50_components.npy')
",DATA_IMPORT_EXTRACTION
3503,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[y_train_20 -----y train---->ls_37],"35	
36	num_pts = 2000
37	ls = LeastSquaresSGD(X_train[0:num_pts], y_train[0:num_pts],
38	                     max_epochs=5,
",MODEL_TRAIN
3504,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[X_train_21 -----x train---->ls_37],"35	
36	num_pts = 2000
37	ls = LeastSquaresSGD(X_train[0:num_pts], y_train[0:num_pts],
38	                     max_epochs=5,
",MODEL_TRAIN
3505,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[numpy -----load---->X_train_21],"19	
20	X_train_untransformed, y_train = mnist_training(shuffled=False) 
21	X_train = np.load('../notebooks/data/X_transformed_by_50_components.npy')
22	
",DATA_IMPORT_EXTRACTION
3506,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[numpy -----load---->X_test_24],"22	
23	X_test_untransformed, y_test = mnist_testing(shuffled=False)
24	X_test = np.load('../notebooks/data/X_test_transformed_by_50_components.npy')
25	
",DATA_IMPORT_EXTRACTION
3507,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[ls_37 -----reassign---->ls_42],"40	                     assess_test_data_during_fitting = False)
41	
42	ls.verbose = True
43	
",MODEL_TRAIN
3508,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[least_squares_sgd -----least squares sgd---->ls_37],"35	
36	num_pts = 2000
37	ls = LeastSquaresSGD(X_train[0:num_pts], y_train[0:num_pts],
38	                     max_epochs=5,
",MODEL_TRAIN
3509,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[ls_42 -----run---->ls_44],"42	ls.verbose = True
43	
44	ls.run()
45	
",MODEL_TRAIN
3510,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[ls_44 -----results---->ls_46],"44	ls.run()
45	
46	ls.results
47	
",MODEL_EVALUATION
3511,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[ls_46 -----plot loss and eta---->ls_48],"46	ls.results
47	
48	ls.plot_loss_and_eta(pandas=True)
49	
",MODEL_EVALUATION
3512,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[ls_48 -----copy---->ls2x_50],"48	ls.plot_loss_and_eta(pandas=True)
49	
50	ls2x = ls.copy(reset=False)
51	
",HYPERPARAMETER_TUNING
3513,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[ls_48 -----eta---->ls2x_52_intermediate_1],"ls_46 -----plot loss and eta---->ls_48
eta0_52_intermediate_1 -----copy---->eta0_52
eta0_52_intermediate_1 -----eta---->eta0_52
eta0_52_intermediate_1 -----eta---->eta0_52
eta0_52_intermediate_1 -----mult---->eta0_52",HYPERPARAMETER_TUNING
3514,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[ls_48 -----eta---->eta0_52_intermediate_1],"ls_46 -----plot loss and eta---->ls_48
eta0_52_intermediate_1 -----copy---->eta0_52
eta0_52_intermediate_1 -----eta---->eta0_52
eta0_52_intermediate_1 -----eta---->eta0_52
eta0_52_intermediate_1 -----mult---->eta0_52",HYPERPARAMETER_TUNING
3515,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[ls2x_50 -----reassign---->ls2x_52],"50	ls2x = ls.copy(reset=False)
51	
52	ls2x.eta0 = ls.eta*5
53	
",HYPERPARAMETER_TUNING
3516,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[ls2x_52 -----run longer---->ls2x_54],"52	ls2x.eta0 = ls.eta*5
53	
54	ls2x.run_longer(epochs = 10)
55	
",HYPERPARAMETER_TUNING
3517,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[sys_13_intermediate_1 -----append---->sys_13],"sys -----path---->sys_13_intermediate_1
eta0_52_intermediate_1 -----append---->eta0_52",ENVIRONMENT
3518,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[ls2x_52_intermediate_1 -----mult---->ls2x_52],"ls_48 -----eta---->ls2x_52_intermediate_1
eta0_52_intermediate_1 -----mult---->eta0_52
eta0_52_intermediate_1 -----run longer---->eta0_52",HYPERPARAMETER_TUNING
3519,0001bde8618a842623ac12e623bef0c957ee4ab3.execution_graph,[eta0_52_intermediate_1 -----mult---->eta0_52],"ls_48 -----eta---->eta0_52_intermediate_1
eta0_52_intermediate_1 -----mult---->eta0_52",HYPERPARAMETER_TUNING
3520,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_6 -----info---->tips_8],"6	tips = sb.load_dataset(""tips"")
7	
8	tips.info()
9	
",EDA
3521,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----load dataset---->tips_6],"4	import matplotlib.pyplot as pyp
5	
6	tips = sb.load_dataset(""tips"")
7	
",DATA_IMPORT_EXTRACTION
3522,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----distplot---->sb_14],"12	tips.shape
13	
14	sb.distplot(tips[""total_bill""])
15	
",EDA
3523,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----distplot---->sb_17],"15	
16	#kde refers density estimation,bins refers size of tabs
17	sb.distplot(tips[""total_bill""],kde=False,bins=50)
18	
",EDA
3524,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----jointplot---->sb_19],"17	sb.distplot(tips[""total_bill""],kde=False,bins=50)
18	
19	sb.jointplot(x= ""total_bill"",y=""tip"",data = tips)
20	
",EDA
3525,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----pairplot---->sb_22],"20	
21	#pairplotiing required columns
22	sb.pairplot(tips,hue = ""sex"")
23	
",EDA
3526,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----pairplot---->sb_25],"23	
24	#pairplotiing whole data
25	sb.pairplot(tips,hue=""smoker"",palette = ""coolwarm"")
26	
",EDA
3527,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----distplot---->sb_34],"32	df.head()
33	
34	sb.distplot(df[""Temperature ""])
35	
",EDA
3528,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----distplot---->sb_36],"34	sb.distplot(df[""Temperature ""])
35	
36	sb.distplot(df[""Temperature ""],kde=False,bins = 15)
37	
",EDA
3529,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----jointplot---->sb_38],"36	sb.distplot(df[""Temperature ""],kde=False,bins = 15)
37	
38	sb.jointplot(x= ""Temperature "",y=""Wind Speed"",data = df,kind = ""reg"")
39	
",EDA
3530,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----pairplot---->sb_40],"38	sb.jointplot(x= ""Temperature "",y=""Wind Speed"",data = df,kind = ""reg"")
39	
40	sb.pairplot(df,palette = ""coolwarm"")
41	
",EDA
3531,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----swarmplot---->sb_43],"41	
42	#barplot(x="""",y = """",data = variable saved dataframe)
43	sb.swarmplot( x = ""total_bill"",data=tips)
44	
",EDA
3532,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----barplot---->sb_46],"44	
45	#barplot wwith extra parameters(x = """",y= """",data = datframe,estimator = some basic operations)
46	sb.barplot(x = ""sex"",y=""total_bill"",data=tips,estimator = np.std)
47	
",EDA
3533,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----countplot---->sb_49],"47	
48	#countplot(counting numbers of each data)
49	sb.countplot(x=""sex"",data=tips)
50	
",EDA
3534,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----countplot---->sb_52],"50	
51	
52	sb.countplot(x=""Event"",data= df,alpha=0.5)
53	
",EDA
3535,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----violinplot---->sb_55],"53	
54	#violin(x = ,y= hue = 3rd categorization i n a single graph ,)
55	sb.violinplot(x=""day"",y=""total_bill"",data=tips,hue=""smoker"")
56	
",EDA
3536,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----boxplot---->sb_58],"56	
57	#boxplotting(x = "" "",y = "" "", data = datset name)
58	sb.boxplot(x=""day"",y=""total_bill"",data = tips)
59	
",EDA
3537,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----swarmplot---->sb_67],"65	
66	#swarmplot(x = """",y "" "",data = datset)
67	sb.swarmplot(x=""Type 1"",y=""Attack"",data = poke)
68	#rotating x axis indices
",EDA
3538,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----violinplot---->sb_72],"70	
71	#visualizing swarplot inide a violinplot
72	sb.violinplot(x=""Type 1"",y = ""Attack"",data=poke,inner = None)
73	sb.swarmplot(x=""Type 1"",y = ""Attack"",data=poke,color = ""y"")
",EDA
3539,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----swarmplot---->sb_73],"71	#visualizing swarplot inide a violinplot
72	sb.violinplot(x=""Type 1"",y = ""Attack"",data=poke,inner = None)
73	sb.swarmplot(x=""Type 1"",y = ""Attack"",data=poke,color = ""y"")
74	pyp.xticks(rotation = 70)
",EDA
3540,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----violinplot---->sb_76],"74	pyp.xticks(rotation = 70)
75	
76	sb.violinplot(x=""Type 1"",y = ""Attack"",data=poke)
77	
",EDA
3541,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----swarmplot---->sb_78],"76	sb.violinplot(x=""Type 1"",y = ""Attack"",data=poke)
77	
78	sb.swarmplot(x=""Event"",y = ""Wind Speed"",data=df,)
79	
",EDA
3542,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----swarmplot---->sb_85],"83	
84	#swarmplotting
85	sb.swarmplot(x =""day"",y = ""total_bill"",hue= ""time"",data = tips,color = ""green"",orient = ""v"")
86	sb.boxplot(x =""day"",y = ""total_bill"",data = tips)
",EDA
3543,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----boxplot---->sb_86],"84	#swarmplotting
85	sb.swarmplot(x =""day"",y = ""total_bill"",hue= ""time"",data = tips,color = ""green"",orient = ""v"")
86	sb.boxplot(x =""day"",y = ""total_bill"",data = tips)
87	pyp.legend(loc=""best"")
",EDA
3544,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----scatterplot---->sb_90],"88	
89	#same data with scatterplot 
90	sb.scatterplot(x=""day"",y=""total_bill"",data= tips)
91	
",EDA
3545,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----load dataset---->tips_95],"93	import pandas as pd
94	
95	tips = sb.load_dataset(""tips"")
96	
",DATA_IMPORT_EXTRACTION
3546,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----heatmap---->sb_102],"100	
101	#annot = values showing inside box,fmt = ""formatting number"",linewitdth = to sepearte and show,line colour = colour of seperation)
102	sb.heatmap(corr,annot = False,linewidth = 2,linecolor = ""r"")
103	
",EDA
3547,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----clustermap---->sb_108],"106	
107	
108	sb.clustermap(corr)
109	
",EDA
3548,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[seaborn -----heatmap---->sb_110],"108	sb.clustermap(corr)
109	
110	sb.heatmap(p)
111	
",EDA
3549,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_8 -----head---->tips_10],"8	tips.info()
9	
10	tips.head()
11	
",EDA
3550,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_10 -----shape---->tips_12],"10	tips.head()
11	
12	tips.shape
13	
",EDA
3551,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_12 -----tips---->sb_14],"12	tips.shape
13	
14	sb.distplot(tips[""total_bill""])
15	
",EDA
3552,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_12 -----tips---->sb_17],"15	
16	#kde refers density estimation,bins refers size of tabs
17	sb.distplot(tips[""total_bill""],kde=False,bins=50)
18	
",EDA
3553,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_12 -----tips---->sb_22],"20	
21	#pairplotiing required columns
22	sb.pairplot(tips,hue = ""sex"")
23	
",EDA
3554,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_12 -----tips---->sb_25],"23	
24	#pairplotiing whole data
25	sb.pairplot(tips,hue=""smoker"",palette = ""coolwarm"")
26	
",EDA
3555,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_12 -----loc---->tips_82_intermediate_1],"tips_10 -----shape---->tips_12
tips_82_intermediate_2 -----tips---->tips_82
tips_82_intermediate_2 -----tips---->tips_82
tips_82_intermediate_2 -----tips---->tips_82
tips_82_intermediate_2 -----tips---->tips_82
tips_82_intermediate_2 -----loc---->tips_82
tips_82_intermediate_2 -----select---->tips_82",EDA
3556,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[data_29 -----data---->df_30],"28	
29	data = pd.read_csv(""weather.csv"")
30	df=pd.DataFrame(data) 
31	
",DATA_TRANSFORM
3557,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[pandas -----read csv---->data_29],"27	import pandas as pd
28	
29	data = pd.read_csv(""weather.csv"")
30	df=pd.DataFrame(data) 
",DATA_IMPORT_EXTRACTION
3558,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[pandas -----data frame---->df_30],"28	
29	data = pd.read_csv(""weather.csv"")
30	df=pd.DataFrame(data) 
31	
",DATA_TRANSFORM
3559,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[pandas -----read csv---->poke_61],"59	
60	#importing pokemon data
61	poke = pd.read_csv(""pokemon.csv"")
62	
",DATA_IMPORT_EXTRACTION
3560,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[df_30 -----head---->df_32],"30	df=pd.DataFrame(data) 
31	
32	df.head()
33	
",EDA
3561,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[df_32 -----df---->sb_34],"32	df.head()
33	
34	sb.distplot(df[""Temperature ""])
35	
",EDA
3562,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[df_32 -----df---->sb_36],"34	sb.distplot(df[""Temperature ""])
35	
36	sb.distplot(df[""Temperature ""],kde=False,bins = 15)
37	
",EDA
3563,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[df_32 -----df---->sb_40],"38	sb.jointplot(x= ""Temperature "",y=""Wind Speed"",data = df,kind = ""reg"")
39	
40	sb.pairplot(df,palette = ""coolwarm"")
41	
",EDA
3564,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[df_32 -----head---->df_80],"78	sb.swarmplot(x=""Event"",y = ""Wind Speed"",data=df,)
79	
80	df.head(45)
81	
",EDA
3565,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[poke_61 -----head---->poke_64],"62	
63	#visualizing data
64	poke.head()
65	
",EDA
3566,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[matplotlib.pyplot -----xticks---->pyp_69],"67	sb.swarmplot(x=""Type 1"",y=""Attack"",data = poke)
68	#rotating x axis indices
69	pyp.xticks(rotation = 70)
70	
",EDA
3567,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[matplotlib.pyplot -----xticks---->pyp_74],"72	sb.violinplot(x=""Type 1"",y = ""Attack"",data=poke,inner = None)
73	sb.swarmplot(x=""Type 1"",y = ""Attack"",data=poke,color = ""y"")
74	pyp.xticks(rotation = 70)
75	
",EDA
3568,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[matplotlib.pyplot -----legend---->pyp_87],"85	sb.swarmplot(x =""day"",y = ""total_bill"",hue= ""time"",data = tips,color = ""green"",orient = ""v"")
86	sb.boxplot(x =""day"",y = ""total_bill"",data = tips)
87	pyp.legend(loc=""best"")
88	
",EDA
3569,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_82 -----reassign---->tips_95],"93	import pandas as pd
94	
95	tips = sb.load_dataset(""tips"")
96	
",DATA_TRANSFORM
3570,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_95 -----head---->tips_97],"95	tips = sb.load_dataset(""tips"")
96	
97	tips.head()
98	
",EDA
3571,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_97 -----corr---->corr_99],"97	tips.head()
98	
99	corr = tips.corr()
100	
",EDA
3572,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_97 -----pivot table---->tips_105],"103	
104	#pivot table(value = ""must be numerical"")
105	tips.pivot_table(values = ""total_bill"",index = ""tip"",columns = ""sex"")
106	
",DATA_TRANSFORM
3573,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[corr_99 -----corr---->sb_102],"100	
101	#annot = values showing inside box,fmt = ""formatting number"",linewitdth = to sepearte and show,line colour = colour of seperation)
102	sb.heatmap(corr,annot = False,linewidth = 2,linecolor = ""r"")
103	
",EDA
3574,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[corr_99 -----corr---->sb_108],"106	
107	
108	sb.clustermap(corr)
109	
",EDA
3575,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_82_intermediate_1 -----select---->tips_82_intermediate_2],"tips_12 -----loc---->tips_82_intermediate_1
tips_82_intermediate_2 -----select---->tips_82
tips_82_intermediate_2 -----equal---->tips_82",EDA
3576,0001c05a694925deb7c4a241528a3c6420b0cf10.execution_graph,[tips_82_intermediate_2 -----equal---->tips_82],"tips_82_intermediate_1 -----select---->tips_82_intermediate_2
tips_82_intermediate_2 -----equal---->tips_82
tips_82_intermediate_2 -----reassign---->tips_82",DATA_TRANSFORM
3577,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[x_8 -----complex---->x_15],"13	# Q.1_substraction of comples numbers
14	
15	x = complex(input(""Enter First Number: ""))
16	y = complex(input(""Enter Second Number: ""))
",DATA_TRANSFORM
3578,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[y_9 -----complex---->y_16],"14	
15	x = complex(input(""Enter First Number: ""))
16	y = complex(input(""Enter Second Number: ""))
17	
",DATA_TRANSFORM
3579,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[x_15 -----complex---->x_22],"20	#Q.1_multiplication of comples numbers
21	
22	x = complex(input(""Enter First Number: ""))
23	y = complex(input(""Enter Second Number: ""))
",DATA_TRANSFORM
3580,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[y_16 -----complex---->y_23],"21	
22	x = complex(input(""Enter First Number: ""))
23	y = complex(input(""Enter Second Number: ""))
24	
",DATA_TRANSFORM
3581,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[x_22 -----range---->x_29],"27	#Q.2_We can run the for loop over a range to print each number in a given range.
28	
29	x=range(5)
30	for num in x:
",DATA_TRANSFORM
3582,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[y_23 -----int---->y_43],"41	#Q.3
42	x= int(input(""Enter value of x: ""))
43	y= int(input(""Enter value of y: ""))
44	z=(x-y)
",DATA_TRANSFORM
3583,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[x_29 -----mult---->fact_38],"36	fact=1
37	for x in range(1, num+1):
38	    fact=fact*x
39	print (""Factorial of {} is {}"".format(num,fact))
",DATA_TRANSFORM
3584,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[x_29 -----int---->x_42],"40	
41	#Q.3
42	x= int(input(""Enter value of x: ""))
43	y= int(input(""Enter value of y: ""))
",DATA_TRANSFORM
3585,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[fact_36 -----loop---->fact_38_intermediate_1],"loop_fact_36_fact_38 -----restart_loop---->fact_36
fact_38_intermediate_1 -----loop---->fact_38
fact_38_intermediate_1 -----mult---->fact_38",DATA_TRANSFORM
3586,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[fact_38 -----end_loop---->loop_fact_36_fact_38],"
",DATA_TRANSFORM
3587,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[loop_fact_36_fact_38 -----restart_loop---->fact_36],"
",DATA_TRANSFORM
3588,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[x_42 -----sub---->z_44],"42	x= int(input(""Enter value of x: ""))
43	y= int(input(""Enter value of y: ""))
44	z=(x-y)
45	print(""The subtraction of both numbers is "",z)
",DATA_TRANSFORM
3589,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[y_43 -----sub---->z_44],"42	x= int(input(""Enter value of x: ""))
43	y= int(input(""Enter value of y: ""))
44	z=(x-y)
45	print(""The subtraction of both numbers is "",z)
",DATA_TRANSFORM
3590,0001c5a1693e9a025ad978464ac1b13d8337cca1.execution_graph,[fact_38_intermediate_1 -----mult---->fact_38],"fact_36 -----loop---->fact_38_intermediate_1
fact_38_intermediate_1 -----mult---->fact_38
fact_38_intermediate_1 -----end_loop---->fact_38",DATA_TRANSFORM
3591,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[parsed_date_2 -----parsed date---->parsed_date_3],"1	import pandas as pd
2	parsed_date = pd.to_datetime('January 1st, 2017')
3	parsed_date
4	
",DATA_TRANSFORM
3592,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[pandas -----to datetime---->parsed_date_2],"
1	import pandas as pd
2	parsed_date = pd.to_datetime('January 1st, 2017')
3	parsed_date
",DATA_TRANSFORM
3593,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[pandas -----to datetime---->parsed_date_11],"9	parsed_date.second
10	
11	parsed_date = pd.to_datetime('5/3/2017 5:30')
12	parsed_date.month
",DATA_TRANSFORM
3594,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[pandas -----to datetime---->parsed_date_14],"12	parsed_date.month
13	
14	parsed_date = pd.to_datetime('3/5/2017 5:30', format='%d/%m/%Y %H:%M')
15	parsed_date.month
",DATA_TRANSFORM
3595,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[pandas -----to datetime---->parsed_date_17],"15	parsed_date.month
16	
17	parsed_date = pd.to_datetime('5/3/2017 5:30', format='%m/%d/%Y %H:%M')
18	parsed_date.month
",DATA_TRANSFORM
3596,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[pandas -----read csv---->df_projects_21],"19	
20	# Run this code cell. Read in the projects data set with all columns type string
21	df_projects = pd.read_csv('../data/projects_data.csv', dtype=str)
22	df_projects.drop(['Unnamed: 56'], axis=1, inplace=True)
",DATA_IMPORT_EXTRACTION
3597,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[pandas -----to datetime---->df_projects_32],"30	# HINT: It's easier to do this one column at a time
31	
32	df_projects['boardapprovaldate'] = pd.to_datetime(df_projects['boardapprovaldate'])
33	df_projects['closingdate'] = pd.to_datetime(df_projects['closingdate'])
",DATA_TRANSFORM
3598,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[pandas -----to datetime---->df_projects_33],"31	
32	df_projects['boardapprovaldate'] = pd.to_datetime(df_projects['boardapprovaldate'])
33	df_projects['closingdate'] = pd.to_datetime(df_projects['closingdate'])
34	
",DATA_TRANSFORM
3599,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[pandas -----to numeric---->df_projects_78],"76	
77	# TODO: Step 1 - convert the totalamt column from string to numeric. Be sure to remove the commas in this column
78	df_projects['totalamt'] = pd.to_numeric(df_projects['totalamt'].str.replace(',', ''))
79	
",DATA_TRANSFORM
3600,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[parsed_date_3 -----month---->parsed_date_5],"3	parsed_date
4	
5	parsed_date.month
6	
",DATA_TRANSFORM
3601,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[parsed_date_5 -----year---->parsed_date_7],"5	parsed_date.month
6	
7	parsed_date.year
8	
",DATA_TRANSFORM
3602,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[parsed_date_7 -----second---->parsed_date_9],"7	parsed_date.year
8	
9	parsed_date.second
10	
",DATA_TRANSFORM
3603,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[parsed_date_9 -----reassign---->parsed_date_11],"9	parsed_date.second
10	
11	parsed_date = pd.to_datetime('5/3/2017 5:30')
12	parsed_date.month
",DATA_TRANSFORM
3604,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[parsed_date_11 -----month---->parsed_date_12],"10	
11	parsed_date = pd.to_datetime('5/3/2017 5:30')
12	parsed_date.month
13	
",DATA_TRANSFORM
3605,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[parsed_date_12 -----reassign---->parsed_date_14],"12	parsed_date.month
13	
14	parsed_date = pd.to_datetime('3/5/2017 5:30', format='%d/%m/%Y %H:%M')
15	parsed_date.month
",DATA_TRANSFORM
3606,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[parsed_date_14 -----month---->parsed_date_15],"13	
14	parsed_date = pd.to_datetime('3/5/2017 5:30', format='%d/%m/%Y %H:%M')
15	parsed_date.month
16	
",DATA_TRANSFORM
3607,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[parsed_date_15 -----reassign---->parsed_date_17],"15	parsed_date.month
16	
17	parsed_date = pd.to_datetime('5/3/2017 5:30', format='%m/%d/%Y %H:%M')
18	parsed_date.month
",DATA_TRANSFORM
3608,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[parsed_date_17 -----month---->parsed_date_18],"16	
17	parsed_date = pd.to_datetime('5/3/2017 5:30', format='%m/%d/%Y %H:%M')
18	parsed_date.month
19	
",DATA_TRANSFORM
3609,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_21 -----drop---->df_projects_22],"20	# Run this code cell. Read in the projects data set with all columns type string
21	df_projects = pd.read_csv('../data/projects_data.csv', dtype=str)
22	df_projects.drop(['Unnamed: 56'], axis=1, inplace=True)
23	df_projects.columns
",DATA_TRANSFORM
3610,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_22 -----columns---->df_projects_23],"21	df_projects = pd.read_csv('../data/projects_data.csv', dtype=str)
22	df_projects.drop(['Unnamed: 56'], axis=1, inplace=True)
23	df_projects.columns
24	
",DATA_TRANSFORM
3611,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_23 -----head---->df_projects_26],"24	
25	# Run this code cell
26	df_projects.head(15)[['boardapprovaldate', 'board_approval_month', 'closingdate']]
27	
",EDA
3612,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_26 -----df projects---->df_projects_32],"30	# HINT: It's easier to do this one column at a time
31	
32	df_projects['boardapprovaldate'] = pd.to_datetime(df_projects['boardapprovaldate'])
33	df_projects['closingdate'] = pd.to_datetime(df_projects['closingdate'])
",DATA_TRANSFORM
3613,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_32 -----df projects---->df_projects_33],"31	
32	df_projects['boardapprovaldate'] = pd.to_datetime(df_projects['boardapprovaldate'])
33	df_projects['closingdate'] = pd.to_datetime(df_projects['closingdate'])
34	
",DATA_TRANSFORM
3614,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_33 -----select---->df_projects_37_intermediate_1],"pandas -----to datetime---->df_projects_33
df_projects_32 -----df projects---->df_projects_33
df_projects_81_intermediate_2 -----select---->df_projects_81
df_projects_81_intermediate_2 -----dt---->df_projects_81",DATA_TRANSFORM
3615,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_37 -----select---->df_projects_40_intermediate_1],"df_projects_37_intermediate_2 -----second---->df_projects_37
df_projects_81_intermediate_2 -----select---->df_projects_81
df_projects_81_intermediate_2 -----dt---->df_projects_81",DATA_TRANSFORM
3616,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_40 -----select---->df_projects_44_intermediate_1],"df_projects_40_intermediate_2 -----month---->df_projects_40
df_projects_81_intermediate_2 -----select---->df_projects_81
df_projects_81_intermediate_2 -----dt---->df_projects_81",DATA_TRANSFORM
3617,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_44 -----select---->df_projects_59_intermediate_1],"df_projects_44_intermediate_2 -----weekday---->df_projects_44
df_projects_81_intermediate_2 -----select---->df_projects_81
df_projects_81_intermediate_2 -----dt---->df_projects_81",DATA_TRANSFORM
3618,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_59 -----select---->df_projects_60_intermediate_1],"df_projects_59_intermediate_2 -----year---->df_projects_59
df_projects_81_intermediate_2 -----select---->df_projects_81
df_projects_81_intermediate_2 -----dt---->df_projects_81",DATA_TRANSFORM
3619,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_60 -----select---->df_projects_61_intermediate_1],"df_projects_60_intermediate_2 -----day---->df_projects_60
df_projects_81_intermediate_2 -----select---->df_projects_81
df_projects_81_intermediate_2 -----dt---->df_projects_81",DATA_TRANSFORM
3620,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_61 -----select---->df_projects_62_intermediate_1],"df_projects_61_intermediate_2 -----weekday---->df_projects_61
df_projects_81_intermediate_2 -----select---->df_projects_81
df_projects_81_intermediate_2 -----dt---->df_projects_81",DATA_TRANSFORM
3621,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_62 -----select---->df_projects_63_intermediate_1],"df_projects_62_intermediate_2 -----year---->df_projects_62
df_projects_81_intermediate_2 -----select---->df_projects_81
df_projects_81_intermediate_2 -----dt---->df_projects_81",DATA_TRANSFORM
3622,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_63 -----select---->df_projects_64_intermediate_1],"df_projects_63_intermediate_2 -----day---->df_projects_63
df_projects_81_intermediate_2 -----select---->df_projects_81
df_projects_81_intermediate_2 -----dt---->df_projects_81",DATA_TRANSFORM
3623,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_64 -----select---->df_projects_66_intermediate_1],"df_projects_64_intermediate_2 -----weekday---->df_projects_64
df_projects_81_intermediate_2 -----select---->df_projects_81
df_projects_81_intermediate_2 -----dtype---->df_projects_81",DATA_TRANSFORM
3624,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_66 -----reassign---->df_projects_78],"76	
77	# TODO: Step 1 - convert the totalamt column from string to numeric. Be sure to remove the commas in this column
78	df_projects['totalamt'] = pd.to_numeric(df_projects['totalamt'].str.replace(',', ''))
79	
",DATA_TRANSFORM
3625,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_78 -----groupby---->df_projects_81_intermediate_1],"pandas -----to numeric---->df_projects_78
df_projects_66 -----reassign---->df_projects_78
df_projects_81_intermediate_2 -----groupby---->df_projects_81
df_projects_81_intermediate_2 -----sum---->df_projects_81",DATA_TRANSFORM
3626,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[matplotlib.pyplot -----xlabel---->plt_82],"80	# TODO: Step 2 - calculate the sum of the totalamt column by year and plot the results with a line plot
81	df_projects.groupby('approvalyear')['totalamt'].sum().plot(x='year', y='totalamt')
82	plt.xlabel('Year')
83	plt.ylabel('total amount')
",EDA
3627,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[matplotlib.pyplot -----ylabel---->plt_83],"81	df_projects.groupby('approvalyear')['totalamt'].sum().plot(x='year', y='totalamt')
82	plt.xlabel('Year')
83	plt.ylabel('total amount')
84	plt.title('Amount per year')
",EDA
3628,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[matplotlib.pyplot -----title---->plt_84],"82	plt.xlabel('Year')
83	plt.ylabel('total amount')
84	plt.title('Amount per year')
85	plt.show()
",EDA
3629,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[matplotlib.pyplot -----show---->plt_85],"83	plt.ylabel('total amount')
84	plt.title('Amount per year')
85	plt.show()
",EDA
3630,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_37_intermediate_1 -----dt---->df_projects_37_intermediate_2],"df_projects_33 -----select---->df_projects_37_intermediate_1
df_projects_81_intermediate_2 -----dt---->df_projects_81
df_projects_81_intermediate_2 -----second---->df_projects_81",DATA_TRANSFORM
3631,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_37_intermediate_2 -----second---->df_projects_37],"df_projects_37_intermediate_1 -----dt---->df_projects_37_intermediate_2
df_projects_81_intermediate_2 -----second---->df_projects_81
df_projects_81_intermediate_2 -----select---->df_projects_81",DATA_TRANSFORM
3632,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_40_intermediate_1 -----dt---->df_projects_40_intermediate_2],"df_projects_37 -----select---->df_projects_40_intermediate_1
df_projects_81_intermediate_2 -----dt---->df_projects_81
df_projects_81_intermediate_2 -----month---->df_projects_81",DATA_TRANSFORM
3633,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_40_intermediate_2 -----month---->df_projects_40],"df_projects_40_intermediate_1 -----dt---->df_projects_40_intermediate_2
df_projects_81_intermediate_2 -----month---->df_projects_81
df_projects_81_intermediate_2 -----select---->df_projects_81",DATA_TRANSFORM
3634,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_44_intermediate_1 -----dt---->df_projects_44_intermediate_2],"df_projects_40 -----select---->df_projects_44_intermediate_1
df_projects_81_intermediate_2 -----dt---->df_projects_81
df_projects_81_intermediate_2 -----weekday---->df_projects_81",DATA_TRANSFORM
3635,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_44_intermediate_2 -----weekday---->df_projects_44],"df_projects_44_intermediate_1 -----dt---->df_projects_44_intermediate_2
df_projects_81_intermediate_2 -----weekday---->df_projects_81
df_projects_81_intermediate_2 -----select---->df_projects_81",DATA_TRANSFORM
3636,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_59_intermediate_1 -----dt---->df_projects_59_intermediate_2],"df_projects_44 -----select---->df_projects_59_intermediate_1
df_projects_81_intermediate_2 -----dt---->df_projects_81
df_projects_81_intermediate_2 -----year---->df_projects_81",DATA_TRANSFORM
3637,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_59_intermediate_2 -----year---->df_projects_59],"df_projects_59_intermediate_1 -----dt---->df_projects_59_intermediate_2
df_projects_81_intermediate_2 -----year---->df_projects_81
df_projects_81_intermediate_2 -----select---->df_projects_81",DATA_TRANSFORM
3638,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_60_intermediate_1 -----dt---->df_projects_60_intermediate_2],"df_projects_59 -----select---->df_projects_60_intermediate_1
df_projects_81_intermediate_2 -----dt---->df_projects_81
df_projects_81_intermediate_2 -----day---->df_projects_81",DATA_TRANSFORM
3639,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_60_intermediate_2 -----day---->df_projects_60],"df_projects_60_intermediate_1 -----dt---->df_projects_60_intermediate_2
df_projects_81_intermediate_2 -----day---->df_projects_81
df_projects_81_intermediate_2 -----select---->df_projects_81",DATA_TRANSFORM
3640,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_61_intermediate_1 -----dt---->df_projects_61_intermediate_2],"df_projects_60 -----select---->df_projects_61_intermediate_1
df_projects_81_intermediate_2 -----dt---->df_projects_81
df_projects_81_intermediate_2 -----weekday---->df_projects_81",DATA_TRANSFORM
3641,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_61_intermediate_2 -----weekday---->df_projects_61],"df_projects_61_intermediate_1 -----dt---->df_projects_61_intermediate_2
df_projects_81_intermediate_2 -----weekday---->df_projects_81
df_projects_81_intermediate_2 -----select---->df_projects_81",DATA_TRANSFORM
3642,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_62_intermediate_1 -----dt---->df_projects_62_intermediate_2],"df_projects_61 -----select---->df_projects_62_intermediate_1
df_projects_81_intermediate_2 -----dt---->df_projects_81
df_projects_81_intermediate_2 -----year---->df_projects_81",DATA_TRANSFORM
3643,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_62_intermediate_2 -----year---->df_projects_62],"df_projects_62_intermediate_1 -----dt---->df_projects_62_intermediate_2
df_projects_81_intermediate_2 -----year---->df_projects_81
df_projects_81_intermediate_2 -----select---->df_projects_81",DATA_TRANSFORM
3644,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_63_intermediate_1 -----dt---->df_projects_63_intermediate_2],"df_projects_62 -----select---->df_projects_63_intermediate_1
df_projects_81_intermediate_2 -----dt---->df_projects_81
df_projects_81_intermediate_2 -----day---->df_projects_81",DATA_TRANSFORM
3645,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_63_intermediate_2 -----day---->df_projects_63],"df_projects_63_intermediate_1 -----dt---->df_projects_63_intermediate_2
df_projects_81_intermediate_2 -----day---->df_projects_81
df_projects_81_intermediate_2 -----select---->df_projects_81",DATA_TRANSFORM
3646,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_64_intermediate_1 -----dt---->df_projects_64_intermediate_2],"df_projects_63 -----select---->df_projects_64_intermediate_1
df_projects_81_intermediate_2 -----dt---->df_projects_81
df_projects_81_intermediate_2 -----weekday---->df_projects_81",DATA_TRANSFORM
3647,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_64_intermediate_2 -----weekday---->df_projects_64],"df_projects_64_intermediate_1 -----dt---->df_projects_64_intermediate_2
df_projects_81_intermediate_2 -----weekday---->df_projects_81
df_projects_81_intermediate_2 -----select---->df_projects_81",DATA_TRANSFORM
3648,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_66_intermediate_1 -----dtype---->df_projects_66],"df_projects_64 -----select---->df_projects_66_intermediate_1
df_projects_81_intermediate_2 -----dtype---->df_projects_81
df_projects_81_intermediate_2 -----reassign---->df_projects_81",DATA_TRANSFORM
3649,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_81_intermediate_1 -----sum---->df_projects_81_intermediate_2],"df_projects_78 -----groupby---->df_projects_81_intermediate_1
df_projects_81_intermediate_2 -----sum---->df_projects_81
df_projects_81_intermediate_2 -----plot---->df_projects_81",DATA_TRANSFORM
3650,0001c8bc91af63fbe74fcb667422b20b30d2f943.execution_graph,[df_projects_81_intermediate_2 -----plot---->df_projects_81],"df_projects_81_intermediate_1 -----sum---->df_projects_81_intermediate_2
df_projects_81_intermediate_2 -----plot---->df_projects_81",EDA
3651,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[a_5 -----reassign---->a_14],"12	print(max((3,6,9,12,15)))
13	
14	a = [1,2,3,4,5]
15	print(max(a))
",DATA_TRANSFORM
3652,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_19 -----x---->y_21],"19	x = 1
20	
21	y = numpy.cos(x)
22	
",DATA_TRANSFORM
3653,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_19 -----reassign---->x_27],"25	import numpy as np
26	
27	x = 1
28	
",DATA_TRANSFORM
3654,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[y_21 -----reassign---->y_29],"27	x = 1
28	
29	y = np.cos(x)
30	
",DATA_TRANSFORM
3655,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[numpy -----cos---->y_21],"19	x = 1
20	
21	y = numpy.cos(x)
22	
",DATA_TRANSFORM
3656,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[numpy -----cos---->y_29],"27	x = 1
28	
29	y = np.cos(x)
30	
",DATA_TRANSFORM
3657,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[numpy -----cos---->cos_35],"33	from numpy import cos
34	
35	cos(x)
36	
",DATA_TRANSFORM
3658,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[numpy -----cosine---->cosine_39],"37	from numpy import cos as cosine
38	
39	cosine(x)
40	
",DATA_TRANSFORM
3659,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[numpy -----degrees---->degrees_57],"55	
56	# Convert angles from radians to degrees
57	degrees = np.degrees(x)
58	print(degrees)
",DATA_TRANSFORM
3660,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[numpy -----radians---->radians_61],"59	
60	# Convert angles from degrees to radians
61	radians = np.radians(degrees)
62	print(radians)   
",DATA_TRANSFORM
3661,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[numpy -----amin---->np_142],"140	print(xmin, xmax, xmean)
141	
142	np.amin([1,2,3, -1])
143	
",DATA_TRANSFORM
3662,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[numpy -----array---->x_149],"147	
148	import numpy as np
149	x = np.array([1,2,3,4,5])
150	x = np.array([1])
",DATA_TRANSFORM
3663,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[numpy -----array---->x_150],"148	import numpy as np
149	x = np.array([1,2,3,4,5])
150	x = np.array([1])
151	x = [1]
",DATA_TRANSFORM
3664,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[numpy -----linalg---->np_152_intermediate_1],"np_152_intermediate_1 -----cos---->np_152
np_152_intermediate_1 -----cos---->np_152
np_152_intermediate_1 -----cos---->np_152
np_152_intermediate_1 -----cosine---->np_152
np_152_intermediate_1 -----degrees---->np_152
np_152_intermediate_1 -----radians---->np_152
np_152_intermediate_1 -----amin---->np_152
np_152_intermediate_1 -----array---->np_152
np_152_intermediate_1 -----array---->np_152
np_152_intermediate_1 -----linalg---->np_152
np_152_intermediate_1 -----norm---->np_152",DATA_TRANSFORM
3665,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_27 -----x---->y_29],"27	x = 1
28	
29	y = np.cos(x)
30	
",DATA_TRANSFORM
3666,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_27 -----x---->cos_35],"33	from numpy import cos
34	
35	cos(x)
36	
",DATA_TRANSFORM
3667,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_27 -----x---->cosine_39],"37	from numpy import cos as cosine
38	
39	cosine(x)
40	
",DATA_TRANSFORM
3668,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_27 -----reassign---->x_43],"41	# Some Numpy functions
42	
43	x = 1
44	y = 2
",ENVIRONMENT
3669,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[y_29 -----reassign---->y_44],"42	
43	x = 1
44	y = 2
45	z = 3
",DATA_TRANSFORM
3670,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_43 -----x---->degrees_57],"55	
56	# Convert angles from radians to degrees
57	degrees = np.degrees(x)
58	print(degrees)
",DATA_TRANSFORM
3671,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_43 -----reassign---->x_92],"90	    
91	# Value of x to test
92	x = - 0.5
93	
",ENVIRONMENT
3672,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[degrees_57 -----degrees---->radians_61],"59	
60	# Convert angles from degrees to radians
61	radians = np.radians(degrees)
62	print(radians)   
",DATA_TRANSFORM
3673,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_92 -----reassign---->x_149],"147	
148	import numpy as np
149	x = np.array([1,2,3,4,5])
150	x = np.array([1])
",DATA_TRANSFORM
3674,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[xmin_126 -----reassign---->xmin_139],"137	
138	
139	xmin, xmax, xmean = np_compute_max_min_mean(0.5, 0.1, -20)
140	print(xmin, xmax, xmean)
",DATA_TRANSFORM
3675,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[xmax_126 -----reassign---->xmax_139],"137	
138	
139	xmin, xmax, xmean = np_compute_max_min_mean(0.5, 0.1, -20)
140	print(xmin, xmax, xmean)
",DATA_TRANSFORM
3676,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[xmean_126 -----reassign---->xmean_139],"137	
138	
139	xmin, xmax, xmean = np_compute_max_min_mean(0.5, 0.1, -20)
140	print(xmin, xmax, xmean)
",EDA
3677,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_149 -----reassign---->x_150],"148	import numpy as np
149	x = np.array([1,2,3,4,5])
150	x = np.array([1])
151	x = [1]
",DATA_TRANSFORM
3678,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_150 -----reassign---->x_151],"149	x = np.array([1,2,3,4,5])
150	x = np.array([1])
151	x = [1]
152	np.linalg.norm(x)
",DATA_TRANSFORM
3679,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[x_151 -----x---->np_152],"150	x = np.array([1])
151	x = [1]
152	np.linalg.norm(x)
153	
",DATA_TRANSFORM
3680,0001c936a6266b7ff4cdd67730d1fd5fa5544b4d.execution_graph,[np_152_intermediate_1 -----norm---->np_152],"numpy -----linalg---->np_152_intermediate_1
np_152_intermediate_1 -----norm---->np_152",DATA_TRANSFORM
3681,0001cea8ad48c3f8c11852423b28e8da328878a3.execution_graph,[data_3 -----mean---->ztest_4_intermediate_1],"numpy -----loadtxt---->data_3
ztest_4_intermediate_1 -----mean---->ztest_4
ztest_4_intermediate_1 -----sub---->ztest_4",EDA
3682,0001cea8ad48c3f8c11852423b28e8da328878a3.execution_graph,[numpy -----loadtxt---->data_3],"1	import numpy as np
2	
3	data=np.loadtxt(""time.txt"")
4	ztest=(36-data.mean())/6*np.sqrt(np.size(data))
",DATA_IMPORT_EXTRACTION
3683,0001cea8ad48c3f8c11852423b28e8da328878a3.execution_graph,[numpy -----sqrt---->ztest_4],"2	
3	data=np.loadtxt(""time.txt"")
4	ztest=(36-data.mean())/6*np.sqrt(np.size(data))
5	ztest
",EDA
3684,0001cea8ad48c3f8c11852423b28e8da328878a3.execution_graph,[ztest_4 -----ztest---->ztest_5],"3	data=np.loadtxt(""time.txt"")
4	ztest=(36-data.mean())/6*np.sqrt(np.size(data))
5	ztest
",EDA
3685,0001cea8ad48c3f8c11852423b28e8da328878a3.execution_graph,[ztest_4_intermediate_1 -----sub---->ztest_4],"data_3 -----mean---->ztest_4_intermediate_1
ztest_4_intermediate_1 -----sub---->ztest_4
ztest_4_intermediate_1 -----ztest---->ztest_4",EDA
3686,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[answers_58 -----answers---->content_loss_test_158],"156	    print('Maximum error is {:.3f}'.format(error))
157	        
158	content_loss_test(answers['cl_out'])
159	
",MODEL_EVALUATION
3687,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[answers_58 -----answers---->gram_matrix_test_206],"204	    print('Maximum error is {:.3f}'.format(error))
205	    
206	gram_matrix_test(answers['gm_out'])
207	
",MODEL_EVALUATION
3688,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[answers_58 -----answers---->style_loss_test_277],"275	
276	    
277	style_loss_test(answers['sl_out'])
278	
",MODEL_EVALUATION
3689,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[answers_58 -----answers---->tv_loss_test_326],"324	    print('Error is {:.3f}'.format(error))
325	    
326	tv_loss_test(answers['tv_out'])
327	
",MODEL_EVALUATION
3690,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[numpy -----load---->answers_58],"56	check_scipy()
57	
58	answers = np.load('style-transfer-checks.npz')
59	#answers.cuda()
",DATA_IMPORT_EXTRACTION
3691,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[dtype_61 -----dtype---->cnn_67],"65	# Load the pre-trained SqueezeNet model.
66	cnn = torchvision.models.squeezenet1_1(pretrained=True).features
67	cnn.type(dtype)
68	
",ENVIRONMENT
3692,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[torch -----float tensor---->dtype_61],"59	#answers.cuda()
60	
61	dtype = torch.FloatTensor
62	# Uncomment out the following line if you're on a machine with a GPU set up for PyTorch!
",ENVIRONMENT
3693,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[cnn_66 -----type---->cnn_67],"65	# Load the pre-trained SqueezeNet model.
66	cnn = torchvision.models.squeezenet1_1(pretrained=True).features
67	cnn.type(dtype)
68	
",MISSING
3694,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[torchvision -----models---->cnn_66_intermediate_1],"cnn_66_intermediate_2 -----models---->cnn_66
cnn_66_intermediate_2 -----squeezenet1 1---->cnn_66",MISSING
3695,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[style_transfer_435 -----style transfer---->style_transfer_450],"448	}
449	
450	style_transfer(**params2)
451	
",HYPERPARAMETER_TUNING
3696,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[style_transfer_450 -----style transfer---->style_transfer_465],"463	}
464	
465	style_transfer(**params3)
466	
",HYPERPARAMETER_TUNING
3697,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[style_transfer_465 -----style transfer---->style_transfer_481],"479	}
480	
481	style_transfer(**params_inv)
482	
",HYPERPARAMETER_TUNING
3698,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[cnn_66_intermediate_1 -----squeezenet1 1---->cnn_66_intermediate_2],"torchvision -----models---->cnn_66_intermediate_1
cnn_66_intermediate_2 -----squeezenet1 1---->cnn_66
cnn_66_intermediate_2 -----features---->cnn_66",MISSING
3699,0001d496eb277dedfaba70b643565b6720abb788.execution_graph,[cnn_66_intermediate_2 -----features---->cnn_66],"cnn_66_intermediate_1 -----squeezenet1 1---->cnn_66_intermediate_2
cnn_66_intermediate_2 -----features---->cnn_66
cnn_66_intermediate_2 -----type---->cnn_66",MISSING
3700,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[df_9 -----df[df['country'] map(lambda x: x in countries of interest)]---->coi_df_16_intermediate_1],"pandas -----read csv---->df_9
data_38_intermediate_2 -----df[df['country'] map(lambda x: x in countries of interest)]---->data_38
data_38_intermediate_2 -----select---->data_38",DATA_TRANSFORM
3701,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[pandas -----read csv---->df_9],"7	import seaborn as sns
8	
9	df = pandas.read_csv('survey_results_public.csv')
10	schema = pandas.read_csv('survey_results_schema.csv').set_index('Column')
",DATA_IMPORT_EXTRACTION
3702,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[pandas -----read csv---->schema_10_intermediate_1],"data_38_intermediate_2 -----read csv---->data_38
data_38_intermediate_2 -----read csv---->data_38
data_38_intermediate_2 -----set index---->data_38",DATA_IMPORT_EXTRACTION
3703,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[fig_17 -----fig---->fig_22],"20	# sns.boxplot(x=""Country"", y=""CareerSatisfaction"", data=coi_df)
21	
22	fig
23	
",ENVIRONMENT
3704,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[matplotlib -----plt---->fig_17_intermediate_1],"data_38_intermediate_2 -----plt---->data_38
data_38_intermediate_2 -----plt---->data_38
data_38_intermediate_2 -----plt---->data_38
data_38_intermediate_2 -----figure---->data_38",EDA
3705,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[matplotlib -----plt---->fig_24_intermediate_1],"data_38_intermediate_2 -----plt---->data_38
data_38_intermediate_2 -----plt---->data_38
data_38_intermediate_2 -----plt---->data_38
data_38_intermediate_2 -----figure---->data_38",EDA
3706,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[matplotlib -----plt---->fig_29_intermediate_1],"data_38_intermediate_2 -----plt---->data_38
data_38_intermediate_2 -----plt---->data_38
data_38_intermediate_2 -----plt---->data_38
data_38_intermediate_2 -----figure---->data_38",EDA
3707,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[seaborn -----boxplot---->sns_18],"16	coi_df = df[df['Country'].map(lambda x: x in countries_of_interest)]
17	fig = plt.figure(figsize=(12,6))
18	sns.boxplot(x=""Country"", y=""JobSatisfaction"", data=coi_df)
19	# fig = plt.figure(figsize=(8,6))
",EDA
3708,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[seaborn -----boxplot---->sns_25],"23	
24	fig = plt.figure(figsize=(12,6))
25	sns.boxplot(x=""Country"", y=""CareerSatisfaction"", data=coi_df)
26	
",EDA
3709,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[seaborn -----boxplot---->sns_30],"28	
29	fig = plt.figure(figsize=(12,6))
30	sns.boxplot(x=""Country"", y=""Salary"", data=coi_df)
31	
",EDA
3710,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[fig_22 -----reassign---->fig_24],"22	fig
23	
24	fig = plt.figure(figsize=(12,6))
25	sns.boxplot(x=""Country"", y=""CareerSatisfaction"", data=coi_df)
",ENVIRONMENT
3711,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[fig_24 -----fig---->fig_27],"25	sns.boxplot(x=""Country"", y=""CareerSatisfaction"", data=coi_df)
26	
27	fig
28	
",EDA
3712,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[fig_27 -----reassign---->fig_29],"27	fig
28	
29	fig = plt.figure(figsize=(12,6))
30	sns.boxplot(x=""Country"", y=""Salary"", data=coi_df)
",ENVIRONMENT
3713,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[fig_29 -----fig---->fig_32],"30	sns.boxplot(x=""Country"", y=""Salary"", data=coi_df)
31	
32	fig
33	
",EDA
3714,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[data_34 -----head---->data_36],"34	data = pd.read_csv('survey_results_public.csv')
35	
36	data.head(10)
37	
",EDA
3715,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[data_36 -----select---->data_38_intermediate_1],"data_34 -----head---->data_36
data_38_intermediate_2 -----select---->data_38
data_38_intermediate_2 -----value counts---->data_38",EDA
3716,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[data_38 -----select---->codes_90],"88	'Zaire':'ZAR','Zambia':'ZMB','Zimbabwe':'ZWE'}
89	
90	codes = [countries[country] if country != 'I prefer not to say' else None for country in data['Country']]
91	
",DATA_TRANSFORM
3717,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[data_38 -----reassign---->data_92],"90	codes = [countries[country] if country != 'I prefer not to say' else None for country in data['Country']]
91	
92	data['Code']=codes
93	
",EDA
3718,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[countries_40 -----countries[country]---->codes_90],"88	'Zaire':'ZAR','Zambia':'ZMB','Zimbabwe':'ZWE'}
89	
90	codes = [countries[country] if country != 'I prefer not to say' else None for country in data['Country']]
91	
",DATA_TRANSFORM
3719,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[codes_90 -----codes---->data_92],"90	codes = [countries[country] if country != 'I prefer not to say' else None for country in data['Country']]
91	
92	data['Code']=codes
93	
",DATA_TRANSFORM
3720,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[coi_df_16_intermediate_1 -----select---->coi_df_16_intermediate_2],"df_9 -----df[df['country'] map(lambda x: x in countries of interest)]---->coi_df_16_intermediate_1
data_38_intermediate_2 -----select---->data_38
data_38_intermediate_2 -----map---->data_38",DATA_TRANSFORM
3721,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[coi_df_16_intermediate_2 -----map---->coi_df_16],"coi_df_16_intermediate_1 -----select---->coi_df_16_intermediate_2
data_38_intermediate_2 -----map---->data_38",DATA_TRANSFORM
3722,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[schema_10_intermediate_1 -----set index---->schema_10],"pandas -----read csv---->schema_10_intermediate_1
data_38_intermediate_2 -----set index---->data_38",DATA_TRANSFORM
3723,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[fig_17_intermediate_1 -----figure---->fig_17],"matplotlib -----plt---->fig_17_intermediate_1
data_38_intermediate_2 -----figure---->data_38
data_38_intermediate_2 -----fig---->data_38",EDA
3724,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[fig_24_intermediate_1 -----figure---->fig_24],"matplotlib -----plt---->fig_24_intermediate_1
data_38_intermediate_2 -----figure---->data_38
data_38_intermediate_2 -----fig---->data_38",EDA
3725,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[fig_29_intermediate_1 -----figure---->fig_29],"matplotlib -----plt---->fig_29_intermediate_1
data_38_intermediate_2 -----figure---->data_38
data_38_intermediate_2 -----fig---->data_38",EDA
3726,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[data_38_intermediate_1 -----value counts---->data_38_intermediate_2],"data_36 -----select---->data_38_intermediate_1
data_38_intermediate_2 -----value counts---->data_38
data_38_intermediate_2 -----plot---->data_38",EDA
3727,0001d6ba01616f57709cc2c5441bf023072ede4e.execution_graph,[data_38_intermediate_2 -----plot---->data_38],"data_38_intermediate_1 -----value counts---->data_38_intermediate_2
data_38_intermediate_2 -----plot---->data_38
data_38_intermediate_2 -----select---->data_38
data_38_intermediate_2 -----reassign---->data_38",EDA
3728,0001dc75eec0940018079d757f465fb1f97a5a88.execution_graph,[numpy -----random---->np_3_intermediate_1],"np_3_intermediate_1 -----random---->np_3
np_3_intermediate_1 -----seed---->np_3",ENVIRONMENT
3729,0001dc75eec0940018079d757f465fb1f97a5a88.execution_graph,[data_22 -----head---->data_23],"21	# Create dummy variables
22	data = None
23	data.head()
24	
",EDA
3730,0001dc75eec0940018079d757f465fb1f97a5a88.execution_graph,[tree_clf_28 -----tree clf---->plot_feature_importances_41],"39	    plt.ylabel('Feature')
40	
41	plot_feature_importances(tree_clf)
42	
",MODEL_EVALUATION
3731,0001dc75eec0940018079d757f465fb1f97a5a88.execution_graph,[plot_feature_importances_41 -----plot feature importances---->plot_feature_importances_70],"68	# Test accuracy score
69	
70	plot_feature_importances(forest)
71	
",MODEL_EVALUATION
3732,0001dc75eec0940018079d757f465fb1f97a5a88.execution_graph,[forest_64 -----forest---->plot_feature_importances_70],"68	# Test accuracy score
69	
70	plot_feature_importances(forest)
71	
",MODEL_EVALUATION
3733,0001dc75eec0940018079d757f465fb1f97a5a88.execution_graph,[np_3_intermediate_1 -----seed---->np_3],"numpy -----random---->np_3_intermediate_1
np_3_intermediate_1 -----seed---->np_3",ENVIRONMENT
3734,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[N_5 -----n---->x_6],"4	
5	N = 100
6	x = np.linspace(0, 2*np.pi, N)
7	y = np.sin(x)
",DATA_TRANSFORM
3735,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[x_6 -----x---->y_7],"5	N = 100
6	x = np.linspace(0, 2*np.pi, N)
7	y = np.sin(x)
8	
",DATA_TRANSFORM
3736,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[x_6 -----x---->ax_11],"9	fig, ax = plt.subplots()
10	
11	ax.plot(x, y, '--', alpha=0.3)
12	line, = ax.plot([], [], '-o')
",EDA
3737,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[numpy -----linspace---->x_6],"4	
5	N = 100
6	x = np.linspace(0, 2*np.pi, N)
7	y = np.sin(x)
",DATA_TRANSFORM
3738,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[numpy -----sin---->y_7],"5	N = 100
6	x = np.linspace(0, 2*np.pi, N)
7	y = np.sin(x)
8	
",DATA_TRANSFORM
3739,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[y_7 -----y---->ax_11],"9	fig, ax = plt.subplots()
10	
11	ax.plot(x, y, '--', alpha=0.3)
12	line, = ax.plot([], [], '-o')
",DATA_TRANSFORM
3740,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[fig_9 -----fig---->nestor_21],"19	    return line,
20	
21	nestor = FuncAnimation(fig, update, np.arange(N))
22	
",DATA_TRANSFORM
3741,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[matplotlib.pyplot -----subplots---->fig_9],"7	y = np.sin(x)
8	
9	fig, ax = plt.subplots()
10	
",EDA
3742,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[matplotlib.pyplot -----subplots---->ax_9],"7	y = np.sin(x)
8	
9	fig, ax = plt.subplots()
10	
",ENVIRONMENT
3743,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[ax_9 -----plot---->ax_11],"9	fig, ax = plt.subplots()
10	
11	ax.plot(x, y, '--', alpha=0.3)
12	line, = ax.plot([], [], '-o')
",EDA
3744,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[ax_11 -----plot---->line_12],"10	
11	ax.plot(x, y, '--', alpha=0.3)
12	line, = ax.plot([], [], '-o')
13	
",EDA
3745,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[ax_11 -----set xlim---->ax_14],"12	line, = ax.plot([], [], '-o')
13	
14	ax.set_xlim(0, 2*np.pi)
15	ax.set_ylim(-1, 1)
",EDA
3746,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[ax_14 -----set ylim---->ax_15],"13	
14	ax.set_xlim(0, 2*np.pi)
15	ax.set_ylim(-1, 1)
16	
",EDA
3747,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[nestor_21 -----save---->nestor_23],"21	nestor = FuncAnimation(fig, update, np.arange(N))
22	
23	nestor.save('holy.gif', writer='imagemagick')
",DATA_EXPORT
3748,0001ebc9c71cc97c30e86bc3734da837a3298ec2.execution_graph,[matplotlib.animation -----func animation---->nestor_21],"19	    return line,
20	
21	nestor = FuncAnimation(fig, update, np.arange(N))
22	
",EDA
3749,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[dft_6 -----dft---->dft_14],"12	                                G = pd.Series([1]*3,dtype='int8')))
13	
14	dft
15	
",DATA_TRANSFORM
3750,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[pandas -----data frame---->dft_6],"4	# create a small dictionary with different data types
5	
6	dft = pd.DataFrame(dict(A = np.random.rand(3),
7	                        B = 1,
",DATA_TRANSFORM
3751,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[pandas -----series---->pd_27],"25	# these ints are coerced to floats
26	
27	pd.Series([1, 2, 3, 4, 5, 6.])
28	
",DATA_TRANSFORM
3752,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[pandas -----series---->test_31],"29	# string data forces an ``object`` dtype
30	
31	test = pd.Series([1, 2, 3, 6., 'foo'])
32	type(test[4])
",DATA_TRANSFORM
3753,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[pandas -----data frame---->df_41],"39	# create a small data frame. 
40	
41	df = pd.DataFrame(np.random.randn(5, 4), columns=['a', 'b', 'c', 'd'])
42	df
",DATA_TRANSFORM
3754,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[pandas -----series---->s_71],"69	# convert the array into a series
70	
71	s = pd.Series(data)
72	
",DATA_TRANSFORM
3755,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[pandas -----value counts---->pd_77],"75	# value_counts()
76	
77	pd.value_counts(s)
78	
",EDA
3756,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[dft_14 -----dtypes---->dft_19],"17	# are in each column. 
18	
19	dft.dtypes
20	
",EDA
3757,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[dft_19 -----get dtype counts---->dft_37],"35	# of columns of each type in a DataFrame:
36	
37	dft.get_dtype_counts()
38	
",EDA
3758,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[df_41 -----df---->df_42],"40	
41	df = pd.DataFrame(np.random.randn(5, 4), columns=['a', 'b', 'c', 'd'])
42	df
43	
",DATA_TRANSFORM
3759,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[df_42 -----apply---->dfnan_47],"45	# NaN means not a number
46	
47	dfnan = df.apply(np.sqrt)
48	dfnan
",DATA_TRANSFORM
3760,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[df_42 -----apply---->df_52],"50	# find the mean of all of the columns
51	
52	df.apply(np.mean, axis=0)
53	
",DATA_TRANSFORM
3761,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[dfnan_47 -----dfnan---->dfnan_48],"46	
47	dfnan = df.apply(np.sqrt)
48	dfnan
49	
",DATA_TRANSFORM
3762,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[dfnan_48 -----fillna---->dfnan_55],"53	
54	
55	dfnan['a'] = dfnan.fillna(np.mean(df['a']))# fill in the Nan values in the ""a"" column
56	dfnan
",DATA_TRANSFORM
3763,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[df_52 -----apply---->df_60],"58	# find the mean of all of the rows
59	
60	df.apply(np.mean, axis=1) #axis=1 is for rows
61	df
",DATA_TRANSFORM
3764,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[dfnan_55 -----dfnan---->dfnan_56],"54	
55	dfnan['a'] = dfnan.fillna(np.mean(df['a']))# fill in the Nan values in the ""a"" column
56	dfnan
57	
",DATA_TRANSFORM
3765,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[df_60 -----df---->df_61],"59	
60	df.apply(np.mean, axis=1) #axis=1 is for rows
61	df
62	
",DATA_TRANSFORM
3766,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[data_66 -----data---->data_67],"65	
66	data = np.random.randint(0, 7, size = 50)
67	data
68	
",DATA_TRANSFORM
3767,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[numpy -----random---->data_66_intermediate_1],"data_66_intermediate_1 -----random---->data_66
data_66_intermediate_1 -----randint---->data_66",DATA_TRANSFORM
3768,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[data_67 -----data---->s_71],"69	# convert the array into a series
70	
71	s = pd.Series(data)
72	
",EDA
3769,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[s_71 -----s---->pd_77],"75	# value_counts()
76	
77	pd.value_counts(s)
78	
",EDA
3770,0001f022c2a6ba8d10808b2caa2d3321516d3f05.execution_graph,[data_66_intermediate_1 -----randint---->data_66],"numpy -----random---->data_66_intermediate_1
data_66_intermediate_1 -----randint---->data_66
data_66_intermediate_1 -----data---->data_66",DATA_TRANSFORM
3771,000204d4fd9bbbdadc810a8c7272e861ec9ad850.execution_graph,[size_5 -----size---->sample_7],"5	size = 500
6	normal = ot.Normal(1)
7	sample = normal.getSample(size)
8	
",DATA_TRANSFORM
3772,000204d4fd9bbbdadc810a8c7272e861ec9ad850.execution_graph,[normal_6 -----get sample---->sample_7],"5	size = 500
6	normal = ot.Normal(1)
7	sample = normal.getSample(size)
8	
",DATA_TRANSFORM
3773,000204d4fd9bbbdadc810a8c7272e861ec9ad850.execution_graph,[openturns -----normal---->normal_6],"4	# Create data to visualize
5	size = 500
6	normal = ot.Normal(1)
7	sample = normal.getSample(size)
",DATA_EXPORT
3774,000204d4fd9bbbdadc810a8c7272e861ec9ad850.execution_graph,[openturns -----histogram factory---->ot_10_intermediate_1],"ot_10_intermediate_2 -----normal---->ot_10
ot_10_intermediate_2 -----histogram factory---->ot_10
ot_10_intermediate_2 -----build---->ot_10",EDA
3775,000204d4fd9bbbdadc810a8c7272e861ec9ad850.execution_graph,[sample_7 -----sample---->ot_10],"8	
9	# Draw histogram
10	ot.HistogramFactory().build(sample).drawPDF()
",EDA
3776,000204d4fd9bbbdadc810a8c7272e861ec9ad850.execution_graph,[ot_10_intermediate_1 -----build---->ot_10_intermediate_2],"openturns -----histogram factory---->ot_10_intermediate_1
ot_10_intermediate_2 -----build---->ot_10
ot_10_intermediate_2 -----draw pdf---->ot_10",EDA
3777,000204d4fd9bbbdadc810a8c7272e861ec9ad850.execution_graph,[ot_10_intermediate_2 -----draw pdf---->ot_10],"ot_10_intermediate_1 -----build---->ot_10_intermediate_2
ot_10_intermediate_2 -----draw pdf---->ot_10",EDA
3778,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[warnings -----filterwarnings---->warnings_6],"4	import json
5	import warnings
6	warnings.filterwarnings(action='ignore', category=UserWarning, module='gensim')
7	from gensim.models import Word2Vec
",ENVIRONMENT
3779,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[os -----listdir---->folders_10],"8	import logging
9	
10	folders = [x for x in os.listdir('..//..//data//clean_data') if x[-3:] != 'csv']
11	
",DATA_IMPORT_EXTRACTION
3780,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[os -----system---->os_14],"12	sizes = [300]
13	data = []
14	if 'model' not in os.listdir('..//..//data') : os.system('mkdir ""..//..//data//model""') 
15	for folder in folders :
",ENVIRONMENT
3781,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[os -----system---->os_16],"14	if 'model' not in os.listdir('..//..//data') : os.system('mkdir ""..//..//data//model""') 
15	for folder in folders :
16	    os.system('mkdir ""..//..//data//model//%s""'%folder)
17	    #data = []
",ENVIRONMENT
3782,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[os -----system---->os_23],"21	#######
22	for dimsize in sizes :
23	    os.system('mkdir ""..//..//data//model//%s//%s""'%(folder,dimsize))
24	    logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO) 
",ENVIRONMENT
3783,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[data_13 -----loop---->data_19_intermediate_1],"loop_data_13_data_19 -----restart_loop---->data_13
data_19_intermediate_1 -----loop---->data_19
data_19_intermediate_1 -----add---->data_19",DATA_TRANSFORM
3784,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[os_14 -----loop---->os_16],"
",ENVIRONMENT
3785,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[os_16 -----end_loop---->loop_os_14_os_16],"
",ENVIRONMENT
3786,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[data_19 -----end_loop---->loop_data_13_data_19],"
",MODEL_TRAIN
3787,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[json -----load---->data_19],"17	    #data = []
18	    for file in os.listdir('..//..//data//clean_data//%s'%folder) :
19	        data+= json.load(open('..//..//data//clean_data//%s//%s'%(folder,file)))
20	
",DATA_IMPORT_EXTRACTION
3788,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[loop_os_14_os_16 -----restart_loop---->os_14],"
",ENVIRONMENT
3789,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[loop_os_14_os_16 -----loop---->os_23],"
",ENVIRONMENT
3790,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[loop_data_13_data_19 -----restart_loop---->data_13],"
",MISSING
3791,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[loop_data_13_data_19 -----data---->model_25],"23	    os.system('mkdir ""..//..//data//model//%s//%s""'%(folder,dimsize))
24	    logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO) 
25	    model = Word2Vec(data, size= dimsize, window = 5 , min_count= 5 , workers=4, sg=1)
26	    model.save('..//..//data//model//%s//%s//model'%(folder,dimsize))
",MODEL_TRAIN
3792,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[os_23 -----end_loop---->loop_loop_os_14_os_16_os_23],"
",ENVIRONMENT
3793,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[logging -----basic config---->logging_24],"22	for dimsize in sizes :
23	    os.system('mkdir ""..//..//data//model//%s//%s""'%(folder,dimsize))
24	    logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO) 
25	    model = Word2Vec(data, size= dimsize, window = 5 , min_count= 5 , workers=4, sg=1)
",ENVIRONMENT
3794,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[model_25 -----save---->model_26],"24	    logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO) 
25	    model = Word2Vec(data, size= dimsize, window = 5 , min_count= 5 , workers=4, sg=1)
26	    model.save('..//..//data//model//%s//%s//model'%(folder,dimsize))
27	    model = ''
",DATA_EXPORT
3795,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[gensim.models -----word2vec---->model_25],"23	    os.system('mkdir ""..//..//data//model//%s//%s""'%(folder,dimsize))
24	    logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO) 
25	    model = Word2Vec(data, size= dimsize, window = 5 , min_count= 5 , workers=4, sg=1)
26	    model.save('..//..//data//model//%s//%s//model'%(folder,dimsize))
",MODEL_TRAIN
3796,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[model_26 -----reassign---->model_27],"25	    model = Word2Vec(data, size= dimsize, window = 5 , min_count= 5 , workers=4, sg=1)
26	    model.save('..//..//data//model//%s//%s//model'%(folder,dimsize))
27	    model = ''
28	
",DATA_EXPORT
3797,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[loop_loop_os_14_os_16_os_23 -----restart_loop---->loop_os_14_os_16],"
",ENVIRONMENT
3798,00020a37f54209b39ce4a70b33470553ee4dde0c.execution_graph,[data_19_intermediate_1 -----add---->data_19],"data_13 -----loop---->data_19_intermediate_1
data_19_intermediate_1 -----add---->data_19
data_19_intermediate_1 -----end_loop---->data_19",DATA_TRANSFORM
3799,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[s_7 -----loop---->s_19],"
",DATA_IMPORT_EXTRACTION
3800,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[i_8 -----loop---->i_24_intermediate_1],"loop_i_8_i_24 -----restart_loop---->i_8
plt_66_intermediate_1 -----loop---->plt_66
plt_66_intermediate_1 -----mod---->plt_66
plt_66_intermediate_1 -----mod---->plt_66
plt_66_intermediate_1 -----mod---->plt_66
plt_66_intermediate_1 -----add---->plt_66",DATA_IMPORT_EXTRACTION
3801,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[i_8 -----mod---->s_15],"13	while(i<5800):
14	    if(i<100):
15	        s = 'Test/test000%d.txt' % i
16	    elif(i<1000):
",DATA_TRANSFORM
3802,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[i_8 -----mod---->s_17],"15	        s = 'Test/test000%d.txt' % i
16	    elif(i<1000):
17	        s = 'Test/test00%d.txt' % i
18	    else:
",DATA_IMPORT_EXTRACTION
3803,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[i_8 -----mod---->s_19],"17	        s = 'Test/test00%d.txt' % i
18	    else:
19	        s = 'Test/test0%d.txt' % i
20	        
",DATA_TRANSFORM
3804,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[a_9 -----loop---->a_34_intermediate_1],"loop_a_9_a_34 -----restart_loop---->a_9
plt_66_intermediate_1 -----loop---->plt_66
plt_66_intermediate_1 -----append---->plt_66",DATA_IMPORT_EXTRACTION
3805,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[b_10 -----loop---->b_35_intermediate_1],"loop_b_10_b_35 -----restart_loop---->b_10
plt_66_intermediate_1 -----loop---->plt_66
plt_66_intermediate_1 -----append---->plt_66",DATA_IMPORT_EXTRACTION
3806,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[s_19 -----end_if---->branch_s_15_s_17_s_19],"
",DATA_IMPORT_EXTRACTION
3807,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[i_24 -----end_loop---->loop_i_8_i_24],"
",DATA_IMPORT_EXTRACTION
3808,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[a_34 -----end_loop---->loop_a_9_a_34],"
",DATA_TRANSFORM
3809,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[b_35 -----end_loop---->loop_b_10_b_35],"
",MISSING
3810,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[s_15 -----end_if---->branch_s_15_s_17_s_19],"
",DATA_IMPORT_EXTRACTION
3811,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[s_17 -----end_if---->branch_s_15_s_17_s_19],"
",DATA_IMPORT_EXTRACTION
3812,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[branch_s_15_s_17_s_19 -----s---->infile_21],"19	        s = 'Test/test0%d.txt' % i
20	        
21	    infile = open(s, 'r')
22	    text = infile.readlines()
",DATA_IMPORT_EXTRACTION
3813,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[branch_s_15_s_17_s_19 -----end_loop---->loop_s_7_branch_s_15_s_17_s_19],"
",DATA_IMPORT_EXTRACTION
3814,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[infile_21 -----readlines---->text_22],"20	        
21	    infile = open(s, 'r')
22	    text = infile.readlines()
23	    
",DATA_IMPORT_EXTRACTION
3815,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[ai_26 -----loop---->ai_31_intermediate_1],"loop_ai_26_ai_31 -----restart_loop---->ai_26
plt_66_intermediate_1 -----loop---->plt_66
plt_66_intermediate_1 -----append---->plt_66",DATA_IMPORT_EXTRACTION
3816,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[bi_27 -----loop---->bi_32_intermediate_1],"loop_bi_27_bi_32 -----restart_loop---->bi_27
plt_66_intermediate_1 -----loop---->plt_66
plt_66_intermediate_1 -----append---->plt_66",DATA_IMPORT_EXTRACTION
3817,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[ai_31 -----end_loop---->loop_ai_26_ai_31],"
",DATA_IMPORT_EXTRACTION
3818,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[bi_32 -----end_loop---->loop_bi_27_bi_32],"
",DATA_IMPORT_EXTRACTION
3819,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[c_30 -----c---->ai_31],"29	        #los datos estan separados por '\t'
30	        c = x.split('\t')
31	        ai.append(c[0])
32	        bi.append(c[1])
",DATA_IMPORT_EXTRACTION
3820,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[c_30 -----c---->bi_32],"30	        c = x.split('\t')
31	        ai.append(c[0])
32	        bi.append(c[1])
33	    #se añaden los vectores a a y b    
",DATA_TRANSFORM
3821,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[loop_ai_26_ai_31 -----restart_loop---->ai_26],"
",DATA_IMPORT_EXTRACTION
3822,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[loop_ai_26_ai_31 -----ai---->a_34],"32	        bi.append(c[1])
33	    #se añaden los vectores a a y b    
34	    a.append(ai)
35	    b.append(bi)    
",DATA_IMPORT_EXTRACTION
3823,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[loop_bi_27_bi_32 -----restart_loop---->bi_27],"
",DATA_IMPORT_EXTRACTION
3824,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[loop_bi_27_bi_32 -----bi---->b_35],"33	    #se añaden los vectores a a y b    
34	    a.append(ai)
35	    b.append(bi)    
36	    
",DATA_IMPORT_EXTRACTION
3825,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[loop_s_7_branch_s_15_s_17_s_19 -----restart_loop---->s_7],"
",DATA_IMPORT_EXTRACTION
3826,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[loop_i_8_i_24 -----restart_loop---->i_8],"
",DATA_IMPORT_EXTRACTION
3827,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[loop_a_9_a_34 -----restart_loop---->a_9],"
",DATA_IMPORT_EXTRACTION
3828,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[loop_b_10_b_35 -----restart_loop---->b_10],"
",DATA_IMPORT_EXTRACTION
3829,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[fig_42 -----fig---->anim_62],"60	
61	# call the animator.  blit=True means only re-draw the parts that have changed.
62	anim = animation.FuncAnimation(fig, animate, init_func=init,
63	                               frames= len(a), interval=10, blit=True)
",EDA
3830,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[matplotlib -----plt---->fig_42_intermediate_1],"plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----animation---->plt_66
plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----figure---->plt_66",EDA
3831,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[matplotlib -----plt---->ax_43_intermediate_1],"plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----animation---->plt_66
plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----axes---->plt_66",EDA
3832,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[matplotlib -----animation---->anim_62_intermediate_1],"plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----animation---->plt_66
plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----func animation---->plt_66",EDA
3833,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[matplotlib -----plt---->plt_66_intermediate_1],"plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----animation---->plt_66
plt_66_intermediate_1 -----plt---->plt_66
plt_66_intermediate_1 -----show---->plt_66",EDA
3834,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[ax_43 -----plot---->line_45],"43	ax = plt.axes(xlim=(10, 35), ylim=(22, 45))
44	
45	line, = ax.plot([], [],'o')
46	
",EDA
3835,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[i_24_intermediate_1 -----add---->i_24],"i_8 -----loop---->i_24_intermediate_1
plt_66_intermediate_1 -----add---->plt_66
plt_66_intermediate_1 -----end_loop---->plt_66",DATA_IMPORT_EXTRACTION
3836,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[a_34_intermediate_1 -----append---->a_34],"a_9 -----loop---->a_34_intermediate_1
plt_66_intermediate_1 -----append---->plt_66
plt_66_intermediate_1 -----end_loop---->plt_66",DATA_TRANSFORM
3837,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[b_35_intermediate_1 -----append---->b_35],"b_10 -----loop---->b_35_intermediate_1
plt_66_intermediate_1 -----append---->plt_66
plt_66_intermediate_1 -----end_loop---->plt_66",DATA_IMPORT_EXTRACTION
3838,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[ai_31_intermediate_1 -----append---->ai_31],"ai_26 -----loop---->ai_31_intermediate_1
plt_66_intermediate_1 -----append---->plt_66
plt_66_intermediate_1 -----end_loop---->plt_66",DATA_IMPORT_EXTRACTION
3839,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[bi_32_intermediate_1 -----append---->bi_32],"bi_27 -----loop---->bi_32_intermediate_1
plt_66_intermediate_1 -----append---->plt_66
plt_66_intermediate_1 -----end_loop---->plt_66",DATA_IMPORT_EXTRACTION
3840,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[fig_42_intermediate_1 -----figure---->fig_42],"matplotlib -----plt---->fig_42_intermediate_1
plt_66_intermediate_1 -----figure---->plt_66
plt_66_intermediate_1 -----fig---->plt_66",EDA
3841,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[ax_43_intermediate_1 -----axes---->ax_43],"matplotlib -----plt---->ax_43_intermediate_1
plt_66_intermediate_1 -----axes---->plt_66
plt_66_intermediate_1 -----plot---->plt_66",EDA
3842,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[anim_62_intermediate_1 -----func animation---->anim_62],"matplotlib -----animation---->anim_62_intermediate_1
plt_66_intermediate_1 -----func animation---->plt_66",EDA
3843,00020a5f6b03622127564f5d3eea478dbdb64454.execution_graph,[plt_66_intermediate_1 -----show---->plt_66],"matplotlib -----plt---->plt_66_intermediate_1
plt_66_intermediate_1 -----show---->plt_66",EDA
3844,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[nltk -----data---->nltk_6_intermediate_1],"df_169_intermediate_3 -----data---->df_169
df_169_intermediate_3 -----path---->df_169",ENVIRONMENT
3845,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[importlib -----reload---->reload_30],"28	#
29	
30	reload(common)
31	comment_sents = []
",ENVIRONMENT
3846,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[comment_sents_31 -----loop---->comment_sents_39_intermediate_1],"loop_comment_sents_31_comment_sents_39 -----restart_loop---->comment_sents_31
df_169_intermediate_3 -----loop---->df_169
df_169_intermediate_3 -----add---->df_169",DATA_IMPORT_EXTRACTION
3847,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[comment_sents_39 -----end_loop---->loop_comment_sents_31_comment_sents_39],"
",DATA_IMPORT_EXTRACTION
3848,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[common -----get comment sents---->comment_sents_39],"37	    lines = f.readlines()
38	    for srcFile in lines:
39	        comment_sents += common.get_comment_sents(srcFile.rstrip())
40	#         df = pd.concat([df,testdf])
",DATA_IMPORT_EXTRACTION
3849,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_comment_sents_31_comment_sents_39 -----restart_loop---->comment_sents_31],"
",DATA_IMPORT_EXTRACTION
3850,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_comment_sents_31_comment_sents_39 -----comment sents---->df_43],"41	
42	print(comment_sents[:10])
43	df = pd.DataFrame(comment_sents, columns = ['sentences'])
44	df
",DATA_IMPORT_EXTRACTION
3851,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_43 -----df---->df_44],"42	print(comment_sents[:10])
43	df = pd.DataFrame(comment_sents, columns = ['sentences'])
44	df
45	
",DATA_TRANSFORM
3852,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[pandas -----data frame---->df_43],"41	
42	print(comment_sents[:10])
43	df = pd.DataFrame(comment_sents, columns = ['sentences'])
44	df
",DATA_TRANSFORM
3853,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[pandas -----read csv---->df_49],"47	# Override df for repeated runs
48	#
49	df = pd.read_csv('../dataset/redis_dataset.csv.annotated', encoding = ""ISO-8859-1"", index_col=False)
50	
",DATA_IMPORT_EXTRACTION
3854,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[pandas -----set option---->pd_52],"50	
51	
52	pd.set_option('display.max_colwidth', -1)
53	df.head()
",ENVIRONMENT
3855,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_44 -----reassign---->df_49],"47	# Override df for repeated runs
48	#
49	df = pd.read_csv('../dataset/redis_dataset.csv.annotated', encoding = ""ISO-8859-1"", index_col=False)
50	
",DATA_IMPORT_EXTRACTION
3856,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_49 -----head---->df_53],"51	
52	pd.set_option('display.max_colwidth', -1)
53	df.head()
54	# df.shape
",EDA
3857,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_53 -----reassign---->df_59],"57	# Set polarity 
58	#
59	df['textblob_polarity'] = 0
60	df['grammaticality'] = 0
",DATA_TRANSFORM
3858,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_59 -----reassign---->df_60],"58	#
59	df['textblob_polarity'] = 0
60	df['grammaticality'] = 0
61	# df['semisuper_polarity'] = 0
",DATA_TRANSFORM
3859,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_60 -----loop---->df_80],"
",DATA_TRANSFORM
3860,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_60 -----df---->polarity_79],"77	
78	for i in range(len(df)):
79	    polarity = get_textblob_polarity(df.iloc[i]['sentences'])
80	    df.loc[i, 'textblob_polarity'] = polarity
",MODEL_TRAIN
3861,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_80 -----end_loop---->loop_df_60_df_80],"
",MODEL_TRAIN
3862,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[polarity_79 -----polarity---->df_80],"78	for i in range(len(df)):
79	    polarity = get_textblob_polarity(df.iloc[i]['sentences'])
80	    df.loc[i, 'textblob_polarity'] = polarity
81	
",DATA_TRANSFORM
3863,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[polarity_79 -----polarity---->loc_80],"78	for i in range(len(df)):
79	    polarity = get_textblob_polarity(df.iloc[i]['sentences'])
80	    df.loc[i, 'textblob_polarity'] = polarity
81	
",DATA_TRANSFORM
3864,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loc_80 -----loop---->loc_103],"
",DATA_TRANSFORM
3865,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_df_60_df_80 -----restart_loop---->df_60],"
",DATA_TRANSFORM
3866,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_df_60_df_80 -----loop---->df_103],"
",DATA_TRANSFORM
3867,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_103 -----df---->loc_103],"101	
102	for i in range(len(df)):
103	    df.loc[i, 'grammaticality'] = get_grammaticality(df.iloc[i]['sentences'])
104	
",DATA_TRANSFORM
3868,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_103 -----end_loop---->loop_loop_df_60_df_80_df_103],"
",NOT_INTERESTING
3869,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loc_103 -----end_loop---->loop_loc_80_loc_103],"
",DATA_TRANSFORM
3870,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loop_df_60_df_80_df_103 -----restart_loop---->loop_df_60_df_80],"
",DATA_TRANSFORM
3871,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loop_df_60_df_80_df_103 -----df---->newdf_118],"116	# Add semi supervised layer
117	#
118	newdf = df
119	train_sentences = newdf['sentences'][:200]
",DATA_TRANSFORM
3872,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loop_df_60_df_80_df_103 -----loop---->df_160_intermediate_1],"df_103 -----end_loop---->loop_loop_df_60_df_80_df_103
loop_loop_loop_df_60_df_80_df_103_df_160 -----restart_loop---->loop_loop_df_60_df_80_df_103
df_169_intermediate_3 -----restart_loop---->df_169
df_169_intermediate_3 -----df---->df_169
df_169_intermediate_3 -----loop---->df_169
df_169_intermediate_3 -----int---->df_169",DATA_TRANSFORM
3873,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loc_80_loc_103 -----restart_loop---->loc_80],"
",DATA_TRANSFORM
3874,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loc_80_loc_103 -----loop---->loc_143],"
",DATA_TRANSFORM
3875,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[newdf_118 -----select---->train_sentences_119],"117	#
118	newdf = df
119	train_sentences = newdf['sentences'][:200]
120	train_categories = newdf['semisuper_polarity'][:200]
",MODEL_TRAIN
3876,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[newdf_118 -----select---->train_categories_120],"118	newdf = df
119	train_sentences = newdf['sentences'][:200]
120	train_categories = newdf['semisuper_polarity'][:200]
121	test_sentences = newdf['sentences'][200:]
",MODEL_TRAIN
3877,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[newdf_118 -----select---->test_sentences_121],"119	train_sentences = newdf['sentences'][:200]
120	train_categories = newdf['semisuper_polarity'][:200]
121	test_sentences = newdf['sentences'][200:]
122	test_categories = newdf['semisuper_polarity'][200:]
",MODEL_EVALUATION
3878,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[newdf_118 -----select---->test_categories_122],"120	train_categories = newdf['semisuper_polarity'][:200]
121	test_sentences = newdf['sentences'][200:]
122	test_categories = newdf['semisuper_polarity'][200:]
123	
",MODEL_EVALUATION
3879,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[newdf_118 -----loop---->newdf_143],"
",DATA_TRANSFORM
3880,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[train_sentences_119 -----train sentences---->X_tf_126],"124	# tf = TfidfVectorizer()
125	tf = CountVectorizer()
126	X_tf = tf.fit_transform(train_sentences)
127	test_tf = tf.transform(test_sentences)
",DATA_TRANSFORM
3881,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[train_categories_120 -----train categories---->grid_135],"133	grid = GridSearchCV(BernoulliNB(),alphas)
134	
135	grid.fit(X_tf, train_categories)
136	# print('Best BernoulliNB score:', grid.best_score_, 'with alpha= ', grid.best_params_)
",HYPERPARAMETER_TUNING
3882,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[train_categories_120 -----train categories---->b_clf_139],"137	
138	b_clf = BernoulliNB(alpha=grid.best_params_['alpha'])
139	b_clf.fit(X_tf, train_categories)
140	test_categories = b_clf.predict(test_tf)
",MODEL_TRAIN
3883,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[test_sentences_121 -----test sentences---->test_tf_127],"125	tf = CountVectorizer()
126	X_tf = tf.fit_transform(train_sentences)
127	test_tf = tf.transform(test_sentences)
128	
",DATA_TRANSFORM
3884,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[test_categories_122 -----reassign---->test_categories_140],"138	b_clf = BernoulliNB(alpha=grid.best_params_['alpha'])
139	b_clf.fit(X_tf, train_categories)
140	test_categories = b_clf.predict(test_tf)
141	
",MODEL_EVALUATION
3885,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[tf_125 -----fit transform---->X_tf_126],"124	# tf = TfidfVectorizer()
125	tf = CountVectorizer()
126	X_tf = tf.fit_transform(train_sentences)
127	test_tf = tf.transform(test_sentences)
",DATA_TRANSFORM
3886,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[tf_125 -----transform---->test_tf_127],"125	tf = CountVectorizer()
126	X_tf = tf.fit_transform(train_sentences)
127	test_tf = tf.transform(test_sentences)
128	
",DATA_TRANSFORM
3887,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[X_tf_126 -----x tf---->grid_135],"133	grid = GridSearchCV(BernoulliNB(),alphas)
134	
135	grid.fit(X_tf, train_categories)
136	# print('Best BernoulliNB score:', grid.best_score_, 'with alpha= ', grid.best_params_)
",HYPERPARAMETER_TUNING
3888,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[X_tf_126 -----x tf---->b_clf_139],"137	
138	b_clf = BernoulliNB(alpha=grid.best_params_['alpha'])
139	b_clf.fit(X_tf, train_categories)
140	test_categories = b_clf.predict(test_tf)
",MODEL_TRAIN
3889,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[test_tf_127 -----test tf---->test_categories_140],"138	b_clf = BernoulliNB(alpha=grid.best_params_['alpha'])
139	b_clf.fit(X_tf, train_categories)
140	test_categories = b_clf.predict(test_tf)
141	
",MODEL_EVALUATION
3890,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[alphas_132 -----alphas---->grid_133],"131	#
132	alphas = {'alpha': [0.001, 0.01, 0.1, 0.5, 1.0, 2.0, 10.0]}
133	grid = GridSearchCV(BernoulliNB(),alphas)
134	
",HYPERPARAMETER_TUNING
3891,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[grid_133 -----fit---->grid_135],"133	grid = GridSearchCV(BernoulliNB(),alphas)
134	
135	grid.fit(X_tf, train_categories)
136	# print('Best BernoulliNB score:', grid.best_score_, 'with alpha= ', grid.best_params_)
",HYPERPARAMETER_TUNING
3892,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[sklearn.grid_search -----grid search cv---->grid_133],"131	#
132	alphas = {'alpha': [0.001, 0.01, 0.1, 0.5, 1.0, 2.0, 10.0]}
133	grid = GridSearchCV(BernoulliNB(),alphas)
134	
",HYPERPARAMETER_TUNING
3893,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[b_clf_138 -----fit---->b_clf_139],"137	
138	b_clf = BernoulliNB(alpha=grid.best_params_['alpha'])
139	b_clf.fit(X_tf, train_categories)
140	test_categories = b_clf.predict(test_tf)
",MODEL_TRAIN
3894,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[sklearn.naive_bayes -----bernoulli nb---->b_clf_138],"136	# print('Best BernoulliNB score:', grid.best_score_, 'with alpha= ', grid.best_params_)
137	
138	b_clf = BernoulliNB(alpha=grid.best_params_['alpha'])
139	b_clf.fit(X_tf, train_categories)
",MODEL_TRAIN
3895,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[b_clf_139 -----predict---->test_categories_140],"138	b_clf = BernoulliNB(alpha=grid.best_params_['alpha'])
139	b_clf.fit(X_tf, train_categories)
140	test_categories = b_clf.predict(test_tf)
141	
",MODEL_EVALUATION
3896,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[test_categories_140 -----test categories[i-200]---->newdf_143],"141	
142	for i in range(200, len(newdf)):
143	    newdf.loc[i, 'semisuper_polarity'] = test_categories[i-200]
144	
",MODEL_EVALUATION
3897,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[test_categories_140 -----test categories[i-200]---->loc_143],"141	
142	for i in range(200, len(newdf)):
143	    newdf.loc[i, 'semisuper_polarity'] = test_categories[i-200]
144	
",MODEL_EVALUATION
3898,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[newdf_143 -----end_loop---->loop_newdf_118_newdf_143],"
",MODEL_EVALUATION
3899,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loc_143 -----end_loop---->loop_loop_loc_80_loc_103_loc_143],"
",MODEL_EVALUATION
3900,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_newdf_118_newdf_143 -----restart_loop---->newdf_118],"
",DATA_TRANSFORM
3901,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_newdf_118_newdf_143 -----loop---->newdf_149_intermediate_1],"newdf_143 -----end_loop---->loop_newdf_118_newdf_143
loop_loop_newdf_118_newdf_143_newdf_149 -----restart_loop---->loop_newdf_118_newdf_143
df_169_intermediate_3 -----restart_loop---->df_169
df_169_intermediate_3 -----loop---->df_169
df_169_intermediate_3 -----int---->df_169",DATA_TRANSFORM
3902,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loop_loc_80_loc_103_loc_143 -----restart_loop---->loop_loc_80_loc_103],"
",DATA_TRANSFORM
3903,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loop_loc_80_loc_103_loc_143 -----loop---->loc_149_intermediate_1],"loc_143 -----end_loop---->loop_loop_loc_80_loc_103_loc_143
loop_loop_loop_loc_80_loc_103_loc_143_loc_149 -----restart_loop---->loop_loop_loc_80_loc_103_loc_143
df_169_intermediate_3 -----restart_loop---->df_169
df_169_intermediate_3 -----loop---->df_169
df_169_intermediate_3 -----int---->df_169",DATA_TRANSFORM
3904,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[newdf_149 -----end_loop---->loop_loop_newdf_118_newdf_143_newdf_149],"
",MODEL_TRAIN
3905,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loc_149 -----end_loop---->loop_loop_loop_loc_80_loc_103_loc_143_loc_149],"
",MODEL_EVALUATION
3906,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loop_newdf_118_newdf_143_newdf_149 -----restart_loop---->loop_newdf_118_newdf_143],"
",DATA_TRANSFORM
3907,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loop_loop_loc_80_loc_103_loc_143_loc_149 -----restart_loop---->loop_loop_loc_80_loc_103_loc_143],"
",MODEL_TRAIN
3908,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loop_loop_loc_80_loc_103_loc_143_loc_149 -----loop---->loc_160_intermediate_1],"loc_149 -----end_loop---->loop_loop_loop_loc_80_loc_103_loc_143_loc_149
loop_loop_loop_loop_loc_80_loc_103_loc_143_loc_149_loc_160 -----restart_loop---->loop_loop_loop_loc_80_loc_103_loc_143_loc_149
df_169_intermediate_3 -----restart_loop---->df_169
df_169_intermediate_3 -----loop---->df_169
df_169_intermediate_3 -----int---->df_169",DATA_TRANSFORM
3909,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_160 -----end_loop---->loop_loop_loop_df_60_df_80_df_103_df_160],"
",NOT_INTERESTING
3910,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loc_160 -----end_loop---->loop_loop_loop_loop_loc_80_loc_103_loc_143_loc_149_loc_160],"
",ENVIRONMENT
3911,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loop_loop_df_60_df_80_df_103_df_160 -----restart_loop---->loop_loop_df_60_df_80_df_103],"
",NOT_INTERESTING
3912,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loop_loop_df_60_df_80_df_103_df_160 -----head---->df_162],"160	    df.loc[i, 'readability'] = int((df.loc[i, 'semisuper_polarity'] + df.loc[i, 'textblob_polarity'] + df.loc[i, 'grammaticality'] > 1))
161	
162	df.head(25)
163	
",EDA
3913,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loop_loop_loop_loop_loc_80_loc_103_loc_143_loc_149_loc_160 -----restart_loop---->loop_loop_loop_loc_80_loc_103_loc_143_loc_149],"
",DATA_TRANSFORM
3914,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_162 -----to csv---->df_167],"165	# Save the dataset to a csv
166	#
167	df.to_csv('../dataset/redis_dataset.csv')
168	
",DATA_EXPORT
3915,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_167 -----filter---->df_169_intermediate_1],"df_162 -----to csv---->df_167
df_169_intermediate_3 -----filter---->df_169
df_169_intermediate_3 -----select---->df_169",DATA_TRANSFORM
3916,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[nltk_6_intermediate_1 -----path---->nltk_6_intermediate_2],"nltk -----data---->nltk_6_intermediate_1
df_169_intermediate_3 -----path---->df_169
df_169_intermediate_3 -----append---->df_169",DATA_IMPORT_EXTRACTION
3917,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[nltk_6_intermediate_2 -----append---->nltk_6],"nltk_6_intermediate_1 -----path---->nltk_6_intermediate_2
df_169_intermediate_3 -----append---->df_169",ENVIRONMENT
3918,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[comment_sents_39_intermediate_1 -----add---->comment_sents_39],"comment_sents_31 -----loop---->comment_sents_39_intermediate_1
df_169_intermediate_3 -----add---->df_169
df_169_intermediate_3 -----end_loop---->df_169",DATA_IMPORT_EXTRACTION
3919,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_160_intermediate_1 -----int---->df_160],"loop_loop_df_60_df_80_df_103 -----loop---->df_160_intermediate_1
df_169_intermediate_3 -----int---->df_169
df_169_intermediate_3 -----end_loop---->df_169",DATA_TRANSFORM
3920,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[newdf_149_intermediate_1 -----int---->newdf_149],"loop_newdf_118_newdf_143 -----loop---->newdf_149_intermediate_1
df_169_intermediate_3 -----int---->df_169
df_169_intermediate_3 -----end_loop---->df_169",DATA_TRANSFORM
3921,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loc_149_intermediate_1 -----int---->loc_149],"loop_loop_loc_80_loc_103_loc_143 -----loop---->loc_149_intermediate_1
df_169_intermediate_3 -----int---->df_169
df_169_intermediate_3 -----end_loop---->df_169",DATA_TRANSFORM
3922,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[loc_160_intermediate_1 -----int---->loc_160],"loop_loop_loop_loc_80_loc_103_loc_143_loc_149 -----loop---->loc_160_intermediate_1
df_169_intermediate_3 -----int---->df_169
df_169_intermediate_3 -----end_loop---->df_169",DATA_TRANSFORM
3923,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_169_intermediate_1 -----select---->df_169_intermediate_2],"df_167 -----filter---->df_169_intermediate_1
df_169_intermediate_3 -----select---->df_169
df_169_intermediate_3 -----equal---->df_169",DATA_TRANSFORM
3924,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_169_intermediate_2 -----equal---->df_169_intermediate_3],"df_169_intermediate_1 -----select---->df_169_intermediate_2
df_169_intermediate_3 -----equal---->df_169
df_169_intermediate_3 -----count---->df_169",DATA_TRANSFORM
3925,00020a83793458df672a8874e6635cec2c66446e.execution_graph,[df_169_intermediate_3 -----count---->df_169],"df_169_intermediate_2 -----equal---->df_169_intermediate_3
df_169_intermediate_3 -----count---->df_169",DATA_TRANSFORM
3926,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[cities_df_13 -----dropna---->cities_df_14],"12	
13	cities_df = pd.read_csv('../output_data/cities.csv')
14	cities_df.dropna()
15	cities_df
",DATA_TRANSFORM
3927,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[pandas -----read csv---->cities_df_13],"11	
12	
13	cities_df = pd.read_csv('../output_data/cities.csv')
14	cities_df.dropna()
",DATA_IMPORT_EXTRACTION
3928,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[cities_df_14 -----cities df---->cities_df_15],"13	cities_df = pd.read_csv('../output_data/cities.csv')
14	cities_df.dropna()
15	cities_df
16	
",NOT_INTERESTING
3929,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[cities_df_15 -----select---->locations_19],"17	# Configure gmaps
18	gmaps.configure(api_key=g_key)
19	locations = cities_df[[""Lat"", ""Lng""]]
20	humidity = cities_df['Humidity'].astype(float)
",DATA_TRANSFORM
3930,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[cities_df_15 -----select---->humidity_20_intermediate_1],"cities_df_14 -----cities df---->cities_df_15
response_70_intermediate_1 -----select---->response_70
response_70_intermediate_1 -----select---->response_70
response_70_intermediate_1 -----drop---->response_70
response_70_intermediate_1 -----astype---->response_70",DATA_TRANSFORM
3931,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[cities_df_15 -----drop---->criteria_df_39],"37	
38	# Conditions = Cloudiness < 50, Humidity < 50, Max Temp < 90, Wind Speed < 5
39	criteria_df = cities_df.drop(cities_df.index[(cities_df['Cloudiness'] > 50)])
40	criteria_df = criteria_df.drop(criteria_df.index[(criteria_df['Humidity'] > 50)])
",DATA_TRANSFORM
3932,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[gmaps -----configure---->gmaps_18],"16	
17	# Configure gmaps
18	gmaps.configure(api_key=g_key)
19	locations = cities_df[[""Lat"", ""Lng""]]
",ENVIRONMENT
3933,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[gmaps -----figure---->fig_23],"21	
22	# Plot Heatmap
23	fig = gmaps.figure()
24	
",ENVIRONMENT
3934,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[gmaps -----heatmap layer---->heat_layer_26],"24	
25	# Create heat layer
26	heat_layer = gmaps.heatmap_layer(locations, weights=humidity, 
27	                                 dissipating=False, max_intensity=10,
",EDA
3935,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[gmaps -----marker layer---->marker_layer_99],"97	
98	# Add marker layer ontop of heat map
99	marker_layer = gmaps.marker_layer(
100	        locations,
",EDA
3936,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[locations_19 -----locations---->heat_layer_26],"24	
25	# Create heat layer
26	heat_layer = gmaps.heatmap_layer(locations, weights=humidity, 
27	                                 dissipating=False, max_intensity=10,
",EDA
3937,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[locations_19 -----reassign---->locations_96],"94	# NOTE: be sure to update with your DataFrame name
95	hotel_info = [info_box_template.format(**row) for index, row in hotel_df.iterrows()]
96	locations = hotel_df[[""Lat"", ""Lng""]]
97	
",DATA_TRANSFORM
3938,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[fig_23 -----add layer---->fig_32],"30	
31	# Add layer
32	fig.add_layer(heat_layer)
33	
",EDA
3939,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[heat_layer_26 -----heat layer---->fig_32],"30	
31	# Add layer
32	fig.add_layer(heat_layer)
33	
",EDA
3940,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[fig_32 -----fig---->fig_35],"33	
34	# Display figure
35	fig
36	
",EDA
3941,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[fig_35 -----add layer---->fig_105],"103	        hover_text=hotel_df['City']
104	    )
105	fig.add_layer(marker_layer)
106	
",EDA
3942,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[criteria_df_39 -----drop---->criteria_df_40],"38	# Conditions = Cloudiness < 50, Humidity < 50, Max Temp < 90, Wind Speed < 5
39	criteria_df = cities_df.drop(cities_df.index[(cities_df['Cloudiness'] > 50)])
40	criteria_df = criteria_df.drop(criteria_df.index[(criteria_df['Humidity'] > 50)])
41	criteria_df = criteria_df.drop(criteria_df.index[(criteria_df['Max Temp'] > 90)])
",DATA_TRANSFORM
3943,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[criteria_df_40 -----drop---->criteria_df_41],"39	criteria_df = cities_df.drop(cities_df.index[(cities_df['Cloudiness'] > 50)])
40	criteria_df = criteria_df.drop(criteria_df.index[(criteria_df['Humidity'] > 50)])
41	criteria_df = criteria_df.drop(criteria_df.index[(criteria_df['Max Temp'] > 90)])
42	criteria_df = criteria_df.drop(criteria_df.index[(criteria_df['Wind Speed'] > 5)]).dropna().reset_index(drop=True)
",DATA_TRANSFORM
3944,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[criteria_df_41 -----drop---->criteria_df_42_intermediate_1],"criteria_df_40 -----drop---->criteria_df_41
response_70_intermediate_1 -----drop---->response_70
response_70_intermediate_1 -----dropna---->response_70",DATA_TRANSFORM
3945,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[criteria_df_42 -----rename---->criteria_df_43],"41	criteria_df = criteria_df.drop(criteria_df.index[(criteria_df['Max Temp'] > 90)])
42	criteria_df = criteria_df.drop(criteria_df.index[(criteria_df['Wind Speed'] > 5)]).dropna().reset_index(drop=True)
43	criteria_df = criteria_df.rename(columns={'Unnamed: 0':'Cities Index','Date':'Datetime'})
44	criteria_df
",DATA_TRANSFORM
3946,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[criteria_df_43 -----criteria df---->criteria_df_44],"42	criteria_df = criteria_df.drop(criteria_df.index[(criteria_df['Wind Speed'] > 5)]).dropna().reset_index(drop=True)
43	criteria_df = criteria_df.rename(columns={'Unnamed: 0':'Cities Index','Date':'Datetime'})
44	criteria_df
45	
",DATA_TRANSFORM
3947,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[criteria_df_44 -----drop---->hotel_df_48],"46	# Create hotel_df, only need city, country, lat/lng for google api, and hotel name
47	# Based on the criteria_df, so we already set the parameters we want for the city to vacation at
48	hotel_df = criteria_df.drop(['Cities Index','Cloudiness','Datetime','Humidity','Max Temp','Wind Speed'],axis=1)
49	hotel_df['Hotel Name'] = ''
",DATA_TRANSFORM
3948,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[hotel_df_48 -----reassign---->hotel_df_49],"47	# Based on the criteria_df, so we already set the parameters we want for the city to vacation at
48	hotel_df = criteria_df.drop(['Cities Index','Cloudiness','Datetime','Humidity','Max Temp','Wind Speed'],axis=1)
49	hotel_df['Hotel Name'] = ''
50	hotel_df
",DATA_TRANSFORM
3949,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[hotel_df_49 -----hotel df---->hotel_df_50],"48	hotel_df = criteria_df.drop(['Cities Index','Cloudiness','Datetime','Humidity','Max Temp','Wind Speed'],axis=1)
49	hotel_df['Hotel Name'] = ''
50	hotel_df
51	
",DATA_TRANSFORM
3950,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[hotel_df_50 -----loop---->hotel_df_76],"
",DATA_TRANSFORM
3951,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[base_url_53 -----base url---->response_70],"68	    
69	    # assemble url and make API request
70	    response = requests.get(base_url, params=params).json()
71	    # extract results
",DATA_IMPORT_EXTRACTION
3952,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[params_54 -----loop---->params_67],"
",NOT_INTERESTING
3953,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[api_keys -----g key---->params_54],"56	    ""type"": ""hotel"",
57	    ""radius"": 5000,
58	    ""key"": g_key
59	}
",ENVIRONMENT
3954,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[params_67 -----end_loop---->loop_params_54_params_67],"
",DATA_TRANSFORM
3955,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[hotel_df_76 -----end_loop---->loop_hotel_df_50_hotel_df_76],"
",NOT_INTERESTING
3956,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[lat_63 -----lat---->latlng_66],"64	    lng = row['Lng']
65	    city = row['City']
66	    latlng = f""{lat},{lng}""
67	    params['location'] = latlng
",DATA_TRANSFORM
3957,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[lng_64 -----lng---->latlng_66],"64	    lng = row['Lng']
65	    city = row['City']
66	    latlng = f""{lat},{lng}""
67	    params['location'] = latlng
",DATA_TRANSFORM
3958,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[latlng_66 -----latlng---->params_67],"65	    city = row['City']
66	    latlng = f""{lat},{lng}""
67	    params['location'] = latlng
68	    
",DATA_IMPORT_EXTRACTION
3959,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[response_70 -----select---->results_72],"70	    response = requests.get(base_url, params=params).json()
71	    # extract results
72	    results = response['results']
73	    # Run through the cities
",DATA_IMPORT_EXTRACTION
3960,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[requests -----get---->response_70_intermediate_1],"response_70_intermediate_1 -----get---->response_70
response_70_intermediate_1 -----json---->response_70",DATA_IMPORT_EXTRACTION
3961,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[results_72 -----select---->hotel_df_76],"74	    try:
75	        print(f'Finding you a hotel in {city}.')
76	        hotel_df.loc[index,'Hotel Name'] = results[0]['name']
77	    except (KeyError, IndexError):
",DATA_TRANSFORM
3962,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[results_72 -----select---->loc_76],"74	    try:
75	        print(f'Finding you a hotel in {city}.')
76	        hotel_df.loc[index,'Hotel Name'] = results[0]['name']
77	    except (KeyError, IndexError):
",DATA_TRANSFORM
3963,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[loop_params_54_params_67 -----restart_loop---->params_54],"
",NOT_INTERESTING
3964,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[loop_hotel_df_50_hotel_df_76 -----restart_loop---->hotel_df_50],"
",DATA_TRANSFORM
3965,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[loop_hotel_df_50_hotel_df_76 -----hotel df---->hotel_df_81],"79	    print('------------')
80	
81	hotel_df
82	
",DATA_TRANSFORM
3966,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[hotel_df_81 -----iterrows---->hotel_info_95],"93	# Store the DataFrame Row
94	# NOTE: be sure to update with your DataFrame name
95	hotel_info = [info_box_template.format(**row) for index, row in hotel_df.iterrows()]
96	locations = hotel_df[[""Lat"", ""Lng""]]
",DATA_TRANSFORM
3967,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[hotel_df_81 -----select---->locations_96],"94	# NOTE: be sure to update with your DataFrame name
95	hotel_info = [info_box_template.format(**row) for index, row in hotel_df.iterrows()]
96	locations = hotel_df[[""Lat"", ""Lng""]]
97	
",DATA_TRANSFORM
3968,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[info_box_template_86 -----format---->hotel_info_95],"93	# Store the DataFrame Row
94	# NOTE: be sure to update with your DataFrame name
95	hotel_info = [info_box_template.format(**row) for index, row in hotel_df.iterrows()]
96	locations = hotel_df[[""Lat"", ""Lng""]]
",DATA_TRANSFORM
3969,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[locations_96 -----locations---->marker_layer_99],"97	
98	# Add marker layer ontop of heat map
99	marker_layer = gmaps.marker_layer(
100	        locations,
",EDA
3970,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[marker_layer_99 -----marker layer---->fig_105],"103	        hover_text=hotel_df['City']
104	    )
105	fig.add_layer(marker_layer)
106	
",EDA
3971,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[fig_105 -----fig---->fig_108],"106	
107	# Display Map
108	fig
109	
",EDA
3972,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[humidity_20_intermediate_1 -----astype---->humidity_20],"cities_df_15 -----select---->humidity_20_intermediate_1
response_70_intermediate_1 -----astype---->response_70",DATA_TRANSFORM
3973,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[criteria_df_42_intermediate_1 -----dropna---->criteria_df_42_intermediate_2],"criteria_df_41 -----drop---->criteria_df_42_intermediate_1
response_70_intermediate_1 -----dropna---->response_70
response_70_intermediate_1 -----reset index---->response_70",DATA_TRANSFORM
3974,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[criteria_df_42_intermediate_2 -----reset index---->criteria_df_42],"criteria_df_42_intermediate_1 -----dropna---->criteria_df_42_intermediate_2
response_70_intermediate_1 -----reset index---->response_70
response_70_intermediate_1 -----rename---->response_70",DATA_TRANSFORM
3975,00020c5e4efa410dab96835adc1ccbd9dad7a80f.execution_graph,[response_70_intermediate_1 -----json---->response_70],"requests -----get---->response_70_intermediate_1
response_70_intermediate_1 -----json---->response_70
response_70_intermediate_1 -----select---->response_70",DATA_IMPORT_EXTRACTION
3976,00020cd0ba9fa362f744cfe76a881fc9c53deba3.execution_graph,[df_8 -----reassign---->df_10],"8	df = pd.DataFrame(np.c_[X,y])
9	colnames = ['x1','x2','x3']
10	df.columns = colnames
11	df['x3'] -= df['x3'].mean()
",DATA_TRANSFORM
3977,00020cd0ba9fa362f744cfe76a881fc9c53deba3.execution_graph,[colnames_9 -----colnames---->df_10],"8	df = pd.DataFrame(np.c_[X,y])
9	colnames = ['x1','x2','x3']
10	df.columns = colnames
11	df['x3'] -= df['x3'].mean()
",DATA_TRANSFORM
3978,00020cd0ba9fa362f744cfe76a881fc9c53deba3.execution_graph,[colnames_9 -----colnames---->columns_10],"8	df = pd.DataFrame(np.c_[X,y])
9	colnames = ['x1','x2','x3']
10	df.columns = colnames
11	df['x3'] -= df['x3'].mean()
",DATA_TRANSFORM
3979,00020cd0ba9fa362f744cfe76a881fc9c53deba3.execution_graph,[df_10 -----sub---->df_11_intermediate_1],"df_8 -----reassign---->df_10
colnames_9 -----colnames---->df_10
df_11_intermediate_2 -----sub---->df_11
df_11_intermediate_2 -----select---->df_11",DATA_TRANSFORM
3980,00020cd0ba9fa362f744cfe76a881fc9c53deba3.execution_graph,[df_11 -----head---->df_12],"10	df.columns = colnames
11	df['x3'] -= df['x3'].mean()
12	df.head()
13	
",EDA
3981,00020cd0ba9fa362f744cfe76a881fc9c53deba3.execution_graph,[df_11_intermediate_1 -----select---->df_11_intermediate_2],"df_10 -----sub---->df_11_intermediate_1
df_11_intermediate_2 -----select---->df_11
df_11_intermediate_2 -----mean---->df_11",DATA_TRANSFORM
3982,00020cd0ba9fa362f744cfe76a881fc9c53deba3.execution_graph,[df_11_intermediate_2 -----mean---->df_11],"df_11_intermediate_1 -----select---->df_11_intermediate_2
df_11_intermediate_2 -----mean---->df_11
df_11_intermediate_2 -----head---->df_11",DATA_TRANSFORM
3983,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[transit_edges_1 -----where---->transit_modal_stn_srch_bounds_24],"22	display(nyc_roads)
23	
24	transit_modal_stn_srch_bounds = transit_edges.where(""modal_station = true"")
25	transit_modal_stn_srch_bounds = transit_modal_stn_srch_bounds.withColumn(""bounds"", get_bounds_udf(transit_modal_stn_srch_bounds.dst_lon, transit_modal_stn_srch_bounds.dst_lat, lit(900), lit('walk')))
",DATA_TRANSFORM
3984,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[nyc_roads_2 -----alias---->new_edges_53_intermediate_1],"nodes_293_intermediate_1 -----alias---->nodes_293
nodes_293_intermediate_1 -----select---->nodes_293
nodes_293_intermediate_1 -----join---->nodes_293",DATA_TRANSFORM
3985,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[nyc_roads_2 -----select---->walk_transit_edges_89_intermediate_1],"nodes_293_intermediate_1 -----alias---->nodes_293
nodes_293_intermediate_1 -----select---->nodes_293
nodes_293_intermediate_1 -----union---->nodes_293",DATA_TRANSFORM
3986,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[transit_modal_stn_srch_bounds_24 -----with column---->transit_modal_stn_srch_bounds_25],"23	
24	transit_modal_stn_srch_bounds = transit_edges.where(""modal_station = true"")
25	transit_modal_stn_srch_bounds = transit_modal_stn_srch_bounds.withColumn(""bounds"", get_bounds_udf(transit_modal_stn_srch_bounds.dst_lon, transit_modal_stn_srch_bounds.dst_lat, lit(900), lit('walk')))
26	transit_modal_stn_srch_bounds = (transit_modal_stn_srch_bounds
",DATA_TRANSFORM
3987,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[transit_modal_stn_srch_bounds_25 -----with column---->transit_modal_stn_srch_bounds_26],"24	transit_modal_stn_srch_bounds = transit_edges.where(""modal_station = true"")
25	transit_modal_stn_srch_bounds = transit_modal_stn_srch_bounds.withColumn(""bounds"", get_bounds_udf(transit_modal_stn_srch_bounds.dst_lon, transit_modal_stn_srch_bounds.dst_lat, lit(900), lit('walk')))
26	transit_modal_stn_srch_bounds = (transit_modal_stn_srch_bounds
27	                                 .withColumn(""min_lon"", transit_modal_stn_srch_bounds.bounds[0])
",DATA_TRANSFORM
3988,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[new_edges_53 -----with column---->new_edges_71],"69	            )
70	
71	new_edges = new_edges.withColumn(""time_cost"", new_edges.dist * 18/25)
72	display(new_edges)
",DATA_TRANSFORM
3989,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[new_edges_71 -----groupby---->new_edges_min_time_74_intermediate_1],"new_edges_53 -----with column---->new_edges_71
nodes_293_intermediate_1 -----groupby---->nodes_293
nodes_293_intermediate_1 -----alias---->nodes_293
nodes_293_intermediate_1 -----agg---->nodes_293",DATA_TRANSFORM
3990,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[new_edges_71 -----alias---->new_edges_79_intermediate_1],"new_edges_53 -----with column---->new_edges_71
nodes_293_intermediate_1 -----groupby---->nodes_293
nodes_293_intermediate_1 -----alias---->nodes_293
nodes_293_intermediate_1 -----join---->nodes_293",DATA_TRANSFORM
3991,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[new_edges_79 -----union all---->new_edges_85],"83	            )
84	
85	new_edges = new_edges.unionAll(new_edges.select([col(""dst"").alias(""src""), col(""src"").alias(""dst""), col(""a.src_lon"").alias(""dst_lon""), col(""a.src_lat"").alias(""dst_lat""), col(""a.dst_lon"").alias(""src_lon""), col(""a.dst_lat"").alias(""dst_lat""), col(""time_cost"")]))
86	
",DATA_TRANSFORM
3992,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[new_edges_85 -----new edges---->walk_transit_edges_89],"87	display(new_edges)
88	
89	walk_transit_edges = (nyc_roads.select([col(""src""), col(""dst""), col(""src_lon""), col(""src_lat""), col(""dst_lon""), col(""dst_lat""), col(""walk_time"").alias(""time_cost"")])
90	                      .union(transit_edges.select([col(""src""), col(""dst""),  col(""src_lon""), col(""src_lat""), col(""dst_lon""), col(""dst_lat""), col(""time_cost"")]))
",DATA_TRANSFORM
3993,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[walk_transit_edges_89 -----count---->walk_transit_edges_263],"261	bounds
262	
263	walk_transit_edges.count()
264	
",DATA_TRANSFORM
3994,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[bounds_260 -----bounds---->bounds_261],"259	
260	bounds = get_bounds(-122.4119388,37.741981, 1800, ""transit"")
261	bounds
262	
",DATA_TRANSFORM
3995,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,"[nodes_with_ids_286 -----nodes with ids[:,[1,2]]---->nodes_293_intermediate_1]","numpy -----array---->nodes_with_ids_286
nodes_293_intermediate_1 -----nodes with ids[:,[1,2]]---->nodes_293
nodes_293_intermediate_1 -----nodes with ids[:,[0]]---->nodes_293
nodes_293_intermediate_1 -----astype---->nodes_293",DATA_TRANSFORM
3996,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,"[nodes_with_ids_286 -----nodes with ids[:,[0]]---->ids_294]","292	
293	nodes = nodes_with_ids[:,[1,2]].astype(np.float)
294	ids = nodes_with_ids[:,[0]]
295	
",DATA_TRANSFORM
3997,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[numpy -----array---->nodes_with_ids_286],"284	""""""
285	
286	nodes_with_ids = (np.array(transit_edges.where(""modal_station = true"")
287	                           .select([""src"", ""src_lon"", ""src_lat""])
",DATA_TRANSFORM
3998,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[nodes_293 -----nodes---->ind_297],"295	
296	node = [-74.011377, 40.706868] # New York Stock Exchange
297	ind = closest_node(node, nodes)
298	ids[ind][0]
",DATA_TRANSFORM
3999,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[ids_294 -----ids[ind]---->ids_298],"296	node = [-74.011377, 40.706868] # New York Stock Exchange
297	ind = closest_node(node, nodes)
298	ids[ind][0]
299	
",DATA_TRANSFORM
4000,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[node_296 -----node---->ind_297],"295	
296	node = [-74.011377, 40.706868] # New York Stock Exchange
297	ind = closest_node(node, nodes)
298	ids[ind][0]
",DATA_TRANSFORM
4001,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[node_296 -----node---->e_300],"298	ids[ind][0]
299	
300	e = extract_edges(node[0], node[1], 1800)
301	location_time_matrix  = CalculateLocationTimeMatrix(e, ids[ind][0], 1800)
",DATA_IMPORT_EXTRACTION
4002,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[ind_297 -----ids[ind]---->ids_298],"296	node = [-74.011377, 40.706868] # New York Stock Exchange
297	ind = closest_node(node, nodes)
298	ids[ind][0]
299	
",DATA_TRANSFORM
4003,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[ids_298 -----ids---->location_time_matrix_301],"299	
300	e = extract_edges(node[0], node[1], 1800)
301	location_time_matrix  = CalculateLocationTimeMatrix(e, ids[ind][0], 1800)
302	
",DATA_TRANSFORM
4004,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[e_300 -----e---->location_time_matrix_301],"299	
300	e = extract_edges(node[0], node[1], 1800)
301	location_time_matrix  = CalculateLocationTimeMatrix(e, ids[ind][0], 1800)
302	
",DATA_TRANSFORM
4005,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[location_time_matrix_301 -----location time matrix---->poly_303],"301	location_time_matrix  = CalculateLocationTimeMatrix(e, ids[ind][0], 1800)
302	
303	poly = return_isochrone(location_time_matrix, 30)
304	polygon_coords = [list(geom.exterior.coords) for geom in poly.geoms]
",DATA_TRANSFORM
4006,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[location_time_matrix_301 -----to csv---->location_time_matrix_309],"307	display(f.figure)
308	
309	location_time_matrix.to_csv(""/dbfs/FileStore/loc_time_matrix_agg.csv"")
310	
",DATA_EXPORT
4007,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[poly_303 -----geoms---->polygon_coords_304],"302	
303	poly = return_isochrone(location_time_matrix, 30)
304	polygon_coords = [list(geom.exterior.coords) for geom in poly.geoms]
305	spd = gpd.GeoDataFrame({""geometry"" : gpd.GeoSeries(poly)})
",DATA_TRANSFORM
4008,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[spd_305 -----plot---->f_306],"304	polygon_coords = [list(geom.exterior.coords) for geom in poly.geoms]
305	spd = gpd.GeoDataFrame({""geometry"" : gpd.GeoSeries(poly)})
306	f = spd.plot()
307	display(f.figure)
",EDA
4009,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[geopandas -----geo data frame---->spd_305],"303	poly = return_isochrone(location_time_matrix, 30)
304	polygon_coords = [list(geom.exterior.coords) for geom in poly.geoms]
305	spd = gpd.GeoDataFrame({""geometry"" : gpd.GeoSeries(poly)})
306	f = spd.plot()
",DATA_TRANSFORM
4010,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[new_edges_53_intermediate_1 -----join---->new_edges_53_intermediate_2],"nyc_roads_2 -----alias---->new_edges_53_intermediate_1
nodes_293_intermediate_1 -----join---->nodes_293
nodes_293_intermediate_1 -----select---->nodes_293",DATA_TRANSFORM
4011,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[new_edges_53_intermediate_2 -----select---->new_edges_53],"new_edges_53_intermediate_1 -----join---->new_edges_53_intermediate_2
nodes_293_intermediate_1 -----select---->nodes_293
nodes_293_intermediate_1 -----with column---->nodes_293",DATA_TRANSFORM
4012,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[walk_transit_edges_89_intermediate_1 -----union---->walk_transit_edges_89],"nyc_roads_2 -----select---->walk_transit_edges_89_intermediate_1
nodes_293_intermediate_1 -----union---->nodes_293
nodes_293_intermediate_1 -----count---->nodes_293",DATA_TRANSFORM
4013,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[new_edges_min_time_74_intermediate_1 -----agg---->new_edges_min_time_74],"new_edges_71 -----groupby---->new_edges_min_time_74_intermediate_1
nodes_293_intermediate_1 -----agg---->nodes_293",DATA_TRANSFORM
4014,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[new_edges_79_intermediate_1 -----join---->new_edges_79_intermediate_2],"new_edges_71 -----alias---->new_edges_79_intermediate_1
nodes_293_intermediate_1 -----join---->nodes_293
nodes_293_intermediate_1 -----select---->nodes_293",DATA_TRANSFORM
4015,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[new_edges_79_intermediate_2 -----select---->new_edges_79_intermediate_3],"new_edges_79_intermediate_1 -----join---->new_edges_79_intermediate_2
nodes_293_intermediate_1 -----select---->nodes_293
nodes_293_intermediate_1 -----distinct---->nodes_293",DATA_TRANSFORM
4016,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[new_edges_79_intermediate_3 -----distinct---->new_edges_79],"new_edges_79_intermediate_2 -----select---->new_edges_79_intermediate_3
nodes_293_intermediate_1 -----distinct---->nodes_293
nodes_293_intermediate_1 -----union all---->nodes_293",DATA_TRANSFORM
4017,00021131b9c410d0ff089dfa38d1569e09c2a8ba.execution_graph,[nodes_293_intermediate_1 -----astype---->nodes_293],"nodes_with_ids_286 -----nodes with ids[:,[1,2]]---->nodes_293_intermediate_1
nodes_293_intermediate_1 -----astype---->nodes_293
nodes_293_intermediate_1 -----nodes---->nodes_293",DATA_TRANSFORM
4018,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[numpy -----zeros---->np_3],"1	import numpy as np
2	
3	np.zeros(10)
4	
",DATA_TRANSFORM
4019,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[numpy -----ones---->np_5],"3	np.zeros(10)
4	
5	np.ones(10)
6	
",DATA_TRANSFORM
4020,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[numpy -----arange---->np_9],"7	np.ones(10) * 5
8	
9	np.arange(10,51)
10	
",DATA_TRANSFORM
4021,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[numpy -----arange---->np_11],"9	np.arange(10,51)
10	
11	np.arange(10,51,2)
12	
",DATA_TRANSFORM
4022,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[numpy -----arange---->np_13_intermediate_1],"mat_25_intermediate_1 -----zeros---->mat_25
mat_25_intermediate_1 -----ones---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----eye---->mat_25
mat_25_intermediate_1 -----random---->mat_25
mat_25_intermediate_1 -----random---->mat_25
mat_25_intermediate_1 -----linspace---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----reshape---->mat_25",DATA_TRANSFORM
4023,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[numpy -----eye---->np_15],"13	np.arange(9).reshape(3,3)
14	
15	np.eye(3)
16	
",DATA_TRANSFORM
4024,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[numpy -----random---->np_17_intermediate_1],"mat_25_intermediate_1 -----zeros---->mat_25
mat_25_intermediate_1 -----ones---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----eye---->mat_25
mat_25_intermediate_1 -----random---->mat_25
mat_25_intermediate_1 -----random---->mat_25
mat_25_intermediate_1 -----linspace---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----rand---->mat_25",DATA_TRANSFORM
4025,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[numpy -----random---->np_19_intermediate_1],"mat_25_intermediate_1 -----zeros---->mat_25
mat_25_intermediate_1 -----ones---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----eye---->mat_25
mat_25_intermediate_1 -----random---->mat_25
mat_25_intermediate_1 -----random---->mat_25
mat_25_intermediate_1 -----linspace---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----randn---->mat_25",DATA_TRANSFORM
4026,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[numpy -----linspace---->np_23],"21	np.arange(1,101).reshape(10,10) / 100
22	
23	np.linspace(0,1,20)
24	
",DATA_TRANSFORM
4027,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[numpy -----arange---->mat_25_intermediate_1],"mat_25_intermediate_1 -----zeros---->mat_25
mat_25_intermediate_1 -----ones---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----eye---->mat_25
mat_25_intermediate_1 -----random---->mat_25
mat_25_intermediate_1 -----random---->mat_25
mat_25_intermediate_1 -----linspace---->mat_25
mat_25_intermediate_1 -----arange---->mat_25
mat_25_intermediate_1 -----reshape---->mat_25",DATA_TRANSFORM
4028,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[mat_25 -----mat---->mat_26],"24	
25	mat = np.arange(1,26).reshape(5,5)
26	mat
27	
",DATA_TRANSFORM
4029,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,"[mat_26 -----mat[2:,1:]---->mat_32]","30	# BE ABLE TO SEE THE OUTPUT ANY MORE
31	
32	mat[2:,1:]
33	
",DATA_TRANSFORM
4030,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,"[mat_32 -----mat[3,4]---->mat_38]","36	# BE ABLE TO SEE THE OUTPUT ANY MORE
37	
38	mat[3,4]
39	
",DATA_TRANSFORM
4031,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,"[mat_38 -----mat[:3,1:2]---->mat_44]","42	# BE ABLE TO SEE THE OUTPUT ANY MORE
43	
44	mat[:3,1:2]
45	
",DATA_TRANSFORM
4032,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,"[mat_44 -----mat[4,:]---->mat_50]","48	# BE ABLE TO SEE THE OUTPUT ANY MORE
49	
50	mat[4,:]
51	
",DATA_TRANSFORM
4033,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,"[mat_50 -----mat[3:5,:]---->mat_56]","54	# BE ABLE TO SEE THE OUTPUT ANY MORE
55	
56	mat[3:5,:]
57	
",DATA_TRANSFORM
4034,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[mat_56 -----sum---->mat_58],"56	mat[3:5,:]
57	
58	mat.sum()
59	
",DATA_TRANSFORM
4035,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[mat_58 -----std---->mat_60],"58	mat.sum()
59	
60	mat.std()
61	
",DATA_TRANSFORM
4036,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[mat_60 -----sum---->mat_62],"60	mat.std()
61	
62	mat.sum(axis=0)
",EDA
4037,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[np_13_intermediate_1 -----reshape---->np_13],"numpy -----arange---->np_13_intermediate_1
mat_25_intermediate_1 -----reshape---->mat_25",DATA_TRANSFORM
4038,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[np_17_intermediate_1 -----rand---->np_17],"numpy -----random---->np_17_intermediate_1
mat_25_intermediate_1 -----rand---->mat_25",MODEL_TRAIN
4039,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[np_19_intermediate_1 -----randn---->np_19],"numpy -----random---->np_19_intermediate_1
mat_25_intermediate_1 -----randn---->mat_25",DATA_TRANSFORM
4040,0002122156a648ab459f485a5cdcd14fcdd6723f.execution_graph,[mat_25_intermediate_1 -----reshape---->mat_25],"numpy -----arange---->mat_25_intermediate_1
mat_25_intermediate_1 -----reshape---->mat_25
mat_25_intermediate_1 -----mat---->mat_25",DATA_TRANSFORM
4041,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[DATADIR_61 -----datadir---->path_64],"62	CATEGORIES_= [""0"",""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9"",""a"",""b"",""c"",""d"",""e"",""f"",""g"",""h"",""i"",""j"",""k"",""l"",""m"",""n"",""o"",""p"",""q"",""r"",""s"",""t"",""u"",""v"",""w"",""x"",""y"",""z""]
63	for category in CATEGORIES_:
64	    path = os.path.join(DATADIR, category)
65	    for img in os.listdir(path):
",DATA_IMPORT_EXTRACTION
4042,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[os -----path---->path_64_intermediate_1],"X_108_intermediate_1 -----path---->X_108
X_108_intermediate_1 -----join---->X_108",DATA_IMPORT_EXTRACTION
4043,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[img_array_66 -----img array---->new_array_75],"73	IMG_SIZE = 50
74	
75	new_array = cv2.resize(img_array, (IMG_SIZE, IMG_SIZE))
76	#plt.imshow(new_array, cmap= 'gray')
",DATA_TRANSFORM
4044,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[cv2 -----imread---->img_array_66],"64	    path = os.path.join(DATADIR, category)
65	    for img in os.listdir(path):
66	        img_array = cv2.imread(os.path.join(path,img), cv2.IMREAD_GRAYSCALE)
67	        #plt.imshow(img_array, cmap=""gray"")
",DATA_IMPORT_EXTRACTION
4045,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[cv2 -----resize---->new_array_75],"73	IMG_SIZE = 50
74	
75	new_array = cv2.resize(img_array, (IMG_SIZE, IMG_SIZE))
76	#plt.imshow(new_array, cmap= 'gray')
",DATA_TRANSFORM
4046,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[IMG_SIZE_73 -----img size---->X_108],"106	    y.append(label)
107	    
108	X = np.array(X).reshape(-1, IMG_SIZE, IMG_SIZE, 1)
109	
",DATA_TRANSFORM
4047,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[train_data_79 -----train data---->random_99],"97	import random
98	
99	random.shuffle(train_data)
100	
",DATA_TRANSFORM
4048,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[random -----shuffle---->random_99],"97	import random
98	
99	random.shuffle(train_data)
100	
",DATA_TRANSFORM
4049,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[X_101 -----loop---->X_105_intermediate_1],"loop_X_101_X_105 -----restart_loop---->X_101
X_108_intermediate_1 -----loop---->X_108
X_108_intermediate_1 -----append---->X_108",MODEL_EVALUATION
4050,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[y_102 -----loop---->y_106_intermediate_1],"loop_y_102_y_106 -----restart_loop---->y_102
X_108_intermediate_1 -----loop---->X_108
X_108_intermediate_1 -----append---->X_108",MODEL_TRAIN
4051,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[X_105 -----end_loop---->loop_X_101_X_105],"
",NOT_INTERESTING
4052,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[y_106 -----end_loop---->loop_y_102_y_106],"
",DATA_TRANSFORM
4053,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[loop_X_101_X_105 -----restart_loop---->X_101],"
",MODEL_TRAIN
4054,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[loop_X_101_X_105 -----x---->X_108],"106	    y.append(label)
107	    
108	X = np.array(X).reshape(-1, IMG_SIZE, IMG_SIZE, 1)
109	
",DATA_TRANSFORM
4055,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[loop_y_102_y_106 -----restart_loop---->y_102],"
",MODEL_TRAIN
4056,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[loop_y_102_y_106 -----y---->pickle_116],"114	pickle_out.close()
115	pickle_out = open(""y.pickle"", ""wb"")
116	pickle.dump(y, pickle_out)
117	pickle_out.close()
",DATA_EXPORT
4057,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[loop_y_102_y_106 -----reassign---->y_128],"126	
127	X = pickle.load(open(""X.pickle"",""rb""))
128	y = pickle.load(open(""y.pickle"",""rb""))
129	
",MODEL_TRAIN
4058,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[X_108 -----x---->pickle_113],"111	
112	pickle_out = open(""X.pickle"", ""wb"")
113	pickle.dump(X, pickle_out)
114	pickle_out.close()
",DATA_EXPORT
4059,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[X_108 -----reassign---->X_120],"118	
119	pickle_in= open(""X.pickle"", ""rb"")
120	X = pickle.load(pickle_in)
121	X.shape[1:]
",MODEL_TRAIN
4060,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[numpy -----array---->X_108_intermediate_1],"X_108_intermediate_1 -----array---->X_108
X_108_intermediate_1 -----reshape---->X_108",DATA_TRANSFORM
4061,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[pickle_out_112 -----pickle out---->pickle_113],"111	
112	pickle_out = open(""X.pickle"", ""wb"")
113	pickle.dump(X, pickle_out)
114	pickle_out.close()
",DATA_EXPORT
4062,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[pickle_out_112 -----close---->pickle_out_114],"112	pickle_out = open(""X.pickle"", ""wb"")
113	pickle.dump(X, pickle_out)
114	pickle_out.close()
115	pickle_out = open(""y.pickle"", ""wb"")
",DATA_EXPORT
4063,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[pickle -----dump---->pickle_113],"111	
112	pickle_out = open(""X.pickle"", ""wb"")
113	pickle.dump(X, pickle_out)
114	pickle_out.close()
",DATA_EXPORT
4064,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[pickle -----dump---->pickle_116],"114	pickle_out.close()
115	pickle_out = open(""y.pickle"", ""wb"")
116	pickle.dump(y, pickle_out)
117	pickle_out.close()
",DATA_EXPORT
4065,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[pickle -----load---->X_120],"118	
119	pickle_in= open(""X.pickle"", ""rb"")
120	X = pickle.load(pickle_in)
121	X.shape[1:]
",DATA_IMPORT_EXTRACTION
4066,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[pickle -----load---->X_127],"125	from keras.layers import Dense, Dropout,Activation, Flatten, Conv2D, MaxPooling2D
126	
127	X = pickle.load(open(""X.pickle"",""rb""))
128	y = pickle.load(open(""y.pickle"",""rb""))
",DATA_IMPORT_EXTRACTION
4067,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[pickle -----load---->y_128],"126	
127	X = pickle.load(open(""X.pickle"",""rb""))
128	y = pickle.load(open(""y.pickle"",""rb""))
129	
",DATA_IMPORT_EXTRACTION
4068,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[pickle_out_114 -----open---->pickle_out_115],"113	pickle.dump(X, pickle_out)
114	pickle_out.close()
115	pickle_out = open(""y.pickle"", ""wb"")
116	pickle.dump(y, pickle_out)
",DATA_EXPORT
4069,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[pickle_out_115 -----pickle out---->pickle_116],"114	pickle_out.close()
115	pickle_out = open(""y.pickle"", ""wb"")
116	pickle.dump(y, pickle_out)
117	pickle_out.close()
",DATA_EXPORT
4070,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[pickle_out_115 -----close---->pickle_out_117],"115	pickle_out = open(""y.pickle"", ""wb"")
116	pickle.dump(y, pickle_out)
117	pickle_out.close()
118	
",DATA_EXPORT
4071,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[pickle_in_119 -----pickle in---->X_120],"118	
119	pickle_in= open(""X.pickle"", ""rb"")
120	X = pickle.load(pickle_in)
121	X.shape[1:]
",DATA_IMPORT_EXTRACTION
4072,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[X_120 -----shape---->X_121],"119	pickle_in= open(""X.pickle"", ""rb"")
120	X = pickle.load(pickle_in)
121	X.shape[1:]
122	
",DATA_TRANSFORM
4073,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[X_121 -----reassign---->X_127],"125	from keras.layers import Dense, Dropout,Activation, Flatten, Conv2D, MaxPooling2D
126	
127	X = pickle.load(open(""X.pickle"",""rb""))
128	y = pickle.load(open(""y.pickle"",""rb""))
",DATA_IMPORT_EXTRACTION
4074,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[X_127 -----div---->X_130],"128	y = pickle.load(open(""y.pickle"",""rb""))
129	
130	X = X/255.0
131	
",DATA_TRANSFORM
4075,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[y_128 -----y---->y_binary_155],"153	
154	from keras.utils import to_categorical
155	y_binary = to_categorical(y)
156	
",DATA_TRANSFORM
4076,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[X_130 -----x---->model_161],"159	             metrics=['accuracy'])
160	
161	model.fit(X,y_binary,batch_size=10, epochs=20, validation_split = 0.2)
162	
",MODEL_TRAIN
4077,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_132 -----add---->model_134],"132	model = Sequential()
133	
134	model.add(Conv2D(64,(3,3),input_shape= X.shape[1:]))
135	model.add(Activation(""relu""))
",MODEL_TRAIN
4078,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[keras.models -----sequential---->model_132],"130	X = X/255.0
131	
132	model = Sequential()
133	
",MODEL_TRAIN
4079,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_134 -----add---->model_135],"133	
134	model.add(Conv2D(64,(3,3),input_shape= X.shape[1:]))
135	model.add(Activation(""relu""))
136	model.add(MaxPooling2D(pool_size=(2,2)))
",MODEL_TRAIN
4080,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_135 -----add---->model_136],"134	model.add(Conv2D(64,(3,3),input_shape= X.shape[1:]))
135	model.add(Activation(""relu""))
136	model.add(MaxPooling2D(pool_size=(2,2)))
137	
",MODEL_TRAIN
4081,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_136 -----add---->model_138],"136	model.add(MaxPooling2D(pool_size=(2,2)))
137	
138	model.add(Conv2D(64,(3,3)))
139	model.add(Activation(""relu""))
",MODEL_TRAIN
4082,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_138 -----add---->model_139],"137	
138	model.add(Conv2D(64,(3,3)))
139	model.add(Activation(""relu""))
140	model.add(MaxPooling2D(pool_size=(2,2)))
",MODEL_TRAIN
4083,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_139 -----add---->model_140],"138	model.add(Conv2D(64,(3,3)))
139	model.add(Activation(""relu""))
140	model.add(MaxPooling2D(pool_size=(2,2)))
141	
",MODEL_TRAIN
4084,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_140 -----add---->model_142],"140	model.add(MaxPooling2D(pool_size=(2,2)))
141	
142	model.add(Conv2D(64,(3,3)))
143	model.add(Activation(""relu""))
",MODEL_TRAIN
4085,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_142 -----add---->model_143],"141	
142	model.add(Conv2D(64,(3,3)))
143	model.add(Activation(""relu""))
144	model.add(MaxPooling2D(pool_size=(2,2)))
",MODEL_TRAIN
4086,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_143 -----add---->model_144],"142	model.add(Conv2D(64,(3,3)))
143	model.add(Activation(""relu""))
144	model.add(MaxPooling2D(pool_size=(2,2)))
145	
",MODEL_TRAIN
4087,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_144 -----add---->model_146],"144	model.add(MaxPooling2D(pool_size=(2,2)))
145	
146	model.add(Flatten())
147	model.add(Dense(64))
",MODEL_TRAIN
4088,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_146 -----add---->model_147],"145	
146	model.add(Flatten())
147	model.add(Dense(64))
148	model.add(Activation(""relu""))
",MODEL_TRAIN
4089,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_147 -----add---->model_148],"146	model.add(Flatten())
147	model.add(Dense(64))
148	model.add(Activation(""relu""))
149	
",MODEL_TRAIN
4090,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_148 -----add---->model_151],"149	
150	
151	model.add(Dense(36))
152	model.add(Activation(""softmax""))
",MODEL_TRAIN
4091,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_151 -----add---->model_152],"150	
151	model.add(Dense(36))
152	model.add(Activation(""softmax""))
153	
",MODEL_TRAIN
4092,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_152 -----compile---->model_157],"155	y_binary = to_categorical(y)
156	
157	model.compile(loss=""categorical_crossentropy"",
158	             optimizer=""adam"",
",MODEL_TRAIN
4093,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[y_binary_155 -----y binary---->model_161],"159	             metrics=['accuracy'])
160	
161	model.fit(X,y_binary,batch_size=10, epochs=20, validation_split = 0.2)
162	
",MODEL_TRAIN
4094,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[keras.utils -----to categorical---->y_binary_155],"153	
154	from keras.utils import to_categorical
155	y_binary = to_categorical(y)
156	
",DATA_TRANSFORM
4095,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[model_157 -----fit---->model_161],"159	             metrics=['accuracy'])
160	
161	model.fit(X,y_binary,batch_size=10, epochs=20, validation_split = 0.2)
162	
",MODEL_TRAIN
4096,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[path_64_intermediate_1 -----join---->path_64],"os -----path---->path_64_intermediate_1
X_108_intermediate_1 -----join---->X_108",DATA_IMPORT_EXTRACTION
4097,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[X_105_intermediate_1 -----append---->X_105],"X_101 -----loop---->X_105_intermediate_1
X_108_intermediate_1 -----append---->X_108
X_108_intermediate_1 -----end_loop---->X_108",MODEL_TRAIN
4098,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[y_106_intermediate_1 -----append---->y_106],"y_102 -----loop---->y_106_intermediate_1
X_108_intermediate_1 -----append---->X_108
X_108_intermediate_1 -----end_loop---->X_108",DATA_TRANSFORM
4099,00021b37d0f57a55a15f62e3deb5960ddd835831.execution_graph,[X_108_intermediate_1 -----reshape---->X_108],"numpy -----array---->X_108_intermediate_1
X_108_intermediate_1 -----reshape---->X_108
X_108_intermediate_1 -----x---->X_108
X_108_intermediate_1 -----reassign---->X_108",DATA_TRANSFORM
4100,00021f061a709627545d56d425452607acf6df84.execution_graph,[iris_8 -----data---->x_10],"8	iris = datasets.load_iris()
9	
10	x=iris.data
11	y=iris.target
",DATA_TRANSFORM
4101,00021f061a709627545d56d425452607acf6df84.execution_graph,[iris_8 -----target---->y_11],"9	
10	x=iris.data
11	y=iris.target
12	
",DATA_TRANSFORM
4102,00021f061a709627545d56d425452607acf6df84.execution_graph,[sklearn -----datasets---->iris_8_intermediate_1],"iris_8_intermediate_1 -----datasets---->iris_8
iris_8_intermediate_1 -----load iris---->iris_8",DATA_IMPORT_EXTRACTION
4103,00021f061a709627545d56d425452607acf6df84.execution_graph,[x_10 -----x---->x_train_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",MODEL_TRAIN
4104,00021f061a709627545d56d425452607acf6df84.execution_graph,[x_10 -----x---->x_test_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",DATA_TRANSFORM
4105,00021f061a709627545d56d425452607acf6df84.execution_graph,[x_10 -----x---->y_train_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",MODEL_TRAIN
4106,00021f061a709627545d56d425452607acf6df84.execution_graph,[x_10 -----x---->y_test_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",MODEL_EVALUATION
4107,00021f061a709627545d56d425452607acf6df84.execution_graph,[y_11 -----y---->x_train_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",MODEL_TRAIN
4108,00021f061a709627545d56d425452607acf6df84.execution_graph,[y_11 -----y---->x_test_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",MODEL_TRAIN
4109,00021f061a709627545d56d425452607acf6df84.execution_graph,[y_11 -----y---->y_train_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",MODEL_TRAIN
4110,00021f061a709627545d56d425452607acf6df84.execution_graph,[y_11 -----y---->y_test_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",DATA_TRANSFORM
4111,00021f061a709627545d56d425452607acf6df84.execution_graph,[sklearn.model_selection -----train test split---->x_train_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",MODEL_TRAIN
4112,00021f061a709627545d56d425452607acf6df84.execution_graph,[sklearn.model_selection -----train test split---->x_test_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",MODEL_TRAIN
4113,00021f061a709627545d56d425452607acf6df84.execution_graph,[sklearn.model_selection -----train test split---->y_train_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",MODEL_TRAIN
4114,00021f061a709627545d56d425452607acf6df84.execution_graph,[sklearn.model_selection -----train test split---->y_test_13],"11	y=iris.target
12	
13	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
14	
",MODEL_TRAIN
4115,00021f061a709627545d56d425452607acf6df84.execution_graph,[iris_8_intermediate_1 -----load iris---->iris_8],"sklearn -----datasets---->iris_8_intermediate_1
iris_8_intermediate_1 -----load iris---->iris_8
iris_8_intermediate_1 -----data---->iris_8
iris_8_intermediate_1 -----target---->iris_8",DATA_IMPORT_EXTRACTION
4116,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[tensorflow -----version---->tf2_7],"5	#tf1.disable_eager_execution()
6	
7	tf2.__version__
8	
",ENVIRONMENT
4117,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[tensorflow -----keras---->x_train_9_intermediate_1],"ckpt_54_intermediate_2 -----version---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----datasets---->ckpt_54",DATA_TRANSFORM
4118,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[tensorflow -----keras---->y_train_9_intermediate_1],"ckpt_54_intermediate_2 -----version---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----datasets---->ckpt_54",DATA_TRANSFORM
4119,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[tensorflow -----keras---->None_9_intermediate_1],"ckpt_54_intermediate_2 -----version---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----datasets---->ckpt_54",DATA_TRANSFORM
4120,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[tensorflow -----keras---->x_test_9_intermediate_1],"ckpt_54_intermediate_2 -----version---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----datasets---->ckpt_54",DATA_TRANSFORM
4121,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[tensorflow -----keras---->y_test_9_intermediate_1],"ckpt_54_intermediate_2 -----version---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----datasets---->ckpt_54",DATA_TRANSFORM
4122,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[tensorflow -----keras---->keras_15_intermediate_1],"ckpt_54_intermediate_2 -----version---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----backend---->ckpt_54",ENVIRONMENT
4123,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[tensorflow -----keras---->keras_46_intermediate_1],"ckpt_54_intermediate_2 -----version---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----backend---->ckpt_54",ENVIRONMENT
4124,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[tensorflow -----train---->ckpt_48_intermediate_1],"ckpt_54_intermediate_2 -----version---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----checkpoint---->ckpt_54",MODEL_TRAIN
4125,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[tensorflow -----train---->manager_49_intermediate_1],"ckpt_54_intermediate_2 -----version---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----keras---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----checkpoint manager---->ckpt_54",MODEL_TRAIN
4126,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_train_9 -----reshape---->x_train_10_intermediate_1],"x_train_9_intermediate_3 -----load data---->x_train_9
ckpt_54_intermediate_2 -----reshape---->ckpt_54
ckpt_54_intermediate_2 -----astype---->ckpt_54",DATA_TRANSFORM
4127,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[y_train_9 -----astype---->y_train_12],"10	x_train = x_train.reshape(60000, 28, 28, 1).astype('float32') / 255
11	x_test = x_test.reshape(10000, 28,28, 1).astype('float32') / 255
12	y_train = y_train.astype('float32')
13	y_test = y_test.astype('float32')
",MODEL_TRAIN
4128,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_test_9 -----reshape---->x_test_11_intermediate_1],"x_test_9_intermediate_3 -----load data---->x_test_9
ckpt_54_intermediate_2 -----reshape---->ckpt_54
ckpt_54_intermediate_2 -----astype---->ckpt_54",DATA_TRANSFORM
4129,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[y_test_9 -----astype---->y_test_13],"11	x_test = x_test.reshape(10000, 28,28, 1).astype('float32') / 255
12	y_train = y_train.astype('float32')
13	y_test = y_test.astype('float32')
14	
",DATA_TRANSFORM
4130,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_train_10 -----x train---->m_39],"37	with tf1.Session() as sess:
38	  for i in range(2):
39	    m.fit(x_train, y_train, batch_size=128)
40	    saver.save(sess, ""./tf_ckpt/model"")
",MODEL_TRAIN
4131,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_train_10 -----x train---->m_53],"51	ckpt.restore(manager.latest_checkpoint)
52	for i in range(2):
53	  m.fit(x_train, y_train, batch_size=128)
54	  ckpt.step.assign_add(1)
",MODEL_TRAIN
4132,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[y_train_12 -----y train---->m_39],"37	with tf1.Session() as sess:
38	  for i in range(2):
39	    m.fit(x_train, y_train, batch_size=128)
40	    saver.save(sess, ""./tf_ckpt/model"")
",MODEL_TRAIN
4133,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[y_train_12 -----y train---->m_53],"51	ckpt.restore(manager.latest_checkpoint)
52	for i in range(2):
53	  m.fit(x_train, y_train, batch_size=128)
54	  ckpt.step.assign_add(1)
",MODEL_TRAIN
4134,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[m_35 -----loop---->m_39_intermediate_1],"loop_m_35_m_39 -----restart_loop---->m_35
ckpt_54_intermediate_2 -----loop---->ckpt_54
ckpt_54_intermediate_2 -----fit---->ckpt_54",MODEL_TRAIN
4135,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[opt_35 -----reassign---->opt_47],"45	
46	keras.backend.clear_session()
47	m, opt = get_model()
48	ckpt = tf2.train.Checkpoint(step=tf2.Variable(1), optimizer=opt, net=m)
",MODEL_TRAIN
4136,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[saver_36 -----loop---->saver_40_intermediate_1],"loop_saver_36_saver_40 -----restart_loop---->saver_36
saver_36_intermediate_1 -----saver---->saver_36
ckpt_54_intermediate_2 -----loop---->ckpt_54
ckpt_54_intermediate_2 -----save---->ckpt_54",DATA_EXPORT
4137,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[tensorflow.compat.v1 -----train---->saver_36_intermediate_1],"ckpt_54_intermediate_2 -----train---->ckpt_54
ckpt_54_intermediate_2 -----saver---->ckpt_54",MODEL_TRAIN
4138,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[m_39 -----end_loop---->loop_m_35_m_39],"
",MODEL_TRAIN
4139,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[saver_40 -----end_loop---->loop_saver_36_saver_40],"
",DATA_EXPORT
4140,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[loop_m_35_m_39 -----restart_loop---->m_35],"
",MODEL_TRAIN
4141,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[loop_m_35_m_39 -----reassign---->m_47],"45	
46	keras.backend.clear_session()
47	m, opt = get_model()
48	ckpt = tf2.train.Checkpoint(step=tf2.Variable(1), optimizer=opt, net=m)
",MODEL_TRAIN
4142,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[loop_saver_36_saver_40 -----restart_loop---->saver_36],"
",DATA_EXPORT
4143,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[m_47 -----loop---->m_53_intermediate_1],"loop_m_35_m_39 -----reassign---->m_47
loop_m_47_m_53 -----restart_loop---->m_47
ckpt_54_intermediate_2 -----loop---->ckpt_54
ckpt_54_intermediate_2 -----fit---->ckpt_54",MODEL_TRAIN
4144,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[ckpt_48 -----ckpt---->manager_49],"47	m, opt = get_model()
48	ckpt = tf2.train.Checkpoint(step=tf2.Variable(1), optimizer=opt, net=m)
49	manager = tf2.train.CheckpointManager(ckpt, './tf_ckpt_v2', max_to_keep=3)
50	
",MODEL_TRAIN
4145,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[ckpt_48 -----restore---->ckpt_51],"49	manager = tf2.train.CheckpointManager(ckpt, './tf_ckpt_v2', max_to_keep=3)
50	
51	ckpt.restore(manager.latest_checkpoint)
52	for i in range(2):
",MODEL_TRAIN
4146,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[manager_49 -----manager---->ckpt_51],"49	manager = tf2.train.CheckpointManager(ckpt, './tf_ckpt_v2', max_to_keep=3)
50	
51	ckpt.restore(manager.latest_checkpoint)
52	for i in range(2):
",MODEL_TRAIN
4147,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[manager_49 -----save---->save_path_55],"53	  m.fit(x_train, y_train, batch_size=128)
54	  ckpt.step.assign_add(1)
55	  save_path = manager.save()
56	  print(""Saved checkpoint for step {}: {}"".format(int(ckpt.step), save_path))
",MODEL_TRAIN
4148,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[ckpt_51 -----loop---->ckpt_54_intermediate_1],"ckpt_48 -----restore---->ckpt_51
manager_49 -----manager---->ckpt_51
loop_ckpt_51_ckpt_54 -----restart_loop---->ckpt_51
ckpt_54_intermediate_2 -----loop---->ckpt_54
ckpt_54_intermediate_2 -----step---->ckpt_54",MODEL_TRAIN
4149,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[m_53 -----end_loop---->loop_m_47_m_53],"
",MODEL_TRAIN
4150,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[ckpt_54 -----end_loop---->loop_ckpt_51_ckpt_54],"
",MODEL_TRAIN
4151,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[loop_m_47_m_53 -----restart_loop---->m_47],"
",MODEL_TRAIN
4152,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[loop_ckpt_51_ckpt_54 -----restart_loop---->ckpt_51],"
",MODEL_TRAIN
4153,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_train_9_intermediate_1 -----datasets---->x_train_9_intermediate_2],"tensorflow -----keras---->x_train_9_intermediate_1
ckpt_54_intermediate_2 -----datasets---->ckpt_54
ckpt_54_intermediate_2 -----mnist---->ckpt_54",DATA_TRANSFORM
4154,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_train_9_intermediate_2 -----mnist---->x_train_9_intermediate_3],"x_train_9_intermediate_1 -----datasets---->x_train_9_intermediate_2
ckpt_54_intermediate_2 -----mnist---->ckpt_54
ckpt_54_intermediate_2 -----load data---->ckpt_54",DATA_IMPORT_EXTRACTION
4155,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_train_9_intermediate_3 -----load data---->x_train_9],"x_train_9_intermediate_2 -----mnist---->x_train_9_intermediate_3
ckpt_54_intermediate_2 -----load data---->ckpt_54
ckpt_54_intermediate_2 -----reshape---->ckpt_54",DATA_IMPORT_EXTRACTION
4156,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[y_train_9_intermediate_1 -----datasets---->y_train_9_intermediate_2],"tensorflow -----keras---->y_train_9_intermediate_1
ckpt_54_intermediate_2 -----datasets---->ckpt_54
ckpt_54_intermediate_2 -----mnist---->ckpt_54",DATA_TRANSFORM
4157,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[y_train_9_intermediate_2 -----mnist---->y_train_9_intermediate_3],"y_train_9_intermediate_1 -----datasets---->y_train_9_intermediate_2
ckpt_54_intermediate_2 -----mnist---->ckpt_54
ckpt_54_intermediate_2 -----load data---->ckpt_54",DATA_IMPORT_EXTRACTION
4158,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[y_train_9_intermediate_3 -----load data---->y_train_9],"y_train_9_intermediate_2 -----mnist---->y_train_9_intermediate_3
ckpt_54_intermediate_2 -----load data---->ckpt_54
ckpt_54_intermediate_2 -----astype---->ckpt_54",DATA_IMPORT_EXTRACTION
4159,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[None_9_intermediate_1 -----datasets---->None_9_intermediate_2],"tensorflow -----keras---->None_9_intermediate_1
ckpt_54_intermediate_2 -----datasets---->ckpt_54
ckpt_54_intermediate_2 -----mnist---->ckpt_54",DATA_IMPORT_EXTRACTION
4160,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[None_9_intermediate_2 -----mnist---->None_9_intermediate_3],"None_9_intermediate_1 -----datasets---->None_9_intermediate_2
ckpt_54_intermediate_2 -----mnist---->ckpt_54
ckpt_54_intermediate_2 -----load data---->ckpt_54",DATA_TRANSFORM
4161,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[None_9_intermediate_3 -----load data---->None_9],"None_9_intermediate_2 -----mnist---->None_9_intermediate_3
ckpt_54_intermediate_2 -----load data---->ckpt_54",DATA_TRANSFORM
4162,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_test_9_intermediate_1 -----datasets---->x_test_9_intermediate_2],"tensorflow -----keras---->x_test_9_intermediate_1
ckpt_54_intermediate_2 -----datasets---->ckpt_54
ckpt_54_intermediate_2 -----mnist---->ckpt_54",DATA_TRANSFORM
4163,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_test_9_intermediate_2 -----mnist---->x_test_9_intermediate_3],"x_test_9_intermediate_1 -----datasets---->x_test_9_intermediate_2
ckpt_54_intermediate_2 -----mnist---->ckpt_54
ckpt_54_intermediate_2 -----load data---->ckpt_54",DATA_TRANSFORM
4164,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_test_9_intermediate_3 -----load data---->x_test_9],"x_test_9_intermediate_2 -----mnist---->x_test_9_intermediate_3
ckpt_54_intermediate_2 -----load data---->ckpt_54
ckpt_54_intermediate_2 -----reshape---->ckpt_54",DATA_IMPORT_EXTRACTION
4165,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[y_test_9_intermediate_1 -----datasets---->y_test_9_intermediate_2],"tensorflow -----keras---->y_test_9_intermediate_1
ckpt_54_intermediate_2 -----datasets---->ckpt_54
ckpt_54_intermediate_2 -----mnist---->ckpt_54",DATA_TRANSFORM
4166,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[y_test_9_intermediate_2 -----mnist---->y_test_9_intermediate_3],"y_test_9_intermediate_1 -----datasets---->y_test_9_intermediate_2
ckpt_54_intermediate_2 -----mnist---->ckpt_54
ckpt_54_intermediate_2 -----load data---->ckpt_54",DATA_TRANSFORM
4167,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[y_test_9_intermediate_3 -----load data---->y_test_9],"y_test_9_intermediate_2 -----mnist---->y_test_9_intermediate_3
ckpt_54_intermediate_2 -----load data---->ckpt_54
ckpt_54_intermediate_2 -----astype---->ckpt_54",DATA_IMPORT_EXTRACTION
4168,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[keras_15_intermediate_1 -----backend---->keras_15_intermediate_2],"tensorflow -----keras---->keras_15_intermediate_1
ckpt_54_intermediate_2 -----backend---->ckpt_54
ckpt_54_intermediate_2 -----clear session---->ckpt_54",ENVIRONMENT
4169,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[keras_15_intermediate_2 -----clear session---->keras_15],"keras_15_intermediate_1 -----backend---->keras_15_intermediate_2
ckpt_54_intermediate_2 -----clear session---->ckpt_54",ENVIRONMENT
4170,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[keras_46_intermediate_1 -----backend---->keras_46_intermediate_2],"tensorflow -----keras---->keras_46_intermediate_1
ckpt_54_intermediate_2 -----backend---->ckpt_54
ckpt_54_intermediate_2 -----clear session---->ckpt_54",ENVIRONMENT
4171,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[keras_46_intermediate_2 -----clear session---->keras_46],"keras_46_intermediate_1 -----backend---->keras_46_intermediate_2
ckpt_54_intermediate_2 -----clear session---->ckpt_54",ENVIRONMENT
4172,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[ckpt_48_intermediate_1 -----checkpoint---->ckpt_48],"tensorflow -----train---->ckpt_48_intermediate_1
ckpt_54_intermediate_2 -----checkpoint---->ckpt_54
ckpt_54_intermediate_2 -----ckpt---->ckpt_54
ckpt_54_intermediate_2 -----restore---->ckpt_54",MODEL_TRAIN
4173,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[manager_49_intermediate_1 -----checkpoint manager---->manager_49],"tensorflow -----train---->manager_49_intermediate_1
ckpt_54_intermediate_2 -----checkpoint manager---->ckpt_54
ckpt_54_intermediate_2 -----manager---->ckpt_54
ckpt_54_intermediate_2 -----save---->ckpt_54",MODEL_TRAIN
4174,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_train_10_intermediate_1 -----astype---->x_train_10_intermediate_2],"x_train_9 -----reshape---->x_train_10_intermediate_1
ckpt_54_intermediate_2 -----astype---->ckpt_54
ckpt_54_intermediate_2 -----div---->ckpt_54",DATA_TRANSFORM
4175,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_train_10_intermediate_2 -----div---->x_train_10],"x_train_10_intermediate_1 -----astype---->x_train_10_intermediate_2
ckpt_54_intermediate_2 -----div---->ckpt_54
ckpt_54_intermediate_2 -----x train---->ckpt_54
ckpt_54_intermediate_2 -----x train---->ckpt_54",DATA_TRANSFORM
4176,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_test_11_intermediate_1 -----astype---->x_test_11_intermediate_2],"x_test_9 -----reshape---->x_test_11_intermediate_1
ckpt_54_intermediate_2 -----astype---->ckpt_54
ckpt_54_intermediate_2 -----div---->ckpt_54",DATA_TRANSFORM
4177,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[x_test_11_intermediate_2 -----div---->x_test_11],"x_test_11_intermediate_1 -----astype---->x_test_11_intermediate_2
ckpt_54_intermediate_2 -----div---->ckpt_54",DATA_TRANSFORM
4178,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[m_39_intermediate_1 -----fit---->m_39],"m_35 -----loop---->m_39_intermediate_1
ckpt_54_intermediate_2 -----fit---->ckpt_54
ckpt_54_intermediate_2 -----end_loop---->ckpt_54",MODEL_TRAIN
4179,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[saver_40_intermediate_1 -----save---->saver_40],"saver_36 -----loop---->saver_40_intermediate_1
ckpt_54_intermediate_2 -----save---->ckpt_54
ckpt_54_intermediate_2 -----end_loop---->ckpt_54",DATA_EXPORT
4180,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[saver_36_intermediate_1 -----saver---->saver_36],"tensorflow.compat.v1 -----train---->saver_36_intermediate_1
ckpt_54_intermediate_2 -----saver---->ckpt_54
ckpt_54_intermediate_2 -----loop---->ckpt_54",DATA_EXPORT
4181,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[m_53_intermediate_1 -----fit---->m_53],"m_47 -----loop---->m_53_intermediate_1
ckpt_54_intermediate_2 -----fit---->ckpt_54
ckpt_54_intermediate_2 -----end_loop---->ckpt_54",MODEL_TRAIN
4182,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[ckpt_54_intermediate_1 -----step---->ckpt_54_intermediate_2],"ckpt_51 -----loop---->ckpt_54_intermediate_1
ckpt_54_intermediate_2 -----step---->ckpt_54
ckpt_54_intermediate_2 -----assign add---->ckpt_54",MODEL_TRAIN
4183,0002263886a35df0362cae39a0f7333a476bc758.execution_graph,[ckpt_54_intermediate_2 -----assign add---->ckpt_54],"ckpt_54_intermediate_1 -----step---->ckpt_54_intermediate_2
ckpt_54_intermediate_2 -----assign add---->ckpt_54
ckpt_54_intermediate_2 -----end_loop---->ckpt_54",MODEL_TRAIN
4184,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[high_df_9 -----as matrix---->high_f_12],"10	low_df = pd.read_csv(""low_conc_feat-2.csv"")
11	
12	high_f = high_df.as_matrix()
13	low_f = low_df.as_matrix()
",DATA_TRANSFORM
4185,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[pandas -----read csv---->high_df_9],"7	from sklearn.neighbors import KNeighborsClassifier
8	
9	high_df = pd.read_csv(""high_conc_feat-2.csv"")
10	low_df = pd.read_csv(""low_conc_feat-2.csv"")
",DATA_IMPORT_EXTRACTION
4186,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[pandas -----read csv---->low_df_10],"8	
9	high_df = pd.read_csv(""high_conc_feat-2.csv"")
10	low_df = pd.read_csv(""low_conc_feat-2.csv"")
11	
",DATA_IMPORT_EXTRACTION
4187,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[low_df_10 -----as matrix---->low_f_13],"11	
12	high_f = high_df.as_matrix()
13	low_f = low_df.as_matrix()
14	high_f = high_f[:low_f.shape[0],:]
",DATA_TRANSFORM
4188,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,"[high_f_12 -----high f[:low f shape[0],:]---->high_f_14]","12	high_f = high_df.as_matrix()
13	low_f = low_df.as_matrix()
14	high_f = high_f[:low_f.shape[0],:]
15	high_label = np.ones(high_f.shape[0])
",DATA_TRANSFORM
4189,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[low_f_13 -----shape---->high_f_14],"12	high_f = high_df.as_matrix()
13	low_f = low_df.as_matrix()
14	high_f = high_f[:low_f.shape[0],:]
15	high_label = np.ones(high_f.shape[0])
",DATA_TRANSFORM
4190,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[low_f_13 -----low f---->low_label_16],"14	high_f = high_f[:low_f.shape[0],:]
15	high_label = np.ones(high_f.shape[0])
16	low_label = np.zeros(low_f.shape[0])
17	
",DATA_TRANSFORM
4191,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[high_f_14 -----high f---->high_label_15],"13	low_f = low_df.as_matrix()
14	high_f = high_f[:low_f.shape[0],:]
15	high_label = np.ones(high_f.shape[0])
16	low_label = np.zeros(low_f.shape[0])
",DATA_TRANSFORM
4192,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[numpy -----ones---->high_label_15],"13	low_f = low_df.as_matrix()
14	high_f = high_f[:low_f.shape[0],:]
15	high_label = np.ones(high_f.shape[0])
16	low_label = np.zeros(low_f.shape[0])
",DATA_TRANSFORM
4193,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[numpy -----zeros---->low_label_16],"14	high_f = high_f[:low_f.shape[0],:]
15	high_label = np.ones(high_f.shape[0])
16	low_label = np.zeros(low_f.shape[0])
17	
",DATA_TRANSFORM
4194,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[numpy -----concatenate---->joined_data_18],"16	low_label = np.zeros(low_f.shape[0])
17	
18	joined_data = np.concatenate((high_f, low_f), axis=0)
19	joined_labels = np.concatenate((high_label, low_label), axis=0)
",DATA_TRANSFORM
4195,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[numpy -----concatenate---->joined_labels_19],"17	
18	joined_data = np.concatenate((high_f, low_f), axis=0)
19	joined_labels = np.concatenate((high_label, low_label), axis=0)
20	
",DATA_TRANSFORM
4196,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[numpy -----min---->min_val_22],"20	
21	for i in range(0,5):
22	    min_val = np.min(joined_data[:,i])
23	    max_val = np.max(joined_data[:,i])
",DATA_TRANSFORM
4197,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[numpy -----max---->max_val_23],"21	for i in range(0,5):
22	    min_val = np.min(joined_data[:,i])
23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
",DATA_TRANSFORM
4198,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[joined_data_18 -----loop---->joined_data_24_intermediate_1],"numpy -----concatenate---->joined_data_18
loop_joined_data_18_joined_data_24 -----restart_loop---->joined_data_18
clf_28_intermediate_1 -----loop---->clf_28
clf_28_intermediate_1 -----joined data---->clf_28
clf_28_intermediate_1 -----joined data---->clf_28
clf_28_intermediate_1 -----joined data[:,i]---->clf_28",DATA_TRANSFORM
4199,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[joined_data_18 -----joined data---->min_val_22],"20	
21	for i in range(0,5):
22	    min_val = np.min(joined_data[:,i])
23	    max_val = np.max(joined_data[:,i])
",DATA_TRANSFORM
4200,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[joined_data_18 -----joined data---->max_val_23],"21	for i in range(0,5):
22	    min_val = np.min(joined_data[:,i])
23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
",DATA_TRANSFORM
4201,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[joined_labels_19 -----joined labels---->X_train_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",DATA_TRANSFORM
4202,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[joined_labels_19 -----joined labels---->X_test_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",DATA_TRANSFORM
4203,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[joined_labels_19 -----joined labels---->y_train_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",DATA_TRANSFORM
4204,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[joined_labels_19 -----joined labels---->y_test_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",DATA_TRANSFORM
4205,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[joined_data_24 -----end_loop---->loop_joined_data_18_joined_data_24],"
",DATA_TRANSFORM
4206,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[min_val_22 -----sub---->joined_data_24],"22	    min_val = np.min(joined_data[:,i])
23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
",DATA_TRANSFORM
4207,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[max_val_23 -----sub---->joined_data_24],"22	    min_val = np.min(joined_data[:,i])
23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
",DATA_TRANSFORM
4208,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[loop_joined_data_18_joined_data_24 -----restart_loop---->joined_data_18],"
",DATA_TRANSFORM
4209,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[loop_joined_data_18_joined_data_24 -----joined data---->X_train_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",MODEL_TRAIN
4210,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[loop_joined_data_18_joined_data_24 -----joined data---->X_test_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",MODEL_EVALUATION
4211,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[loop_joined_data_18_joined_data_24 -----joined data---->y_train_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",DATA_TRANSFORM
4212,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[loop_joined_data_18_joined_data_24 -----joined data---->y_test_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",DATA_TRANSFORM
4213,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[X_train_25 -----x train---->scores_29],"27	
28	clf = svm.SVC(kernel='linear', C=1)
29	scores = cross_val_score(clf, X_train, y_train, cv=5)
30	scores.mean()
",MODEL_EVALUATION
4214,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[X_train_25 -----x train---->scores_knn_33],"31	
32	neigh = KNeighborsClassifier(n_neighbors=9)
33	scores_knn = cross_val_score(neigh, X_train, y_train, cv=10)
34	scores_knn
",MODEL_EVALUATION
4215,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[sklearn.model_selection -----train test split---->X_train_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",MODEL_TRAIN
4216,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[sklearn.model_selection -----train test split---->X_test_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",MODEL_EVALUATION
4217,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[sklearn.model_selection -----train test split---->y_train_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",DATA_TRANSFORM
4218,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[sklearn.model_selection -----train test split---->y_test_25],"23	    max_val = np.max(joined_data[:,i])
24	    joined_data[:,i] = (joined_data[:,i] - min_val)/(max_val-min_val)
25	X_train, X_test, y_train, y_test = train_test_split(
26	     joined_data, joined_labels, test_size=0.3, random_state=0)
",MODEL_EVALUATION
4219,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[sklearn.model_selection -----cross val score---->scores_29],"27	
28	clf = svm.SVC(kernel='linear', C=1)
29	scores = cross_val_score(clf, X_train, y_train, cv=5)
30	scores.mean()
",MODEL_EVALUATION
4220,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[sklearn.model_selection -----cross val score---->scores_knn_33],"31	
32	neigh = KNeighborsClassifier(n_neighbors=9)
33	scores_knn = cross_val_score(neigh, X_train, y_train, cv=10)
34	scores_knn
",MODEL_EVALUATION
4221,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[y_train_25 -----y train---->scores_29],"27	
28	clf = svm.SVC(kernel='linear', C=1)
29	scores = cross_val_score(clf, X_train, y_train, cv=5)
30	scores.mean()
",MODEL_EVALUATION
4222,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[y_train_25 -----y train---->scores_knn_33],"31	
32	neigh = KNeighborsClassifier(n_neighbors=9)
33	scores_knn = cross_val_score(neigh, X_train, y_train, cv=10)
34	scores_knn
",MODEL_EVALUATION
4223,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[clf_28 -----clf---->scores_29],"27	
28	clf = svm.SVC(kernel='linear', C=1)
29	scores = cross_val_score(clf, X_train, y_train, cv=5)
30	scores.mean()
",MODEL_EVALUATION
4224,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[sklearn -----svm---->clf_28_intermediate_1],"clf_28_intermediate_1 -----svm---->clf_28
clf_28_intermediate_1 -----svc---->clf_28",MODEL_TRAIN
4225,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[scores_29 -----mean---->scores_30],"28	clf = svm.SVC(kernel='linear', C=1)
29	scores = cross_val_score(clf, X_train, y_train, cv=5)
30	scores.mean()
31	
",MODEL_EVALUATION
4226,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[neigh_32 -----neigh---->scores_knn_33],"31	
32	neigh = KNeighborsClassifier(n_neighbors=9)
33	scores_knn = cross_val_score(neigh, X_train, y_train, cv=10)
34	scores_knn
",MODEL_EVALUATION
4227,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[sklearn.neighbors -----kneighbors classifier---->neigh_32],"30	scores.mean()
31	
32	neigh = KNeighborsClassifier(n_neighbors=9)
33	scores_knn = cross_val_score(neigh, X_train, y_train, cv=10)
",MODEL_TRAIN
4228,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[scores_knn_33 -----scores knn---->scores_knn_34],"32	neigh = KNeighborsClassifier(n_neighbors=9)
33	scores_knn = cross_val_score(neigh, X_train, y_train, cv=10)
34	scores_knn
35	
",MODEL_EVALUATION
4229,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,"[joined_data_24_intermediate_1 -----joined data[:,i]---->joined_data_24_intermediate_2]","joined_data_18 -----loop---->joined_data_24_intermediate_1
clf_28_intermediate_1 -----joined data[:,i]---->clf_28
clf_28_intermediate_1 -----sub---->clf_28",DATA_TRANSFORM
4230,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[joined_data_24_intermediate_2 -----sub---->joined_data_24],"joined_data_24_intermediate_1 -----joined data[:,i]---->joined_data_24_intermediate_2
clf_28_intermediate_1 -----sub---->clf_28
clf_28_intermediate_1 -----end_loop---->clf_28",DATA_TRANSFORM
4231,00023a075a73c0418ccea22b3d7e4af41bd7637f.execution_graph,[clf_28_intermediate_1 -----svc---->clf_28],"sklearn -----svm---->clf_28_intermediate_1
clf_28_intermediate_1 -----svc---->clf_28
clf_28_intermediate_1 -----clf---->clf_28",MODEL_TRAIN
4232,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[initial_6 -----initial---->initial_df_7],"5	
6	initial = np.load(""lstm_basic/initial.npy"")
7	initial_df = pd.DataFrame(initial, columns=[""initial""])
8	
",DATA_TRANSFORM
4233,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[numpy -----load---->initial_6],"4	from matplotlib import pyplot as plt
5	
6	initial = np.load(""lstm_basic/initial.npy"")
7	initial_df = pd.DataFrame(initial, columns=[""initial""])
",DATA_IMPORT_EXTRACTION
4234,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[numpy -----load---->output1_9],"7	initial_df = pd.DataFrame(initial, columns=[""initial""])
8	
9	output1 = np.load(""lstm_batch50/output.npy"")
10	output1_df = pd.DataFrame(output1, columns=[""output (batch: 50)""], 
",DATA_IMPORT_EXTRACTION
4235,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[numpy -----load---->output2_14],"12	losses1_df = pd.DataFrame(np.load(""lstm_batch50/losses.npy""), columns=[""epoch"", ""loss (batch: 50)""])
13	
14	output2 = np.load(""lstm_basic/output.npy"")
15	output2_df = pd.DataFrame(output2, columns=[""output (batch: 100)""], index=range(len(initial), len(initial) + len(output2)))
",DATA_IMPORT_EXTRACTION
4236,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[numpy -----load---->output3_18],"16	losses2_df = pd.DataFrame(np.load(""lstm_basic/losses.npy""), columns=[""epoch"", ""loss (batch: 100)""])
17	
18	output3 = np.load(""lstm_batch200/output.npy"")
19	output3_df = pd.DataFrame(output3, columns=[""output (batch: 200)""], index=range(len(initial), len(initial) + len(output3)))
",DATA_IMPORT_EXTRACTION
4237,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[numpy -----load---->train_22],"20	losses3_df = pd.DataFrame(np.load(""lstm_batch200/losses.npy""), columns=[""epoch"", ""loss (batch: 200)""])
21	
22	train = np.load(""train_data/normal.npy"")
23	train_df = pd.DataFrame(train[:,0], columns=[""train""])
",DATA_IMPORT_EXTRACTION
4238,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[pandas -----data frame---->initial_df_7],"5	
6	initial = np.load(""lstm_basic/initial.npy"")
7	initial_df = pd.DataFrame(initial, columns=[""initial""])
8	
",DATA_TRANSFORM
4239,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[pandas -----data frame---->output1_df_10],"8	
9	output1 = np.load(""lstm_batch50/output.npy"")
10	output1_df = pd.DataFrame(output1, columns=[""output (batch: 50)""], 
11	                          index=range(len(initial), len(initial)+len(output1)))
",DATA_TRANSFORM
4240,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[pandas -----data frame---->losses1_df_12],"10	output1_df = pd.DataFrame(output1, columns=[""output (batch: 50)""], 
11	                          index=range(len(initial), len(initial)+len(output1)))
12	losses1_df = pd.DataFrame(np.load(""lstm_batch50/losses.npy""), columns=[""epoch"", ""loss (batch: 50)""])
13	
",DATA_TRANSFORM
4241,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[pandas -----data frame---->output2_df_15],"13	
14	output2 = np.load(""lstm_basic/output.npy"")
15	output2_df = pd.DataFrame(output2, columns=[""output (batch: 100)""], index=range(len(initial), len(initial) + len(output2)))
16	losses2_df = pd.DataFrame(np.load(""lstm_basic/losses.npy""), columns=[""epoch"", ""loss (batch: 100)""])
",DATA_TRANSFORM
4242,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[pandas -----data frame---->losses2_df_16],"14	output2 = np.load(""lstm_basic/output.npy"")
15	output2_df = pd.DataFrame(output2, columns=[""output (batch: 100)""], index=range(len(initial), len(initial) + len(output2)))
16	losses2_df = pd.DataFrame(np.load(""lstm_basic/losses.npy""), columns=[""epoch"", ""loss (batch: 100)""])
17	
",DATA_TRANSFORM
4243,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[pandas -----data frame---->output3_df_19],"17	
18	output3 = np.load(""lstm_batch200/output.npy"")
19	output3_df = pd.DataFrame(output3, columns=[""output (batch: 200)""], index=range(len(initial), len(initial) + len(output3)))
20	losses3_df = pd.DataFrame(np.load(""lstm_batch200/losses.npy""), columns=[""epoch"", ""loss (batch: 200)""])
",DATA_TRANSFORM
4244,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[pandas -----data frame---->losses3_df_20],"18	output3 = np.load(""lstm_batch200/output.npy"")
19	output3_df = pd.DataFrame(output3, columns=[""output (batch: 200)""], index=range(len(initial), len(initial) + len(output3)))
20	losses3_df = pd.DataFrame(np.load(""lstm_batch200/losses.npy""), columns=[""epoch"", ""loss (batch: 200)""])
21	
",DATA_TRANSFORM
4245,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[pandas -----data frame---->train_df_23],"21	
22	train = np.load(""train_data/normal.npy"")
23	train_df = pd.DataFrame(train[:,0], columns=[""train""])
24	
",DATA_TRANSFORM
4246,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[pandas -----concat---->merged_25],"23	train_df = pd.DataFrame(train[:,0], columns=[""train""])
24	
25	merged = pd.concat([train_df, initial_df, output1_df, output2_df, output3_df])
26	
",DATA_TRANSFORM
4247,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[output1_9 -----output1---->output1_df_10],"8	
9	output1 = np.load(""lstm_batch50/output.npy"")
10	output1_df = pd.DataFrame(output1, columns=[""output (batch: 50)""], 
11	                          index=range(len(initial), len(initial)+len(output1)))
",DATA_TRANSFORM
4248,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[output2_14 -----output2---->output2_df_15],"13	
14	output2 = np.load(""lstm_basic/output.npy"")
15	output2_df = pd.DataFrame(output2, columns=[""output (batch: 100)""], index=range(len(initial), len(initial) + len(output2)))
16	losses2_df = pd.DataFrame(np.load(""lstm_basic/losses.npy""), columns=[""epoch"", ""loss (batch: 100)""])
",DATA_TRANSFORM
4249,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[output3_18 -----output3---->output3_df_19],"17	
18	output3 = np.load(""lstm_batch200/output.npy"")
19	output3_df = pd.DataFrame(output3, columns=[""output (batch: 200)""], index=range(len(initial), len(initial) + len(output3)))
20	losses3_df = pd.DataFrame(np.load(""lstm_batch200/losses.npy""), columns=[""epoch"", ""loss (batch: 200)""])
",DATA_TRANSFORM
4250,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[train_22 -----train---->train_df_23],"21	
22	train = np.load(""train_data/normal.npy"")
23	train_df = pd.DataFrame(train[:,0], columns=[""train""])
24	
",DATA_TRANSFORM
4251,00023a44ea0b32a6943777f6e8cd10ec2553a622.execution_graph,[merged_25 -----plot---->merged_27],"25	merged = pd.concat([train_df, initial_df, output1_df, output2_df, output3_df])
26	
27	merged.plot(figsize=(15,5), grid=True, style=[""-"",""-"",""-"",""-"",""k--""])
28	
",EDA
